{"version":3,"sources":["n1-main/m1-ui/PacksList/PacksList.module.scss","n1-main/m1-ui/Login/Login.module.scss","n1-main/m1-ui/Registration/Register.module.scss","n1-main/m1-ui/Learn/Learn.module.scss","n1-main/m1-ui/CardsList/AddCardForm/AddCardForm.module.scss","n1-main/m1-ui/Profile/PersonalInfo/PersonalInfo.module.scss","n1-main/m1-ui/CardsList/TableCards/TableDataCards/EditCardForm/EditCardForm.module.scss","n1-main/m1-ui/RestorePassword/RestorePassword.module.scss","n1-main/m1-ui/HeaderMain/HeaderMain.module.scss","n1-main/m1-ui/PacksList/AddPackForm/AddPackForm.module.scss","n1-main/m1-ui/NewPassword/NewPassword.module.scss","n1-main/m1-ui/CardsList/CardsList.module.scss","n1-main/m1-ui/Profile/Profile.module.scss","n1-main/m1-ui/PacksList/TablePacks/TableDataPacks/EditPackform/EditPackForm.module.scss","n1-main/m1-ui/common/Paginator/Paginator.module.scss","n1-main/m1-ui/PacksList/TablePacks/TableDataPacks/TableDataPacks.module.scss","n1-main/m1-ui/common/Modal/Modal.module.scss","n1-main/m1-ui/CheckPassword/CheckPassword.module.scss","n1-main/m1-ui/CardsList/TableCards/TableDataCards/TableDataCards.module.scss","n1-main/m1-ui/PacksList/TablePacks/TableDataPacks/DeletePackForm/DeletePackForm.module.scss","n1-main/m1-ui/CardsList/TableCards/TableDataCards/DeleteCardForm/DeleteCardForm.module.scss","n1-main/m1-ui/Profile/UserInfo/UserInfo.module.scss","n1-main/m1-ui/CardsList/TableCards/TableCards.module.scss","n1-main/m1-ui/common/SuperInput/SuperInputText.module.scss","n1-main/m1-ui/Profile/UserInfoCards/UserInfoCards.module.scss","n1-main/m1-ui/PacksList/TablePacks/TablePacks.module.scss","n1-main/m1-ui/PacksList/TablePacks/TableHeaderPacks/TableHeaderPacks.module.scss","n1-main/App.module.scss","n1-main/m1-ui/common/SuperButton/SuperButton.module.css","n1-main/m1-ui/TestComponents/TestComponents.module.css","n1-main/m1-ui/common/SuperCheckbox/SuperCheckbox.module.css","n1-main/m1-ui/CardsList/TableCards/TableHeaderCards/TableHeaderCards.module.scss","n1-main/m1-ui/common/preloader/Preloader.module.scss","n1-main/m1-ui/PacksList/DoubleRange/DoubleRange.module.scss","reportWebVitals.ts","n1-main/m3-dal/apiLogin.ts","n1-main/m3-dal/apiProfile.ts","n1-main/m2-bll/profileReducer.ts","n1-main/m3-dal/apiRegister.ts","n1-main/m2-bll/registerReducer.ts","n1-main/m2-bll/authReducer.ts","n1-main/m3-dal/apiRestore.ts","n1-main/m2-bll/restorePasswordReducer.ts","n1-main/m3-dal/apiPacks.ts","n1-main/m2-bll/packsReducer.ts","n1-main/m3-dal/apiCards.ts","n1-main/m2-bll/cardsReducer.ts","n1-main/m3-dal/apiLearn.ts","n1-main/m2-bll/learnReducer.ts","n1-main/m2-bll/store.ts","n1-main/m1-ui/common/SuperInput/SuperInputText.tsx","n1-main/m1-ui/common/SuperButton/SuperButton.tsx","assets/images/eye.svg","assets/images/closedEye.svg","n1-main/m1-ui/common/preloader/Preloader.tsx","n1-main/m1-ui/Login/Login.tsx","assets/images/avatar.png","n1-main/m1-ui/Profile/UserInfo/UserInfo.tsx","n1-main/m1-ui/common/SuperDoubleRange/SuperDoubleRange.tsx","n1-main/m1-ui/PacksList/DoubleRange/DoubleRange.tsx","n1-main/m1-ui/Profile/UserInfoCards/UserInfoCards.tsx","n1-main/m1-ui/common/Search/Search.tsx","assets/images/DownSort.svg","assets/images/UpSort.svg","n1-main/m1-ui/PacksList/TablePacks/TableHeaderPacks/TableHeaderPacks.tsx","n1-main/m1-ui/common/Modal/Modal.tsx","n1-main/m1-ui/PacksList/TablePacks/TableDataPacks/DeletePackForm/DeletePackForm.tsx","n1-main/m1-ui/PacksList/TablePacks/TableDataPacks/EditPackform/EditPackForm.tsx","n1-main/m1-ui/PacksList/TablePacks/TableDataPacks/TableDataPacks.tsx","n1-main/m1-ui/PacksList/TablePacks/TablePacks.tsx","n1-main/m1-ui/common/SuperSelect/SuperSelect.tsx","n1-main/m1-ui/common/Paginator/Paginator.tsx","n1-main/m1-ui/PacksList/AddPackForm/AddPackForm.tsx","n1-main/m1-ui/Profile/Profile.tsx","n1-main/m1-ui/PageNotFound/PageNotFound.tsx","assets/images/letter.svg","n1-main/m1-ui/CheckPassword/CheckPassword.tsx","n1-main/m1-ui/RestorePassword/RestorePassword.tsx","n1-main/m1-ui/NewPassword/NewPassword.tsx","n1-main/m1-ui/common/SuperCheckbox/SuperCheckbox.tsx","n1-main/m1-ui/TestComponents/TestComponents.tsx","n1-main/m1-ui/Profile/PersonalInfo/PersonalInfo.tsx","n1-main/m1-ui/Registration/Register.tsx","n1-main/m1-ui/HeaderMain/HeaderMain.tsx","n1-main/m1-ui/PacksList/PacksList.tsx","n1-main/m1-ui/CardsList/TableCards/TableHeaderCards/TableHeaderCards.tsx","n1-main/m1-ui/CardsList/TableCards/TableDataCards/EditCardForm/EditCardForm.tsx","n1-main/m1-ui/CardsList/TableCards/TableDataCards/DeleteCardForm/DeleteCardForm.tsx","n1-main/m1-ui/CardsList/TableCards/TableDataCards/TableDataCards.tsx","n1-main/m1-ui/CardsList/TableCards/TableCards.tsx","assets/images/LeftArrow.svg","n1-main/m1-ui/CardsList/AddCardForm/AddCardForm.tsx","n1-main/m1-ui/CardsList/CardsList.tsx","n1-main/m1-ui/Learn/Learn.tsx","n1-main/App.tsx","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","create","baseURL","withCredentials","authAPI","data","post","delete","axiosInstance","profileApi","name","avatar","put","initialState","informationAboutUser","_id","email","publicCardPacksCount","created","Date","updated","isAdmin","verified","rememberMe","error","setInformationAboutUserAC","type","ApiRegister","password","REGISTER_LOADING","REGISTER_ERROR","REGISTER_SUCCESS","registerInitialState","isRegistered","isFetching","setRegisterError","setRegisterLoading","isLoggedIn","setIsLoggedInAC","value","setLoginError","setLoginLoading","isLoggedInApp","dispatch","res","catch","e","response","messages","finally","authApi","message","resetPasswordToken","setShowEmailCheck","showEmailCheck","payload","setRestorePasswordError","setRestorePasswordLoading","isNewPasswordCreated","packsApi","packName","min","max","sortPacks","page","pageCount","user_id","get","params","isPrivate","cardsPack","packId","cardPacks","cardPacksRequestParameters","maxCardsCount","minCardsCount","cardPacksTotalCount","setSearchName","requestedName","setCurrentPage","requestedPage","setUpdatedDirection","direction","setCardsCountDirection","setLoadingPacks","setUserId","userId","setPageCount","count","setRangeSort","range","getDataPacks","getState","a","packs","dataPacks","console","log","createNewPack","editPack","cardsApi","cardsPack_id","cardQuestion","sortCards","question","answer","card","cardId","cards","cardsRequestParameters","cardsTotalCount","cardPackName","packUserId","setLoadingCards","getDataCards","dataCards","createNewCard","editCard","learnApi","grade","card_id","changeCard","setIsFetching","setChangeCard","isChanged","setCards","rootReducer","combineReducers","auth","state","action","profile","updatedUser","restorePassword","register","learn","store","createStore","applyMiddleware","thunk","window","SuperInputText","onChange","onChangeText","onKeyPress","onEnter","className","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","errorInput","superInput","currentTarget","key","map","err","SuperButton","red","finalClassName","default","Preloader","cls","loader","Login","useDispatch","useSelector","useState","setType","formik","useFormik","initialValues","validate","values","errors","test","length","onSubmit","to","PATH","PROFILE","loginContainer","title","subtitle","handleSubmit","titleEmail","inputContainer","getFieldProps","inputEmailPassword","onClick","touched","style","color","match","titlePassword","eye","src","closedEye","alt","checkbox","buttonContainer","button","newAccount","signUp","UserInfo","infoUser","userPhoto","defaultAvatar","userName","editProfileWrapper","Slider","require","Range","createSliderWithTooltip","SuperDoubleRange","onChangeRange","onAfterChange","step","included","handleStyle","trackStyle","railStyle","dotStyle","activeDotStyle","DoubleRange","maxCount","setMin","setMax","useEffect","borderColor","backgroundColor","width","styles","rangeContainer","UserInfoCards","isFetchingPacks","infoUserCards","numberTitle","doubleRangeContainer","Search","handlePressSearch","request","setRequest","placeholder","TableHeaderPacks","cardsArrow","setCardsArrow","updatedArrow","setUpdatedArrow","tableHeader","cardsTitle","downArrow","upArrow","updatedTitle","Modal","active","setActive","children","modalContainer","modalContent","stopPropagation","buttonModal","DeletePackForm","formContainer","cancelButton","deletePack","deleteButton","EditPackForm","onReset","resetForm","htmlFor","label","inputForm","handleChange","errorContainer","buttonWrapper","updateButton","TableDataPacks","cardsCount","updatedDate","updatedTime","appUserId","createdBy","activeDeleteModal","setActiveDeleteModal","activeEditModal","setActiveEditModal","tableData","buttonsContainer","disabled","editLearnButton","localStorage","setItem","TablePacks","packsData","tableContainer","pack","slice","user_name","noPacksTitle","SuperSelect","options","onChangeOption","mappedOptions","o","i","Paginator","itemsTotalCount","changePageCount","onPageChanges","paginatorPage","Math","ceil","marginPagesDisplayed","pageRangeDisplayed","previousLabel","previousClassName","prev","nextLabel","nextClassName","next","activeClassName","selectedPage","onPageChange","selected","containerClassName","container","pageClassName","sortContainer","superSelect","AddPackForm","form","formWrapper","saveButton","Profile","activeModal","setActiveModal","id","minCards","maxCards","updatedDirection","useCallback","blur","onPacksPageChanges","newPackName","prompt","changePacksPageCount","LOGIN","profileContainer","info","packslist","packslistTitle","search_AddButtonContainer","search","addButtonContainer","addPackButton","PageNotFound","pageNotFoundContainer","CheckPassword","checkPasswordContainer","imgContainer","letter","firstNote","secondNote","RestorePassword","restorePasswordContainer","inputEmail","reLogin","NewPassword","token","useParams","newPasswordContainer","inputPassword","margin","note","SuperCheckbox","onChangeChecked","checked","TestComponents","testComponentsContainer","componentsContainer","PersonalInfo","history","useHistory","ava","setAva","nickname","setNickname","infoContainer","imgWrapper","inputNicknameAvatar","push","registerButton","editUserProfileTC","Register","confirmPassword","changeTypeHandler","registrationContainer","HeaderMain","finalClass","setFinalClass","location","useLocation","clickPackListProfileHandler","headerContainer","wrapper","logo","linksContainer","linkContainer","PACKS_LIST","pathname","onMouseEnter","onMouseOut","tabIndex","logoutBtn","PacksList","currentUserId","activeClass","setActiveClass","buttonName","setButtonName","getMyPacksList","getAllPacksList","packlistContainer","ownerTitle","myButton","allButton","TableHeaderCards","gridChangeClass","EditCardForm","DeleteCardForm","deleteCard","TableDataCards","currentPackUserId","size","edit","color2","rating","editButton","TableCards","cardsData","isFetchingCards","noCardsTitle","AddCardForm","CardsList","searchQuestion","setPackId","onCardsPageChanges","changeCardsPageCount","cardslistContainer","cardslist","arrowTitleContainer","arrow","cardslistTitle","grades","Learn","showAnswer","setShowAnswer","currentGrade","setCurrentGrade","getItem","cancelHandler","goBack","setGradeHandler","target","defaultValue","addCard","sum","reduce","acc","rand","random","newSum","getCard","learnContainer","answerTitle","index","answers","buttonsContainerAnswer","cancelAnswerButton","nextButton","noCards","showAnswerButton","CARDS_LIST","LEARN","USER_INFO","REGISTRATION","TEST_COMPONENTS","PAGE_NOT_FOUND","RESTORE_PASSWORD","NEW_PASSWORD","App","mainStyles","appWrapper","appWrapperContent","exact","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.190cbcd2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"packlistContainer\":\"PacksList_packlistContainer__203H9\",\"card\":\"PacksList_card__4iZ9t\",\"info\":\"PacksList_info__1gH48\",\"ownerTitle\":\"PacksList_ownerTitle__G6PSA\",\"buttonsContainer\":\"PacksList_buttonsContainer__cNOXd\",\"active\":\"PacksList_active__2VHiG\",\"myButton\":\"PacksList_myButton__35CDO\",\"allButton\":\"PacksList_allButton__2ktB-\",\"numberTitle\":\"PacksList_numberTitle__1p9tV\",\"packslist\":\"PacksList_packslist__3okA6\",\"packslistTitle\":\"PacksList_packslistTitle__1aQ_O\",\"search_AddButtonContainer\":\"PacksList_search_AddButtonContainer__P3a5F\",\"search\":\"PacksList_search__uEFwQ\",\"addButtonContainer\":\"PacksList_addButtonContainer__2L2UU\",\"addPackButton\":\"PacksList_addPackButton__37DlD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginContainer\":\"Login_loginContainer__1SVOg\",\"card\":\"Login_card__2mLHC\",\"title\":\"Login_title__2UUgW\",\"subtitle\":\"Login_subtitle__DbChu\",\"titleEmail\":\"Login_titleEmail__1iUd3\",\"titlePassword\":\"Login_titlePassword__3ZnqY\",\"inputContainer\":\"Login_inputContainer__JcY_7\",\"eye\":\"Login_eye__1spUq\",\"inputEmailPassword\":\"Login_inputEmailPassword__20Vs6\",\"checkbox\":\"Login_checkbox__2J4mn\",\"rememberMe\":\"Login_rememberMe__3YBcc\",\"restorePassword\":\"Login_restorePassword__PgDBI\",\"buttonContainer\":\"Login_buttonContainer__1lcN7\",\"button\":\"Login_button__2_yDM\",\"newAccount\":\"Login_newAccount__3CJO5\",\"signUp\":\"Login_signUp__2tk-n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registrationContainer\":\"Register_registrationContainer__UmmAC\",\"card\":\"Register_card___EsZn\",\"title\":\"Register_title__27VHU\",\"subtitle\":\"Register_subtitle__3mACY\",\"titleEmail\":\"Register_titleEmail__2SneJ\",\"titlePassword\":\"Register_titlePassword__eIshG\",\"inputContainer\":\"Register_inputContainer__1dcrn\",\"eye\":\"Register_eye__JXYXU\",\"inputEmailPassword\":\"Register_inputEmailPassword__1lV5L\",\"buttonContainer\":\"Register_buttonContainer__37yYJ\",\"cancelButton\":\"Register_cancelButton__Kmh2o\",\"registerButton\":\"Register_registerButton__EbWTP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"learnContainer\":\"Learn_learnContainer__31nqL\",\"card\":\"Learn_card__lYbnu\",\"title\":\"Learn_title__3UJdH\",\"answerTitle\":\"Learn_answerTitle__1JvsM\",\"answers\":\"Learn_answers__3RsWr\",\"label\":\"Learn_label__2sZWu\",\"buttonsContainer\":\"Learn_buttonsContainer__MYfTw\",\"cancelButton\":\"Learn_cancelButton__3L1vc\",\"showAnswerButton\":\"Learn_showAnswerButton__1dlpG\",\"buttonsContainerAnswer\":\"Learn_buttonsContainerAnswer__g--OK\",\"cancelAnswerButton\":\"Learn_cancelAnswerButton__1V-Ny\",\"nextButton\":\"Learn_nextButton__2pU6x\",\"noCards\":\"Learn_noCards__3D1ZM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"AddCardForm_form__3igt-\",\"formWrapper\":\"AddCardForm_formWrapper__14wuS\",\"title\":\"AddCardForm_title__IWcqp\",\"label\":\"AddCardForm_label__3is4F\",\"inputForm\":\"AddCardForm_inputForm__2U_G7\",\"errorContainer\":\"AddCardForm_errorContainer__2niSj\",\"error\":\"AddCardForm_error__3D11J\",\"buttonContainer\":\"AddCardForm_buttonContainer__3Drx-\",\"cancelButton\":\"AddCardForm_cancelButton__3kL6G\",\"saveButton\":\"AddCardForm_saveButton__1fJkf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoContainer\":\"PersonalInfo_infoContainer__2OKjr\",\"card\":\"PersonalInfo_card__3lzkm\",\"title\":\"PersonalInfo_title__1HxQO\",\"imgWrapper\":\"PersonalInfo_imgWrapper__1_NOT\",\"inputContainer\":\"PersonalInfo_inputContainer__20Xds\",\"inputNicknameAvatar\":\"PersonalInfo_inputNicknameAvatar__3kz6z\",\"buttonContainer\":\"PersonalInfo_buttonContainer__2JFke\",\"cancelButton\":\"PersonalInfo_cancelButton__1Goa2\",\"registerButton\":\"PersonalInfo_registerButton__2k6O8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContainer\":\"EditCardForm_formContainer__GbTbk\",\"label\":\"EditCardForm_label__1z2aK\",\"inputForm\":\"EditCardForm_inputForm__1S0KN\",\"errorContainer\":\"EditCardForm_errorContainer__1hwZW\",\"error\":\"EditCardForm_error__17TeU\",\"buttonWrapper\":\"EditCardForm_buttonWrapper__2md2d\",\"cancelButton\":\"EditCardForm_cancelButton__3aCzh\",\"updateButton\":\"EditCardForm_updateButton__2Mlvd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"restorePasswordContainer\":\"RestorePassword_restorePasswordContainer__3wwbJ\",\"card\":\"RestorePassword_card__13eXp\",\"title\":\"RestorePassword_title__7T_Sc\",\"subtitle\":\"RestorePassword_subtitle__6udjQ\",\"inputContainer\":\"RestorePassword_inputContainer__25m67\",\"inputEmail\":\"RestorePassword_inputEmail__2h3fP\",\"firstNote\":\"RestorePassword_firstNote__dHJA8\",\"buttonContainer\":\"RestorePassword_buttonContainer__6b9Rc\",\"button\":\"RestorePassword_button__3OtoL\",\"secondNote\":\"RestorePassword_secondNote__u33ED\",\"reLogin\":\"RestorePassword_reLogin__115Di\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"HeaderMain_headerContainer__1t0Yy\",\"wrapper\":\"HeaderMain_wrapper__x0UjY\",\"logo\":\"HeaderMain_logo__2dm-D\",\"linksContainer\":\"HeaderMain_linksContainer__2Nnya\",\"linkContainer\":\"HeaderMain_linkContainer__25SoB\",\"active\":\"HeaderMain_active__3RSCn\",\"buttonContainer\":\"HeaderMain_buttonContainer__2FGST\",\"logoutBtn\":\"HeaderMain_logoutBtn__3iDpb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"AddPackForm_form__16ghd\",\"formWrapper\":\"AddPackForm_formWrapper__2zmrK\",\"title\":\"AddPackForm_title__1Mbyk\",\"label\":\"AddPackForm_label__lCNh1\",\"inputForm\":\"AddPackForm_inputForm__QW0fm\",\"errorContainer\":\"AddPackForm_errorContainer__1IkXf\",\"error\":\"AddPackForm_error__1pVsw\",\"buttonContainer\":\"AddPackForm_buttonContainer__Qm_Tq\",\"cancelButton\":\"AddPackForm_cancelButton__1VMUb\",\"saveButton\":\"AddPackForm_saveButton__3Ha-o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPasswordContainer\":\"NewPassword_newPasswordContainer__2W262\",\"card\":\"NewPassword_card__2STyj\",\"title\":\"NewPassword_title__3MrsO\",\"subtitle\":\"NewPassword_subtitle__xymY6\",\"inputContainer\":\"NewPassword_inputContainer__aG24R\",\"eye\":\"NewPassword_eye__3Nt59\",\"inputPassword\":\"NewPassword_inputPassword__1jwIk\",\"note\":\"NewPassword_note__3Are5\",\"buttonContainer\":\"NewPassword_buttonContainer__3DPdQ\",\"button\":\"NewPassword_button__3-ZIq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardslistContainer\":\"CardsList_cardslistContainer__2tYhG\",\"card\":\"CardsList_card__3QmT-\",\"cardslist\":\"CardsList_cardslist__2W4xR\",\"arrowTitleContainer\":\"CardsList_arrowTitleContainer__1-CIA\",\"arrow\":\"CardsList_arrow__ojaGm\",\"cardslistTitle\":\"CardsList_cardslistTitle__3lYqw\",\"search_AddButtonContainer\":\"CardsList_search_AddButtonContainer__274tP\",\"search\":\"CardsList_search__3Sgln\",\"addButtonContainer\":\"CardsList_addButtonContainer__3kBXn\",\"addPackButton\":\"CardsList_addPackButton__1ckgR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileContainer\":\"Profile_profileContainer__17JgP\",\"card\":\"Profile_card__1gvrl\",\"info\":\"Profile_info__2n02S\",\"packslist\":\"Profile_packslist__2SfdE\",\"packslistTitle\":\"Profile_packslistTitle__1mJbl\",\"search_AddButtonContainer\":\"Profile_search_AddButtonContainer__3fN0I\",\"search\":\"Profile_search__HslF0\",\"addButtonContainer\":\"Profile_addButtonContainer__SzRXV\",\"addPackButton\":\"Profile_addPackButton__25g_g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContainer\":\"EditPackForm_formContainer__1dpXD\",\"label\":\"EditPackForm_label__cwXks\",\"inputForm\":\"EditPackForm_inputForm__yBNIq\",\"errorContainer\":\"EditPackForm_errorContainer__29T68\",\"error\":\"EditPackForm_error__2KAzm\",\"buttonWrapper\":\"EditPackForm_buttonWrapper__1FzFD\",\"cancelButton\":\"EditPackForm_cancelButton__EelKs\",\"updateButton\":\"EditPackForm_updateButton__3geXQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginatorPage\":\"Paginator_paginatorPage__29P5R\",\"container\":\"Paginator_container__3WYVr\",\"selectedPage\":\"Paginator_selectedPage__1_Qpu\",\"page\":\"Paginator_page__nOPpU\",\"prev\":\"Paginator_prev__2zF4J\",\"next\":\"Paginator_next__3k4_a\",\"sortContainer\":\"Paginator_sortContainer__1n5To\",\"superSelect\":\"Paginator_superSelect__1apV2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableData\":\"TableDataPacks_tableData__28j54\",\"name\":\"TableDataPacks_name__1BRDC\",\"buttonsContainer\":\"TableDataPacks_buttonsContainer__2n0e9\",\"deleteButton\":\"TableDataPacks_deleteButton__1dE5S\",\"editLearnButton\":\"TableDataPacks_editLearnButton__30n4A\",\"none\":\"TableDataPacks_none__1bff1\",\"flexEnd\":\"TableDataPacks_flexEnd__3vAT3\",\"flexBetween\":\"TableDataPacks_flexBetween__23sSd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalContainer\":\"Modal_modalContainer__3Ta3P\",\"active\":\"Modal_active__2viOW\",\"modalContent\":\"Modal_modalContent__ydh5H\",\"buttonModal\":\"Modal_buttonModal__1AetH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkPasswordContainer\":\"CheckPassword_checkPasswordContainer__1ni7O\",\"card\":\"CheckPassword_card__rQtwW\",\"title\":\"CheckPassword_title__3hHul\",\"imgContainer\":\"CheckPassword_imgContainer__tY4ua\",\"subtitle\":\"CheckPassword_subtitle__1yJNt\",\"firstNote\":\"CheckPassword_firstNote__2Ezf9\",\"secondNote\":\"CheckPassword_secondNote__1FTG7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableData\":\"TableDataCards_tableData__XNPX-\",\"stars\":\"TableDataCards_stars__3umgj\",\"rating\":\"TableDataCards_rating__3q6Cn\",\"buttonsContainer\":\"TableDataCards_buttonsContainer__2Rw0P\",\"deleteButton\":\"TableDataCards_deleteButton__3uPNP\",\"editButton\":\"TableDataCards_editButton__2HexG\",\"gridChangeClass\":\"TableDataCards_gridChangeClass__1k7s6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContainer\":\"DeletePackForm_formContainer__21cyG\",\"question\":\"DeletePackForm_question__1_MwA\",\"buttonContainer\":\"DeletePackForm_buttonContainer__1DrZj\",\"cancelButton\":\"DeletePackForm_cancelButton__3USUn\",\"deleteButton\":\"DeletePackForm_deleteButton__2ugZZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContainer\":\"DeleteCardForm_formContainer__3LSmb\",\"question\":\"DeleteCardForm_question__3DF_r\",\"buttonContainer\":\"DeleteCardForm_buttonContainer__1opwJ\",\"cancelButton\":\"DeleteCardForm_cancelButton__1_I06\",\"deleteButton\":\"DeleteCardForm_deleteButton__HvpXC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoUser\":\"UserInfo_infoUser__2-Ur5\",\"userName\":\"UserInfo_userName__20AlV\",\"editProfileWrapper\":\"UserInfo_editProfileWrapper__Sm275\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableContainer\":\"TableCards_tableContainer__1_7bh\",\"tableHeader\":\"TableCards_tableHeader__3Tw_Y\",\"noCardsTitle\":\"TableCards_noCardsTitle__gwifg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorInput\":\"SuperInputText_errorInput__1s9vg\",\"error\":\"SuperInputText_error__1BK8m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoUserCards\":\"UserInfoCards_infoUserCards__1JTR6\",\"doubleRangeContainer\":\"UserInfoCards_doubleRangeContainer__2tjFK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableContainer\":\"TablePacks_tableContainer__TurzH\",\"tableHeader\":\"TablePacks_tableHeader__1CXws\",\"noPacksTitle\":\"TablePacks_noPacksTitle__1pIBz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableHeader\":\"TableHeaderPacks_tableHeader__17xMQ\",\"actions\":\"TableHeaderPacks_actions__1AUYu\",\"cardsTitle\":\"TableHeaderPacks_cardsTitle__24O_f\",\"updatedTitle\":\"TableHeaderPacks_updatedTitle__2JbjM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appWrapper\":\"App_appWrapper__2LlFa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2WNQ6\",\"red\":\"SuperButton_red__1si2j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"testComponentsContainer\":\"TestComponents_testComponentsContainer__2JwAI\",\"componentsContainer\":\"TestComponents_componentsContainer__1m_9P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2drz_\",\"spanClassName\":\"SuperCheckbox_spanClassName__3LAnk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableHeader\":\"TableHeaderCards_tableHeader__16aLi\",\"gridChangeClass\":\"TableHeaderCards_gridChangeClass__zRRr8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Preloader_loader__6QB1q\",\"load7\":\"Preloader_load7__2zpZX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rangeContainer\":\"DoubleRange_rangeContainer__F34VD\",\"numberTitle\":\"DoubleRange_numberTitle__jl1cZ\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from 'axios'\r\nimport {DefaultResponseType} from \"./apiRestore\";\r\n\r\nconst instance = axios.create({\r\n    // baseURL: \"http://localhost:7542/2.0/\",\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0\",\r\n    withCredentials: true,\r\n});\r\n\r\nexport const authAPI = {\r\n    login(data: LoginParamsType) {\r\n        return instance.post<LoginResponseType>(\"auth/login\", data)\r\n    },\r\n    logout() {\r\n        return instance.delete<DefaultResponseType>(\"auth/me\")\r\n    },\r\n    isAuthorized () {\r\n        return instance.post<LoginResponseType>(\"auth/me\",{})\r\n    }\r\n}\r\n\r\n\r\nexport type LoginParamsType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\nexport type LoginResponseType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar: string\r\n    publicCardPacksCount: number\r\n    created: DateConstructor\r\n    updated: DateConstructor\r\n    isAdmin: boolean\r\n    verified: boolean\r\n    rememberMe: boolean\r\n    error?: string\r\n}\r\n","import axios from 'axios'\r\nimport {LoginResponseType} from \"./apiLogin\";\r\n\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    // baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true\r\n})\r\n\r\n//api types\r\n\r\nexport const profileApi = {\r\n    editUserNameAvatar(name: string, avatar: string) {\r\n        return axiosInstance.put<{updatedUser: LoginResponseType}>('/auth/me', {\r\n            name,\r\n            avatar\r\n        })\r\n    }\r\n\r\n}","import {LoginResponseType} from \"../m3-dal/apiLogin\";\r\nimport {AppThunkType} from \"./store\";\r\nimport {profileApi} from \"../m3-dal/apiProfile\";\r\nimport {setLoginLoading} from \"./authReducer\";\r\n\r\ntype InitialStateType = {\r\n    informationAboutUser: LoginResponseType\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    informationAboutUser: {\r\n        _id: \"\",\r\n        email: \"\",\r\n        name: \"\",\r\n        publicCardPacksCount: 0,\r\n        created: Date,\r\n        updated: Date,\r\n        isAdmin: false,\r\n        verified: false,\r\n        rememberMe: false,\r\n        avatar: \"\",\r\n        error: \"\"\r\n    }\r\n}\r\n\r\n/*export type LoginResponseType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar?: string\r\n    publicCardPacksCount: number\r\n    created: Date\r\n    updated: Date\r\n    isAdmin: boolean\r\n    verified: boolean\r\n    rememberMe: boolean\r\n    error?: string\r\n}*/\r\n\r\nexport const profileReducer = (state: InitialStateType = initialState, action: ProfileActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'profile/SET-INFORMATION-ABOUT-USER':\r\n            return {...state, informationAboutUser: action.data}\r\n        case \"profile/SET-UPDATED-USER\":\r\n            return {...state, informationAboutUser: action.updatedUser}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setInformationAboutUserAC = (data: LoginResponseType) =>\r\n    ({type: 'profile/SET-INFORMATION-ABOUT-USER', data} as const)\r\n\r\nexport const setUpdatedUserAC = (updatedUser: LoginResponseType) =>\r\n    ({type: 'profile/SET-UPDATED-USER', updatedUser} as const)\r\n\r\n\r\nexport const editUserProfileTC = (name: string, avatar: string): AppThunkType => (dispatch) => {\r\n    dispatch(setLoginLoading(true))\r\n    profileApi.editUserNameAvatar(name, avatar)\r\n        .then(res => {\r\n            dispatch(setUpdatedUserAC(res.data.updatedUser))\r\n        })\r\n        .catch(err => {\r\n            const error = err.response\r\n                ?\r\n                err.response.data.error\r\n                :\r\n                (err.message + ', more details in the console')\r\n            console.log(`error: ${error}`)\r\n        })\r\n        .finally(()=>{\r\n            dispatch(setLoginLoading(false))\r\n        })\r\n}\r\n\r\nexport type ProfileActionsType = ReturnType<typeof setInformationAboutUserAC | typeof setUpdatedUserAC>","import axios from 'axios'\r\n\r\nexport interface IRegisterData {\r\n  addedUser: {},\r\n  error?: string\r\n}\r\n\r\nconst instance = axios.create({\r\n  // baseURL: \"http://localhost:7542/2.0/\",\r\n  baseURL: 'https://neko-back.herokuapp.com/2.0',\r\n  withCredentials: true,\r\n\r\n})\r\n\r\nexport const ApiRegister = {\r\n  register(email: string, password: string) {\r\n    return instance.post<IRegisterData>(`auth/register`, {email, password})\r\n  },\r\n}\r\n","import { ApiRegister } from '../m3-dal/apiRegister'\r\nimport { AppThunkType } from './store'\r\n\r\nexport const REGISTER_LOADING = 'REGISTER/LOADING'\r\nexport const REGISTER_ERROR = 'REGISTER/ERROR'\r\nexport const REGISTER_SUCCESS = 'REGISTER/SUCCESS'\r\n\r\ntype InitialStateType = {\r\n  isRegistered: boolean,\r\n  error: string | null,\r\n  isFetching: boolean\r\n}\r\n\r\nexport const registerInitialState: InitialStateType = {\r\n  isRegistered: false,\r\n  error: null,\r\n  isFetching: false,\r\n}\r\n\r\n\r\nexport type RegisterActions = ReturnType<typeof setRegisterSuccess\r\n  | typeof setRegisterError\r\n  | typeof setRegisterLoading>;\r\n\r\nexport const setRegisterSuccess = (isRegistered: boolean) => {\r\n  return {\r\n    type: REGISTER_SUCCESS,\r\n    isRegistered,\r\n  } as const\r\n}\r\n\r\nexport const setRegisterError = (error: string | null) => {\r\n  return {\r\n    type: REGISTER_ERROR,\r\n    error,\r\n  } as const\r\n}\r\n\r\nexport const setRegisterLoading = (isFetching: boolean) => {\r\n  return {\r\n    type: REGISTER_LOADING,\r\n    isFetching,\r\n  } as const\r\n}\r\n\r\nexport const registerReducer = (state = registerInitialState, action: RegisterActions): InitialStateType => {\r\n  switch (action.type) {\r\n    case REGISTER_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        isRegistered: action.isRegistered,\r\n      }\r\n    }\r\n    case REGISTER_ERROR: {\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n      }\r\n    }\r\n    case REGISTER_LOADING: {\r\n      return {\r\n        ...state,\r\n        isFetching: action.isFetching,\r\n      }\r\n    }\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const register =\r\n  (email: string, password: string): AppThunkType => async (dispatch) => {\r\n    dispatch(setRegisterLoading(true))\r\n    try {\r\n      await ApiRegister.register(email, password)\r\n      dispatch(setRegisterSuccess(true))\r\n    } catch (e) {\r\n      const error = e.response.data.error\r\n      dispatch(setRegisterError(error))\r\n    }\r\n    finally {\r\n      dispatch(setRegisterLoading(false))\r\n    }\r\n  }","import {authAPI, LoginParamsType} from \"../m3-dal/apiLogin\";\r\nimport {setInformationAboutUserAC} from \"./profileReducer\";\r\nimport {AppThunkType} from \"./store\";\r\nimport {REGISTER_ERROR, REGISTER_LOADING} from \"./registerReducer\";\r\n\r\ntype InitialStateType = {\r\n    isFetching: boolean\r\n    isLoggedIn: boolean\r\n    error: string | null\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    isFetching: false,\r\n    isLoggedIn: false,\r\n    error: null\r\n}\r\n\r\n// actions\r\nexport const setIsLoggedInAC = (value: boolean) =>\r\n    ({type: 'login/SET-IS-LOGGED-IN', value} as const)\r\n\r\nexport const setIsLoggedOutAC = (value: boolean) =>\r\n    ({type: 'logout/SET-IS-LOGGED-OUT', value} as const)\r\n\r\nexport const setLoginError = (error: string | null) => {\r\n    return {\r\n        type: REGISTER_ERROR,\r\n        error,\r\n    } as const\r\n}\r\n\r\nexport const setLoginLoading = (isFetching: boolean) => {\r\n    return {\r\n        type: REGISTER_LOADING,\r\n        isFetching,\r\n    } as const\r\n}\r\n\r\n//reducer\r\n\r\nexport const authReducer = (state: InitialStateType = initialState, action: AuthActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'login/SET-IS-LOGGED-IN':\r\n        case 'logout/SET-IS-LOGGED-OUT':\r\n            return {...state, isLoggedIn: action.value}\r\n        case \"REGISTER/ERROR\":\r\n            return {...state, error: action.error}\r\n        case \"REGISTER/LOADING\":\r\n            return {...state, isFetching: action.isFetching}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// thunks\r\nexport const loginTC = (data: LoginParamsType): AppThunkType => (dispatch) => {\r\n    dispatch(setLoginLoading(true))\r\n    authAPI.login(data)\r\n        .then(res => {\r\n            dispatch(setInformationAboutUserAC(res.data))\r\n            dispatch(setIsLoggedInAC(true))\r\n        })\r\n        .catch((e) => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.messages + ', more details in the console')\r\n            dispatch(setLoginError(error))\r\n        })\r\n        .finally(() => {\r\n            dispatch(setLoginLoading(false))\r\n        })\r\n}\r\n\r\nexport const logoutTC = (): AppThunkType => (dispatch) => {\r\n    dispatch(setLoginLoading(true))\r\n    authAPI.logout()\r\n        .then(res => {\r\n            dispatch(setIsLoggedOutAC(false))\r\n            dispatch(setLoginError(\"logout\"))//why this dispatch in then ????? may be in catch\r\n        })\r\n        .catch((e) => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.messages + ', more details in the console')\r\n        })\r\n        .finally(() => {\r\n            dispatch(setLoginLoading(false))\r\n        })\r\n}\r\n\r\nexport const isLoggedInApp = (): AppThunkType => (dispatch) => {\r\n    dispatch(setLoginLoading(true))\r\n    authAPI.isAuthorized()\r\n        .then(res => {\r\n            dispatch(setInformationAboutUserAC(res.data))\r\n            dispatch(setIsLoggedInAC(true))\r\n        })\r\n        .catch((e) => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.messages + ', more details in the console')\r\n            dispatch(setLoginError(error))\r\n        })\r\n        .finally(() => {\r\n            dispatch(setLoginLoading(false))\r\n        })\r\n}\r\n\r\nexport type AuthActionsType = ReturnType<typeof setIsLoggedInAC\r\n    | typeof setInformationAboutUserAC\r\n    | typeof setIsLoggedOutAC\r\n    | typeof setLoginError\r\n    | typeof setLoginLoading\r\n    > // изменили запись в одну строчку !!","import axios from 'axios'\r\n\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    // baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true\r\n})\r\n\r\n//api types\r\n\r\nexport type DefaultResponseType = {\r\n    info: string\r\n    error: string | null\r\n}\r\n\r\nlet backGroundColor = \"linear-gradient(180deg, #E6D4DE 0%, #9890C7 100%)\"\r\n\r\nexport const authApi = {\r\n    restorePassword(email: string) {\r\n        return axiosInstance.post<DefaultResponseType>('/auth/forgot', {\r\n            email,\r\n            message: `<div style='background: ${backGroundColor}; padding: 15px'>\r\n                      <p>To restore your password, follow the link below</p>\r\n                      <a href='https://georgeusynin.github.io/cards-react-redux/#/new_password/$token$'>Restore link</a>\r\n                      </div>`\r\n        })\r\n    },\r\n    setNewPassword(password: string, resetPasswordToken: string) {\r\n        return axiosInstance.post<DefaultResponseType>('/auth/set-new-password', {\r\n            password,\r\n            resetPasswordToken\r\n        })\r\n    }\r\n}","//types\r\n\r\nimport {AppThunkType} from \"./store\";\r\nimport {authApi} from \"../m3-dal/apiRestore\";\r\n\r\ntype InitialStateType = {\r\n    showEmailCheck: boolean\r\n    error: string | null\r\n    isNewPasswordCreated: boolean\r\n    isFetching: boolean\r\n}\r\n\r\nexport type RestorePasswordActionsType =\r\n\r\n    | ReturnType<typeof setShowEmailCheck>\r\n    | ReturnType<typeof setRestorePasswordError>\r\n    | ReturnType<typeof setIsNewPasswordCreated>\r\n    | ReturnType<typeof setRestorePasswordLoading>\r\n\r\n//actions\r\n\r\nexport const setShowEmailCheck = (showEmailCheck: boolean) => {\r\n    return {\r\n        type: 'cards/restorePassword/setShowEmailCheck',\r\n        payload: {\r\n            showEmailCheck\r\n        }\r\n    } as const\r\n}\r\n\r\nexport const setRestorePasswordError = (error: string | null) => {\r\n    return {\r\n        type: 'cards/restorePassword/setError',\r\n        payload: {\r\n            error\r\n        }\r\n    } as const\r\n}\r\nconst setIsNewPasswordCreated = (isNewPasswordCreated: boolean) => {\r\n    return {\r\n        type: 'cards/restorePassword/setIsNewPasswordCreated',\r\n        payload: {\r\n            isNewPasswordCreated\r\n        }\r\n    } as const\r\n}\r\n\r\nexport const setRestorePasswordLoading = (isFetching: boolean) => {\r\n    return {\r\n        type: 'cards/restorePassword/setRestorePasswordLoading',\r\n        payload: {\r\n            isFetching\r\n        }\r\n    } as const\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    showEmailCheck: false,\r\n    error: null,\r\n    isNewPasswordCreated: false,\r\n    isFetching: false\r\n}\r\n\r\nexport const restorePasswordReducer = (state: InitialStateType = initialState, action: RestorePasswordActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"cards/restorePassword/setShowEmailCheck\":\r\n        case \"cards/restorePassword/setError\":\r\n        case \"cards/restorePassword/setIsNewPasswordCreated\":\r\n        case 'cards/restorePassword/setRestorePasswordLoading':\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\n//thunk\r\n\r\nexport const restorePassword = (email: string): AppThunkType => (dispatch) => {\r\n    dispatch(setRestorePasswordLoading(true))\r\n    authApi.restorePassword(email)\r\n        .then(res => {\r\n            dispatch(setShowEmailCheck(true))\r\n        })\r\n        .catch(err => {\r\n            const error = err.response\r\n                ?\r\n                err.response.data.error\r\n                :\r\n                (err.message + ', more details in the console')\r\n            dispatch(setRestorePasswordError(error))\r\n        })\r\n        .finally(()=>{\r\n            dispatch(setRestorePasswordLoading(false))\r\n        })\r\n}\r\n\r\nexport const setNewPassword = (password: string, resetPasswordToken: string): AppThunkType => (dispatch) => {\r\n    dispatch(setRestorePasswordLoading(true))\r\n    authApi.setNewPassword(password, resetPasswordToken)\r\n        .then(res => {\r\n            debugger\r\n            dispatch(setIsNewPasswordCreated(true))\r\n        })\r\n        .catch(err => {\r\n            const error = err.response\r\n                ?\r\n                err.response.data.error\r\n                :\r\n                (err.message + ', more details in the console')\r\n            dispatch(setRestorePasswordError(error))\r\n        })\r\n        .finally(()=>{\r\n            dispatch(setRestorePasswordLoading(false))\r\n        })\r\n}","import axios from 'axios'\r\nimport {CardPackType} from \"../m2-bll/packsReducer\";\r\n\r\n\r\nexport type PacksResponseType = {\r\n    cardPacks: Array<CardPackType>\r\n    cardPacksTotalCount: number\r\n    maxCardsCount: number\r\n    minCardsCount: number\r\n    page: number\r\n    pageCount: number\r\n    token: string\r\n    tokenDeathTime: number\r\n}\r\n\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    // baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true\r\n})\r\n\r\nexport const packsApi = {\r\n    getPacks(packName?: string, min?: number, max?: number, sortPacks?: string, page?: number, pageCount?: number, user_id?: string) {\r\n        return axiosInstance.get<PacksResponseType>(\"/cards/pack\", {\r\n            params: {\r\n                packName,\r\n                min,\r\n                max,\r\n                sortPacks,\r\n                page,\r\n                pageCount,\r\n                user_id\r\n            }\r\n        }).then(res => res.data)\r\n    },\r\n    createNewPack(name: string, isPrivate: boolean = false) {\r\n        return axiosInstance.post<CardPackType>(\"cards/pack\", {\r\n            cardsPack: {\r\n                name,\r\n                isPrivate\r\n            }\r\n        })\r\n    },\r\n    deletePack(packId: string) {\r\n        return axiosInstance.delete<CardPackType>(`cards/pack?id=${packId}`)\r\n    },\r\n    editPack(_id: string, name: string) {\r\n        return axiosInstance.put<CardPackType>(`cards/pack`, {\r\n            cardsPack: {\r\n                _id,\r\n                name\r\n            }\r\n        })\r\n    }\r\n}","import {AppThunkType} from \"./store\";\r\nimport {packsApi, PacksResponseType} from \"../m3-dal/apiPacks\";\r\nimport {\r\n    CardsCountDirectionType,\r\n    UpdatedDirectionType\r\n} from \"../m1-ui/PacksList/TablePacks/TableHeaderPacks/TableHeaderPacks\";\r\n\r\nexport type CardPackType = {\r\n    _id: string\r\n    user_id: string\r\n    name: string\r\n    cardsCount: number\r\n    created: string\r\n    updated: string\r\n    user_name: string\r\n}\r\n\r\ntype PackRequestParameters = {\r\n    packName: string\r\n    maxCardsCount: number\r\n    minCardsCount: number\r\n    sortPacks: UpdatedDirectionType | CardsCountDirectionType\r\n    pageCount: number\r\n    page: number\r\n    user_id: string\r\n}\r\n\r\ntype InitialStateType = {\r\n    cardPacks: Array<CardPackType>\r\n    cardPacksRequestParameters: PackRequestParameters\r\n    cardPacksTotalCount: number\r\n    maxCardsCount: number\r\n    minCardsCount: number\r\n    isFetching: boolean\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    cardPacks: [],\r\n    cardPacksRequestParameters: {\r\n        page: 1,\r\n        pageCount: 6,\r\n        maxCardsCount: 0,\r\n        minCardsCount: 0,\r\n        sortPacks: \"0updated\",\r\n        packName: \"\",\r\n        user_id: \"\"\r\n    },\r\n    maxCardsCount: 0,\r\n    minCardsCount: 0,\r\n    cardPacksTotalCount: 0,\r\n    isFetching: false\r\n}\r\n\r\n//actions\r\n\r\nexport const setSearchName = (requestedName: string) =>\r\n    ({type: 'packs/SET-SEARCH-NAME', requestedName} as const)\r\n\r\nexport const setCurrentPage = (requestedPage: number) =>\r\n    ({type: 'packs/SET-CURRENT-PAGE', requestedPage} as const)\r\n\r\nexport const setUpdatedDirection = (direction: UpdatedDirectionType) =>\r\n    ({type: 'packs/SET-UPDATED-DIRECTION', direction} as const)\r\n\r\nexport const setCardsCountDirection = (direction: CardsCountDirectionType) =>\r\n    ({type: 'packs/SET-CARDS-COUNT-DIRECTION', direction} as const)\r\n\r\nconst setDataPacks = (dataPacks: PacksResponseType) =>\r\n    ({type: 'packs/SET-PACKS', dataPacks} as const)\r\n\r\nexport const setLoadingPacks = (isFetching: boolean) =>\r\n    ({type: 'packs/SET-LOADING-PACKS', isFetching} as const)\r\n\r\nexport const setUserId = (userId: string) =>\r\n    ({type: 'packs/SET-USER-ID', userId} as const)\r\n\r\nexport const setPageCount = (count: number) =>\r\n    ({type: 'packs/SET-PAGE-COUNT', count} as const)\r\n\r\nexport const setRangeSort = (range: number[]) =>\r\n    ({type: 'packs/SET-RANGE-SORT', range} as const)\r\n\r\n\r\nexport const packsReducer = (state: InitialStateType = initialState, action: PacksActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"packs/SET-PACKS\":\r\n            return {...state, ...action.dataPacks}\r\n        case \"packs/SET-USER-ID\":\r\n            return {...state, cardPacksRequestParameters: {...state.cardPacksRequestParameters, user_id: action.userId}}\r\n        case \"packs/SET-SEARCH-NAME\":\r\n            return {\r\n                ...state,\r\n                cardPacksRequestParameters: {...state.cardPacksRequestParameters, packName: action.requestedName}\r\n            }\r\n        case \"packs/SET-CURRENT-PAGE\":\r\n            return {\r\n                ...state,\r\n                cardPacksRequestParameters: {...state.cardPacksRequestParameters, page: action.requestedPage}\r\n            }\r\n        case \"packs/SET-UPDATED-DIRECTION\":\r\n        case \"packs/SET-CARDS-COUNT-DIRECTION\":\r\n            return {\r\n                ...state,\r\n                cardPacksRequestParameters: {...state.cardPacksRequestParameters, sortPacks: action.direction}\r\n            }\r\n        case \"packs/SET-PAGE-COUNT\":\r\n            return {\r\n                ...state,\r\n                cardPacksRequestParameters: {...state.cardPacksRequestParameters, pageCount: action.count}\r\n            }\r\n        case \"packs/SET-RANGE-SORT\":\r\n            return {\r\n                ...state,\r\n                cardPacksRequestParameters: {\r\n                    ...state.cardPacksRequestParameters,\r\n                    minCardsCount: action.range[0],\r\n                    maxCardsCount: action.range[1]\r\n                }\r\n            }\r\n        case \"packs/SET-LOADING-PACKS\":\r\n            return {...state, isFetching: action.isFetching}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//thunks\r\n\r\nexport const getDataPacks = (): AppThunkType => async (dispatch, getState) => {\r\n    dispatch(setLoadingPacks(true))\r\n\r\n    try {\r\n\r\n        const {\r\n            packName,\r\n            minCardsCount,\r\n            maxCardsCount,\r\n            sortPacks,\r\n            page,\r\n            pageCount,\r\n            user_id\r\n        } = getState().packs.cardPacksRequestParameters\r\n        dispatch(setLoadingPacks(true))\r\n        const packs = await packsApi.getPacks(packName, minCardsCount, maxCardsCount, sortPacks, page, pageCount, user_id)\r\n        dispatch(setDataPacks(packs))\r\n    } catch (e) {\r\n        console.log(e)\r\n    } finally {\r\n        dispatch(setLoadingPacks(false))\r\n    }\r\n}\r\n\r\nexport const createNewPack = (name: string, isPrivate?: boolean): AppThunkType => async (dispatch) => {\r\n    dispatch(setLoadingPacks(true))\r\n    try {\r\n        dispatch(setLoadingPacks(true))\r\n        await packsApi.createNewPack(name, isPrivate)\r\n        dispatch(getDataPacks())\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const deletePack = (packId: string): AppThunkType => async (dispatch) => {\r\n    dispatch(setLoadingPacks(true))\r\n    try {\r\n        dispatch(setLoadingPacks(true))\r\n        await packsApi.deletePack(packId)\r\n        dispatch(getDataPacks())\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const editPack = (packId: string, name: string): AppThunkType => async (dispatch) => {\r\n    dispatch(setLoadingPacks(true))\r\n    try {\r\n        await packsApi.editPack(packId, name)\r\n        dispatch(getDataPacks())\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\n\r\nexport type PacksActionType = ReturnType<typeof setSearchName\r\n    | typeof setDataPacks\r\n    | typeof setLoadingPacks\r\n    | typeof setCurrentPage\r\n    | typeof setUserId\r\n    | typeof setUpdatedDirection\r\n    | typeof setPageCount\r\n    | typeof setRangeSort\r\n    | typeof setCardsCountDirection>","import axios from 'axios'\r\n\r\nexport type CardResponseType = {\r\n    answer: string\r\n    answerImg: string\r\n    answerVideo: string\r\n    cardsPack_id: string\r\n    comments: string\r\n    created: string\r\n    grade: number\r\n    more_id: string\r\n    question: string\r\n    questionImg: string\r\n    questionVideo: string\r\n    rating: number\r\n    shots: number\r\n    type: string\r\n    updated: string\r\n    user_id: string\r\n    __v: number\r\n    _id: string\r\n}\r\n\r\nexport type CardsResponseType = {\r\n    cards: Array<CardResponseType>\r\n    cardsTotalCount: number\r\n    maxGrade: number\r\n    minGrade: number\r\n    packUserId: string\r\n    page: number\r\n    pageCount: number\r\n    token: string\r\n    tokenDeathTime: number\r\n}\r\n\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    // baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true\r\n})\r\n\r\nexport const cardsApi = {\r\n    getCards(cardsPack_id?: string, cardQuestion?: string, sortCards?: string, page?: number, pageCount?: number) {\r\n        return axiosInstance.get<CardsResponseType>(\"/cards/card\", {\r\n            params: {\r\n                cardQuestion,\r\n                cardsPack_id,\r\n                sortCards,\r\n                page,\r\n                pageCount,\r\n            }\r\n        }).then(res => res.data)\r\n    },\r\n    createNewCard(cardsPack_id: string, question: string, answer: string) {\r\n        return axiosInstance.post<CardResponseType>(\"cards/card\", {\r\n            card: {\r\n                cardsPack_id,\r\n                question,\r\n                answer\r\n            }\r\n        })\r\n    },\r\n    deleteCard(cardId: string) {\r\n        return axiosInstance.delete<CardResponseType>(`cards/card?id=${cardId}`)\r\n    },\r\n    editCard(_id: string, question: string, answer: string){\r\n        return axiosInstance.put<CardResponseType>(`cards/card`,{\r\n            card: {\r\n                _id,\r\n                question,\r\n                answer\r\n            }\r\n        })\r\n    }\r\n}","import {AppThunkType} from \"./store\";\r\nimport {CardResponseType, cardsApi, CardsResponseType} from \"../m3-dal/apiCards\";\r\n\r\n\r\ntype InitialStateType = {\r\n    cards: Array<CardResponseType>\r\n    cardsTotalCount: number\r\n    cardsRequestParameters: {\r\n        cardQuestion: string\r\n        sortCards: string\r\n        page: number\r\n        pageCount: number\r\n    }\r\n    cardsPack_id: string\r\n    cardPackName: string\r\n    packUserId: string\r\n    isFetching: boolean\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    cards: [],\r\n    cardsRequestParameters: {\r\n        cardQuestion: \"\",\r\n        sortCards: \"\",\r\n        page: 1,\r\n        pageCount: 6\r\n    },\r\n    cardsTotalCount: 0,\r\n    cardsPack_id: \"\",\r\n    cardPackName: \"\",\r\n    packUserId: \"\",\r\n    isFetching: false\r\n}\r\n\r\n\r\nexport const setSearchName = (requestedName: string) =>\r\n    ({type: 'cards/SET-SEARCH-NAME', requestedName} as const)\r\n\r\nexport const setDataCards = (dataCards: CardsResponseType) =>\r\n    ({type: 'cards/SET-CARDS', dataCards} as const)\r\n\r\nexport const setPackId = (packId: string) =>\r\n    ({type: 'cards/SET-PACK-ID', packId} as const)\r\n\r\nexport const setCardPackName = (packName: string) =>\r\n    ({type: 'cards/SET-PACK-NAME', packName} as const)\r\n\r\nexport const setCurrentPackId = (packId: string) =>\r\n    ({type: 'cards/SET-CURRENT-PACK-ID', packId} as const)\r\n\r\nexport const setCurrentPage = (requestedPage: number) =>\r\n    ({type: 'cards/SET-CURRENT-PAGE', requestedPage} as const)\r\n\r\nexport const setPageCount = (count: number) =>\r\n    ({type: 'cards/SET-PAGE-COUNT', count} as const)\r\n\r\nexport const setLoadingCards = (isFetching: boolean) =>\r\n    ({type: 'cards/SET-LOADING-CARDS', isFetching} as const)\r\n\r\n\r\nexport const cardsReducer = (state: InitialStateType = initialState, action: CardsActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"cards/SET-CARDS\":\r\n            return {...state, ...action.dataCards}\r\n        case \"cards/SET-PACK-ID\":\r\n            return {...state, cardsPack_id: action.packId}\r\n        case \"cards/SET-PACK-NAME\":\r\n            return {...state, cardPackName: action.packName}\r\n        case \"cards/SET-CURRENT-PAGE\":\r\n            return {...state, cardsRequestParameters: {...state.cardsRequestParameters, page: action.requestedPage}}\r\n        case \"cards/SET-PAGE-COUNT\":\r\n            return {...state, cardsRequestParameters: {...state.cardsRequestParameters, pageCount: action.count}}\r\n        case \"cards/SET-CURRENT-PACK-ID\":\r\n            return {...state, cardsPack_id: action.packId}\r\n        case \"cards/SET-SEARCH-NAME\":\r\n            return {\r\n                ...state,\r\n                cardsRequestParameters: {...state.cardsRequestParameters, cardQuestion: action.requestedName}\r\n            }\r\n        case \"cards/SET-LOADING-CARDS\":\r\n            return {...state, isFetching: action.isFetching}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//thunks\r\n\r\nexport const getDataCards = (): AppThunkType => async (dispatch, getState) => {\r\n    dispatch(setLoadingCards(true))\r\n    try {\r\n        const {\r\n            cardQuestion,\r\n            sortCards,\r\n            page,\r\n            pageCount\r\n        } = getState().cards.cardsRequestParameters\r\n        const cardsPack_id = getState().cards.cardsPack_id\r\n        const cards = await cardsApi.getCards(cardsPack_id, cardQuestion, sortCards, page, pageCount)\r\n        dispatch(setDataCards(cards))\r\n    } catch (e) {\r\n        console.log(e)\r\n    } finally {\r\n        dispatch(setLoadingCards(false))\r\n    }\r\n}\r\n\r\nexport const createNewCard = (question: string, answer: string): AppThunkType => async (dispatch, getState) => {\r\n    dispatch(setLoadingCards(true))\r\n    const cardsPack_id = getState().cards.cardsPack_id\r\n    try {\r\n        await cardsApi.createNewCard(cardsPack_id, question, answer)\r\n        dispatch(getDataCards())\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const deleteCard = (cardId: string): AppThunkType => async (dispatch) => {\r\n    dispatch(setLoadingCards(true))\r\n    try {\r\n        await cardsApi.deleteCard(cardId)\r\n        dispatch(getDataCards())\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const editCard = (cardId: string, question: string, answer: string): AppThunkType => async (dispatch) => {\r\n    dispatch(setLoadingCards(true))\r\n    try {\r\n        await cardsApi.editCard(cardId, question, answer)\r\n        dispatch(getDataCards())\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\n//\r\nexport type CardsActionType = ReturnType<typeof setDataCards\r\n    | typeof setPackId\r\n    | typeof setCardPackName\r\n    | typeof setCurrentPage\r\n    | typeof setPageCount\r\n    | typeof setSearchName\r\n    | typeof setLoadingCards\r\n    | typeof setCurrentPackId>","import axios from \"axios\";\r\nimport {CardsResponseType} from \"./apiCards\";\r\n\r\nexport type GradeResponseType = {\r\n    token: string\r\n    tokenDeathTime: number\r\n    updatedGrade:{\r\n        card_id: string\r\n        cardsPack_id: string\r\n        created: string\r\n        grade: 2\r\n        more_id: string\r\n        shots: 1\r\n        updated: string\r\n        user_id: string\r\n        __v: number\r\n        _id: string\r\n    }\r\n}\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    // baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true\r\n})\r\n\r\nexport const learnApi = {\r\n    getCards(cardsPack_id: string, pageCount: number) {\r\n        return axiosInstance.get<CardsResponseType>(\"/cards/card\", {\r\n            params: {\r\n                cardsPack_id,\r\n                pageCount\r\n            }\r\n        }).then(res => res.data)\r\n    },\r\n    sendGrade(grade: number, card_id?: string) {\r\n        return axiosInstance.put<GradeResponseType>(\"/cards/grade\", {\r\n            grade,\r\n            card_id\r\n        }).then(res => res.data)\r\n    },\r\n\r\n}","import {CardResponseType, CardsResponseType} from \"../m3-dal/apiCards\";\r\nimport {AppThunkType} from \"./store\";\r\nimport {learnApi} from \"../m3-dal/apiLearn\";\r\n\r\ntype InitialStateType = {\r\n    cards: Array<CardResponseType>\r\n    packName: string\r\n    packId: string\r\n    isFetching: boolean\r\n    changeCard: boolean\r\n    card: CardResponseType | null\r\n}\r\n\r\nconst initialState = {\r\n    cards: [],\r\n    packId: \"\",\r\n    packName: \"\",\r\n    isFetching: false,\r\n    changeCard: false,\r\n    card: null\r\n}\r\n\r\n\r\nexport const setPackName = (packName: string) => {\r\n    return {\r\n        type: \"learn/SET-PACK-NAME\",\r\n        packName\r\n    } as const\r\n}\r\nexport const setIsFetching = (isFetching: boolean) => {\r\n    return {\r\n        type: \"learn/SET-IS-FETCHING\",\r\n        isFetching\r\n    } as const\r\n}\r\n\r\nexport const setPackId = (packId: string) => {\r\n    return {\r\n        type: \"learn/SET-PACK-ID\",\r\n        packId\r\n    } as const\r\n}\r\nexport const setChangeCard = (isChanged: boolean) => {\r\n    return {\r\n        type: \"learn/CHANGE-CARD\",\r\n        isChanged\r\n    } as const\r\n}\r\nexport const addCard = (card: CardResponseType) => {\r\n    return {\r\n        type: \"learn/ADD-CARD\",\r\n        card\r\n    } as const\r\n}\r\n\r\nexport const setCards = (cards: CardsResponseType) => {\r\n    return {\r\n        type: \"learn/SET-CARDS\",\r\n        cards\r\n    } as const\r\n}\r\n\r\n\r\nexport const learnReducer = (state: InitialStateType = initialState, action: LearnActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"learn/SET-PACK-NAME\":\r\n            return {...state, packName: action.packName}\r\n        case \"learn/SET-IS-FETCHING\":\r\n            return {...state, isFetching: action.isFetching}\r\n        case \"learn/SET-PACK-ID\":\r\n            return {...state, packId: action.packId}\r\n        case \"learn/SET-CARDS\":\r\n            return {...state, ...action.cards}\r\n        case \"learn/CHANGE-CARD\":\r\n            return {...state, changeCard: action.isChanged}\r\n        case \"learn/ADD-CARD\":\r\n            return {...state, card: action.card}\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\n\r\nexport const getCardsToLearn = (): AppThunkType => async (dispatch, getState) => {\r\n    dispatch(setIsFetching(true))\r\n    try {\r\n        const packId = getState().learn.packId\r\n        const cards = await learnApi.getCards(packId, 10000)\r\n        dispatch(setCards(cards))\r\n        dispatch(setChangeCard(true))\r\n    } catch (e) {\r\n        console.log(e)\r\n    } finally {\r\n        dispatch(setIsFetching(false))\r\n    }\r\n}\r\nexport const sendCardGrade = (grade: number): AppThunkType => async (dispatch, getState) => {\r\n    try {\r\n        const card_id = getState().learn.card?._id\r\n        await learnApi.sendGrade(grade, card_id)\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\n\r\nexport type LearnActionsType = ReturnType<typeof setPackName\r\n    | typeof setIsFetching\r\n    | typeof setPackId\r\n    | typeof setCards\r\n    | typeof setChangeCard\r\n    | typeof addCard>","import {applyMiddleware} from \"redux\";\r\nimport {combineReducers, createStore} from \"redux\";\r\nimport thunk, {ThunkAction} from \"redux-thunk\";\r\nimport {AuthActionsType, authReducer} from \"./authReducer\";\r\nimport {ProfileActionsType, profileReducer} from \"./profileReducer\";\r\nimport {RegisterActions, registerReducer} from './registerReducer'\r\nimport {RestorePasswordActionsType, restorePasswordReducer} from \"./restorePasswordReducer\";\r\nimport {PacksActionType, packsReducer} from \"./packsReducer\";\r\nimport {CardsActionType, cardsReducer} from \"./cardsReducer\";\r\nimport {LearnActionsType, learnReducer} from \"./learnReducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    profile: profileReducer,\r\n    restorePassword: restorePasswordReducer,\r\n    register: registerReducer,\r\n    packs: packsReducer,\r\n    cards: cardsReducer,\r\n    learn: learnReducer\r\n})\r\n\r\nexport type AppActionsType = RestorePasswordActionsType | RegisterActions | AuthActionsType | ProfileActionsType | PacksActionType | CardsActionType | LearnActionsType\r\n\r\nexport type AppThunkType<ReturnType = void> = ThunkAction<ReturnType, AppRootStateType, unknown, AppActionsType>\r\n\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n\r\n//@ts-ignore\r\nwindow.store = store","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.scss'\r\nimport {debuglog} from \"util\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: (e: KeyboardEvent<HTMLInputElement>) => void\r\n    error?: Array<string | null>\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    },\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e)\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter(e) // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={type}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && error.map(err => {\r\n                return <div className={finalSpanClassName}>{err}</div>\r\n            })}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red,\r\n        className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","export default __webpack_public_path__ + \"static/media/eye.109a1739.svg\";","export default __webpack_public_path__ + \"static/media/closedEye.41390b0c.svg\";","import React from \"react\";\r\nimport cls from \"./Preloader.module.scss\"\r\n\r\nexport const Preloader = () => {\r\n    return (\r\n        <div className={cls.loader}></div>\r\n    )\r\n}","import React, {useState} from 'react'\r\nimport cls from './Login.module.scss'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../m2-bll/store\";\r\nimport {NavLink, Redirect} from 'react-router-dom';\r\nimport SuperInputText from \"../common/SuperInput/SuperInputText\";\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport eye from '../../../assets/images/eye.svg'\r\nimport {InputTypeType} from \"../NewPassword/NewPassword\";\r\nimport closedEye from \"../../../assets/images/closedEye.svg\";\r\nimport {PATH} from \"../../App\";\r\nimport {useFormik} from \"formik\";\r\nimport {loginTC, setLoginError} from \"../../m2-bll/authReducer\";\r\nimport {Preloader} from \"../common/preloader/Preloader\";\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    rememberMe?: boolean\r\n}\r\n\r\nexport const Login = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const error = useSelector<AppRootStateType, string | null>(state => state.auth.error)\r\n\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn)\r\n\r\n    const isFetching = useSelector<AppRootStateType, boolean>(state => state.auth.isFetching)\r\n\r\n    const [type, setType] = useState<InputTypeType>(\"password\")\r\n\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {}\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            if (!values.password) {\r\n                errors.password = 'Required';\r\n            } else if (values.password.length < 8) {\r\n                errors.password = 'Password must contain from 8 to 15 characters';\r\n            } else if (values.password.length > 15) {\r\n                errors.password = 'Password must contain from 8 to 15 characters';\r\n            }\r\n            return errors\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(loginTC(values))\r\n        }\r\n    })\r\n\r\n    const changeTypeHandler = () => {\r\n        type === 'text' ? setType('password') : setType('text')\r\n    }\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to={PATH.PROFILE}/>\r\n    }\r\n\r\n    return (\r\n        <div className={cls.loginContainer}>\r\n            {\r\n                isFetching\r\n                    ?\r\n                    <Preloader/>\r\n                    :\r\n                    <div className={cls.card}>\r\n                        <h2 className={cls.title}>It-incubator</h2>\r\n                        <h3 className={cls.subtitle}>Sign In</h3>\r\n                        <form onSubmit={formik.handleSubmit}>\r\n                            <label>\r\n                                <p className={cls.titleEmail}>Email</p>\r\n                                <div className={cls.inputContainer}>\r\n                                    <SuperInputText\r\n                                        {...formik.getFieldProps('email')}\r\n                                        className={cls.inputEmailPassword}\r\n                                        type={\"text\"}\r\n                                        onClick={() => dispatch(setLoginError(null))}\r\n                                        // name={'email'}\r\n                                        // onChange={formik.handleChange}\r\n                                        // onBlur={formik.handleBlur}\r\n                                        // value={formik.values.email}\r\n                                    />\r\n                                    {\r\n                                        formik.touched.email &&\r\n                                        formik.errors.email ? <div style={{color: 'red'}}>{formik.errors.email}</div> :\r\n                                            <div style={{color: 'red'}}>{error?.match(/user/) ? error : ''}</div>\r\n                                    }\r\n                                </div>\r\n                            </label>\r\n                            <label>\r\n                                <p className={cls.titlePassword}>Password</p>\r\n                                <div className={cls.inputContainer}>\r\n                                    <div className={cls.eye} onClick={changeTypeHandler}><img\r\n                                        src={type === 'password' ? closedEye : eye} alt=\"eye\"/></div>\r\n                                    <SuperInputText\r\n                                        {...formik.getFieldProps('password')}\r\n                                        className={cls.inputEmailPassword}\r\n                                        onClick={() => dispatch(setLoginError(null))}\r\n                                        type={type}\r\n                                        // name={'password'}\r\n                                        // onBlur={formik.handleBlur}\r\n                                        // onChange={formik.handleChange}\r\n                                        // value={formik.values.password}\r\n                                    />\r\n                                    {formik.touched.password && formik.errors.password ?\r\n                                        <div style={{color: 'red'}}>{formik.errors.password}</div> :\r\n                                        <div style={{color: 'red'}}>{error?.match(/password/) ? error : ''}</div>\r\n                                    }\r\n                                </div>\r\n                            </label>\r\n                            <div className={cls.checkbox}>\r\n                                <label>\r\n                                    <SuperInputText\r\n                                        {...formik.getFieldProps('rememberMe')}\r\n                                        type={'checkbox'}\r\n                                        // name={'rememberMe'}\r\n                                        // onChange={formik.handleChange}\r\n                                        // checked={formik.values.rememberMe}\r\n                                    />\r\n                                    <span className={cls.rememberMe}>Remember me</span>\r\n                                </label>\r\n                            </div>\r\n                            <NavLink to={'/restore_password'} className={cls.restorePassword}>Forgot Password</NavLink>\r\n                            <div className={cls.buttonContainer}>\r\n                                <SuperButton className={cls.button} type={'submit'}><span>Login</span></SuperButton>\r\n                            </div>\r\n                        </form>\r\n                        <p className={cls.newAccount}>Don't have an account</p>\r\n                        <div className={cls.signUp}>\r\n                            <NavLink to={'/registration'}>Sign Up</NavLink>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/avatar.e5117e8e.png\";","import React from \"react\";\r\nimport cls from \"./UserInfo.module.scss\"\r\nimport defaultAvatar from \"../../../../assets/images/avatar.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\ntype UserInfoType = {\r\n    avatar?: string\r\n    name: string\r\n}\r\n\r\nexport const UserInfo: React.FC<UserInfoType> = ({avatar, name}) => {\r\n    return (\r\n        <div className={cls.infoUser}>\r\n            <img className={cls.userPhoto} src={avatar ? avatar : defaultAvatar} alt={\"\"}/>\r\n            <p className={cls.userName}>{name}</p>\r\n            <div className={cls.editProfileWrapper}>\r\n                <NavLink to={'/information_about_user'}>Edit\r\n                    profile</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport 'rc-slider/assets/index.css'\r\n\r\nconst Slider = require('rc-slider')\r\nconst createSliderWithTooltip = Slider.createSliderWithTooltip\r\nconst Range = createSliderWithTooltip(Slider.Range)\r\n\r\ntype SuperDoubleRangePropsType = {\r\n  onChangeRange?: (value: [number, number]) => void\r\n  onAfterChange?: () => void\r\n  value?: [number, number]\r\n  min: number\r\n  max: number\r\n  step: number | null\r\n  included?: boolean\r\n  handleStyle?: Object[]\r\n  trackStyle?: Object[]\r\n  railStyle?: Object\r\n  dotStyle?: Object\r\n  activeDotStyle?: Object\r\n}\r\n\r\nconst SuperDoubleRange: React.FC<SuperDoubleRangePropsType> = (\r\n  {\r\n    onChangeRange,\r\n    onAfterChange,\r\n    value,\r\n    min,\r\n    max,\r\n    step,\r\n    included,\r\n    handleStyle,\r\n    trackStyle,\r\n    railStyle,\r\n    dotStyle,\r\n    activeDotStyle,\r\n  }) => {\r\n  \r\n  return (\r\n    <>\r\n      <Range\r\n        onChange={onChangeRange}\r\n        onAfterChange={onAfterChange}\r\n        value={value}\r\n        min={min}\r\n        max={max}\r\n        step={step}\r\n        included={included}\r\n        handleStyle={handleStyle}\r\n        trackStyle={trackStyle}\r\n        railStyle={railStyle}\r\n        dotStyle={dotStyle}\r\n        activeDotStyle={activeDotStyle}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SuperDoubleRange\r\n","import React, {useEffect, useState} from 'react'\r\nimport SuperDoubleRange from '../../common/SuperDoubleRange/SuperDoubleRange'\r\nimport styles from './DoubleRange.module.scss'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport { setRangeSort } from '../../../m2-bll/packsReducer'\r\nimport {AppRootStateType} from \"../../../m2-bll/store\";\r\n\r\ntype DoubleRangeType = {\r\n  maxCount: number\r\n}\r\n\r\nexport const DoubleRange: React.FC<DoubleRangeType> = ({maxCount}) => {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const [min, setMin] = useState<number>(0)\r\n  const [max, setMax] = useState<number>(maxCount)\r\n\r\n  useEffect(() => setMax(maxCount), [maxCount])\r\n\r\n  const onChangeRange = (value: [number, number]) => {\r\n    if (min <= max) setMin(value[0])\r\n    if (max >= min) setMax(value[1])\r\n  }\r\n  const handleRange = () => {\r\n    dispatch(setRangeSort([min, max]))\r\n  }\r\n\r\n  if (maxCount === 0) return null\r\n\r\n  return (\r\n    <>\r\n      <SuperDoubleRange\r\n        value={[min, max]}\r\n        min={0}\r\n        max={maxCount}\r\n        step={1}\r\n        included={true}\r\n        onChangeRange={onChangeRange}\r\n        onAfterChange={handleRange}\r\n        handleStyle={[{borderColor: '#21268F', backgroundColor: '#21268F'}]}\r\n        trackStyle={[{width: '20px', backgroundColor: '#21268F'}]}\r\n        railStyle={{backgroundColor: 'grey'}}\r\n        dotStyle={{backgroundColor: 'red'}}\r\n        activeDotStyle={{borderColor: 'green'}}\r\n      />\r\n      <div className={styles.rangeContainer}>\r\n        {<span>{min}</span>}\r\n        <span>{max}</span>\r\n      </div>\r\n    </>\r\n  )\r\n}","import React from \"react\";\r\nimport cls from \"./UserInfoCards.module.scss\";\r\nimport {DoubleRange} from \"../../PacksList/DoubleRange/DoubleRange\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../m2-bll/store\";\r\n\r\ntype UserInfoCardsType = {\r\n    publicCardPacksCount: number\r\n}\r\n\r\nexport const UserInfoCards: React.FC<UserInfoCardsType> = ({publicCardPacksCount}) => {\r\n\r\n    const maxCount = useSelector<AppRootStateType, number>(state => state.packs.maxCardsCount)\r\n    const isFetchingPacks = useSelector<AppRootStateType, boolean>(state => state.packs.isFetching)\r\n\r\n    return (\r\n        <div className={cls.infoUserCards}>\r\n            <p className={cls.numberTitle}>Number of cards</p>\r\n            <div className={cls.doubleRangeContainer}>\r\n                {!isFetchingPacks && <DoubleRange\r\n                    maxCount={maxCount}\r\n                />}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {KeyboardEvent, useState} from 'react'\r\nimport SuperInputText from \"../SuperInput/SuperInputText\";\r\n\r\ntype SearchPropsType = {\r\n    className: string\r\n    handlePressSearch: (e: KeyboardEvent<HTMLInputElement>) => void\r\n}\r\n\r\nconst Search: React.FC<SearchPropsType> = ({className, handlePressSearch}) => {\r\n\r\n    const [request, setRequest] = useState<string>(\"\")\r\n\r\n    return (\r\n        <SuperInputText\r\n            value={request}\r\n            type={\"text\"}\r\n            onChangeText={setRequest}\r\n            onEnter={handlePressSearch}\r\n            placeholder={\"Search...\"}\r\n            className={className}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Search\r\n","export default __webpack_public_path__ + \"static/media/DownSort.f30a3c93.svg\";","export default __webpack_public_path__ + \"static/media/UpSort.f8b45093.svg\";","import React, {useState} from \"react\";\r\nimport cls from \"./TableHeaderPacks.module.scss\"\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setCardsCountDirection, setUpdatedDirection} from \"../../../../m2-bll/packsReducer\";\r\nimport downArrow from \"../../../../../assets/images/DownSort.svg\"\r\nimport upArrow from \"../../../../../assets/images/UpSort.svg\"\r\n\r\n\r\ntype TableHeaderType = {\r\n    className: string\r\n}\r\ntype ArrowType = \"down\" | \"up\"\r\n\r\nexport type UpdatedDirectionType = \"0updated\" | \"1updated\"\r\n\r\nexport type CardsCountDirectionType = \"0cardsCount\" | \"1cardsCount\"\r\n\r\nexport const TableHeaderPacks: React.FC<TableHeaderType> = ({className}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [cardsArrow, setCardsArrow] = useState<ArrowType>('down')\r\n    const [updatedArrow, setUpdatedArrow] = useState<ArrowType>('down')\r\n\r\n    const changeUpdatedDirection = () => {\r\n        setUpdatedArrow(updatedArrow === \"down\" ? \"up\" : \"down\")\r\n        switch (updatedArrow) {\r\n            case \"down\":\r\n                dispatch(setUpdatedDirection(\"1updated\"))\r\n                break\r\n            case \"up\":\r\n                dispatch(setUpdatedDirection(\"0updated\"))\r\n                break\r\n        }\r\n    }\r\n\r\n    const changeCardsCountDirection = () => {\r\n        setCardsArrow(cardsArrow === \"down\" ? \"up\" : \"down\")\r\n        switch (cardsArrow) {\r\n            case \"down\":\r\n                dispatch(setCardsCountDirection(\"1cardsCount\"))\r\n                break\r\n            case \"up\":\r\n                dispatch(setCardsCountDirection(\"0cardsCount\"))\r\n                break\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={`${className} ${cls.tableHeader}`}>\r\n            <div>Name</div>\r\n            <div onClick={changeCardsCountDirection} className={cls.cardsTitle}>Cards <span>\r\n                <img src={cardsArrow === \"down\" ? downArrow : upArrow} alt=\"\"/>\r\n            </span></div>\r\n            <div onClick={changeUpdatedDirection} className={cls.updatedTitle}>Last Updated <span>\r\n                <img src={updatedArrow === \"down\" ? downArrow : upArrow} alt=\"\"/>\r\n            </span></div>\r\n            <div>Created by</div>\r\n            <div>Actions</div>\r\n        </div>\r\n    )\r\n}","import React, {Dispatch, SetStateAction} from 'react';\r\nimport style from './Modal.module.scss'\r\n\r\n\r\nconst Modal = ({active, setActive, children}: { active: boolean, setActive: Dispatch<SetStateAction<boolean>>,\r\n   // children: ReactChild | ReactChildren;\r\n    children: any;\r\n}) => {\r\n\r\n    return (\r\n        <div className={`${active\r\n            ? style.modalContainer + ' ' + style.active\r\n            : style.modalContainer}`} onClick={() => setActive(false)}>\r\n            <div className={`${active\r\n                ? style.modalContent + ' ' + style.active\r\n                : style.modalContent}`} onClick={e => e.stopPropagation()}>\r\n\r\n                {children}\r\n\r\n                <button onClick={() => setActive(false)} className={style.buttonModal}>X</button>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Modal;","import React, { Dispatch, SetStateAction } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { deletePack } from '../../../../../m2-bll/packsReducer'\r\nimport SuperButton from '../../../../common/SuperButton/SuperButton'\r\nimport styles from './DeletePackForm.module.scss'\r\n\r\ntype DeletePackFormPropsType = {\r\n  packId: string\r\n  packName: string\r\n  setActive: Dispatch<SetStateAction<boolean>>\r\n}\r\n\r\nexport const DeletePackForm = ({packName, packId, setActive}: DeletePackFormPropsType) => {\r\n  const dispatch = useDispatch()\r\n  \r\n  const handleDeletePack = () => {\r\n    dispatch(deletePack(packId))\r\n    setActive(false)\r\n  }\r\n  const handleCancel = () => {\r\n    setActive(false)\r\n  }\r\n  \r\n  return (\r\n    <form className={styles.formContainer}>\r\n      <h2>Delete Pack</h2>\r\n      <div className={styles.question}>Do you really want to remove <b>Pack Name</b> - <b>{packName}</b>?\r\n        <div>\r\n          All cards will be excluded from this course\r\n        </div>\r\n      </div>\r\n      <div className={styles.buttonContainer}>\r\n        <SuperButton\r\n          onClick={handleCancel}\r\n          className={styles.cancelButton}\r\n        >\r\n          Cancel\r\n        </SuperButton>\r\n        <SuperButton\r\n          onClick={handleDeletePack}\r\n          className={styles.deleteButton}\r\n        >\r\n          Delete\r\n        </SuperButton>\r\n      </div>\r\n    </form>\r\n  )\r\n}","import { useFormik } from 'formik'\r\nimport React, { ChangeEvent, Dispatch, SetStateAction, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { deletePack, editPack } from '../../../../../m2-bll/packsReducer'\r\nimport { AppRootStateType } from '../../../../../m2-bll/store'\r\nimport SuperButton from '../../../../common/SuperButton/SuperButton'\r\nimport SuperInputText from '../../../../common/SuperInput/SuperInputText'\r\nimport styles from './EditPackForm.module.scss'\r\n\r\ntype EditPackFormPropsType = {\r\n  packId: string\r\n  packName: string\r\n  setActive: Dispatch<SetStateAction<boolean>>\r\n}\r\n\r\ntype FormValues = {\r\n  packName: string\r\n}\r\n\r\nexport const EditPackForm = ({packName, packId, setActive}: EditPackFormPropsType) => {\r\n  const dispatch = useDispatch()\r\n  const formik = useFormik({\r\n    validate: (packName) => {\r\n      \r\n      if (!packName.packName) {\r\n        return {\r\n          packName: 'Pack is required',\r\n        }\r\n      }\r\n    },\r\n    initialValues: {\r\n      packName: packName,\r\n    },\r\n    onSubmit: async (packName: FormValues) => {\r\n      setActive(false)\r\n      await dispatch(editPack(packId, packName.packName))\r\n      packName.packName = ''\r\n    },\r\n    onReset: (values, {resetForm}) => resetForm(),\r\n  })\r\n  \r\n  const handleCancel = () => {\r\n    setActive(false)\r\n  }\r\n  \r\n  return (\r\n    <form className={styles.formContainer} onSubmit={formik.handleSubmit}>\r\n      <h2>Edit Pack Name</h2>\r\n      <div>\r\n        <label htmlFor=\"packName\" className={styles.label}>new pack name</label>\r\n        <SuperInputText\r\n          name=\"packName\"\r\n          type=\"packName\"\r\n          className={styles.inputForm}\r\n          onChange={formik.handleChange}\r\n          value={formik.values.packName}\r\n        />\r\n        {/*{formik.touched.packName}*/}\r\n      </div>\r\n      <div className={styles.errorContainer}>\r\n        {formik.errors.packName ? (\r\n          <div className={styles.error}>{formik.errors.packName}</div>) : null}\r\n      </div>\r\n      \r\n      <div className={styles.buttonWrapper}>\r\n        <SuperButton\r\n          onClick={handleCancel}\r\n          className={styles.cancelButton}\r\n          type={'reset'}\r\n        >\r\n          Cancel\r\n        </SuperButton>\r\n        <SuperButton\r\n          className={styles.updateButton}\r\n          type={'submit'}\r\n        >\r\n          Update\r\n        </SuperButton>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n","import React, {useState} from 'react'\r\nimport cls from './TableDataPacks.module.scss'\r\nimport SuperButton from '../../../common/SuperButton/SuperButton'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {useDispatch} from 'react-redux'\r\nimport {setCardPackName, setCurrentPackId, setSearchName} from '../../../../m2-bll/cardsReducer'\r\nimport Modal from '../../../common/Modal/Modal'\r\nimport {DeletePackForm} from './DeletePackForm/DeletePackForm'\r\nimport {EditPackForm} from './EditPackform/EditPackForm'\r\nimport {setIsFetching} from \"../../../../m2-bll/learnReducer\";\r\n\r\ntype TableDataPropsType = {\r\n    _id: string\r\n    user_id: string\r\n    name: string\r\n    cardsCount: number\r\n    updatedDate: string\r\n    updatedTime: string\r\n    appUserId: string\r\n    createdBy: string\r\n}\r\n\r\n\r\nexport const TableDataPacks: React.FC<TableDataPropsType> = ({\r\n                                                                 name,\r\n                                                                 _id,\r\n                                                                 cardsCount,\r\n                                                                 updatedDate,\r\n                                                                 updatedTime,\r\n\r\n                                                                 appUserId,\r\n                                                                 user_id,\r\n                                                                 createdBy,\r\n\r\n                                                                 children\r\n                                                             }) => {\r\n\r\n    const [activeDeleteModal, setActiveDeleteModal] = useState<boolean>(false)\r\n    const [activeEditModal, setActiveEditModal] = useState<boolean>(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const openDeleteModal = () => {\r\n        setActiveDeleteModal(true)\r\n    }\r\n    const openEditModal = () => {\r\n        setActiveEditModal(true)\r\n    }\r\n    const onClickLearnButtonHandler = () => {\r\n        localStorage.setItem(\"packName\", name)\r\n        dispatch(setIsFetching(true))\r\n    }\r\n\r\n    const onPackClickHandler = () => {\r\n        dispatch(setCardPackName(name))\r\n        dispatch(setCurrentPackId(user_id))\r\n        dispatch(setSearchName(''))\r\n    }\r\n\r\n    return (\r\n        <div className={cls.tableData}>\r\n            <div className={cls.name}>\r\n                <NavLink to={`/cardslist/${_id}`}\r\n                         onClick={onPackClickHandler}\r\n                className={cls.name}\r\n                >\r\n                    {name}\r\n                </NavLink>\r\n            </div>\r\n            <div>{cardsCount}</div>\r\n            <div>\r\n                <p>Date: {updatedDate}</p>\r\n                <p>Time: {updatedTime}</p>\r\n            </div>\r\n            <div>{createdBy}</div>\r\n            <Modal active={activeDeleteModal} setActive={setActiveDeleteModal}>\r\n                <DeletePackForm packName={name} packId={_id} setActive={setActiveDeleteModal}/>\r\n            </Modal>\r\n            <div className={cls.buttonsContainer}>\r\n                <SuperButton\r\n                    className={cls.deleteButton}\r\n                    onClick={openDeleteModal}\r\n                    disabled={user_id !== appUserId}\r\n                >\r\n                    <span>Delete</span>\r\n                </SuperButton>\r\n                <Modal active={activeEditModal} setActive={setActiveEditModal}>\r\n                    <EditPackForm packName={name} packId={_id} setActive={setActiveEditModal}/>\r\n                </Modal>\r\n                <SuperButton\r\n                    className={cls.editLearnButton}\r\n                    onClick={openEditModal}\r\n                    disabled={user_id !== appUserId}\r\n                >\r\n                    <span>Edit</span>\r\n                </SuperButton>\r\n                <SuperButton className={cls.editLearnButton}\r\n                             onClick={onClickLearnButtonHandler}\r\n                             disabled={cardsCount === 0}\r\n                >\r\n                    {\r\n                        cardsCount === 0\r\n                            ?\r\n                            <span>Learn</span>\r\n                            :\r\n                            <NavLink to={`/learn/${_id}`}>Learn</NavLink>\r\n                    }\r\n\r\n                </SuperButton>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport cls from \"./TablePacks.module.scss\"\r\nimport {TableHeaderPacks} from \"./TableHeaderPacks/TableHeaderPacks\";\r\nimport {TableDataPacks} from \"./TableDataPacks/TableDataPacks\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../m2-bll/store\";\r\nimport {CardPackType} from \"../../../m2-bll/packsReducer\";\r\nimport {Preloader} from \"../../common/preloader/Preloader\";\r\n\r\nexport const TablePacks: React.FC = () => {\r\n    const packsData = useSelector<AppRootStateType, Array<CardPackType>>(state => state.packs.cardPacks)\r\n    const appUserId = useSelector<AppRootStateType, string>(state => state.profile.informationAboutUser._id)\r\n    const isFetchingPacks = useSelector<AppRootStateType, boolean>(state => state.packs.isFetching)\r\n    const cardPacksTotalCount = useSelector<AppRootStateType, number>(state => state.packs.cardPacksTotalCount)\r\n\r\n    return (\r\n        <div className={cls.tableContainer}>\r\n            <TableHeaderPacks className={cls.tableHeader}/>\r\n            {\r\n                isFetchingPacks\r\n                    ?\r\n                    <Preloader/>\r\n                    :\r\n                    cardPacksTotalCount !== 0\r\n                        ?\r\n                        packsData.map(pack => {\r\n\r\n                            const updatedDate = pack.updated.slice(0, 10)\r\n                            const updatedTime = pack.updated.slice(11, 19)\r\n\r\n                            return (\r\n                                <TableDataPacks\r\n                                    name={pack.name}\r\n                                    _id={pack._id}\r\n                                    cardsCount={pack.cardsCount}\r\n                                    createdBy={pack.user_name}\r\n                                    updatedDate={updatedDate}\r\n                                    updatedTime={updatedTime}\r\n                                    user_id={pack.user_id}\r\n                                    key={pack._id}\r\n                                    appUserId={appUserId}\r\n\r\n                                />\r\n                            )\r\n                        })\r\n                        :\r\n                        <p className={cls.noPacksTitle}>You don't have any packs. Please create a new one</p>\r\n            }\r\n        </div>\r\n    )\r\n}","import React, { SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent } from 'react'\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n  options?: any[]\r\n  onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n  {\r\n    options,\r\n    onChange, onChangeOption,\r\n    ...restProps\r\n  }\r\n) => {\r\n  const mappedOptions: any[] = options ? options.map((o,i) =>\r\n    <option key={o + '-' + i}>{o}</option>) : [] // map options with key\r\n  \r\n  const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n    onChangeOption && onChangeOption(e.currentTarget.value)\r\n    onChange && onChange(e)\r\n  }\r\n  \r\n  return (\r\n    <select onChange={onChangeCallback} {...restProps}>\r\n      {mappedOptions}\r\n    </select>\r\n  )\r\n}\r\n\r\nexport default SuperSelect\r\n","import React from 'react'\r\nimport styles from './Paginator.module.scss'\r\nimport ReactPaginate from 'react-paginate'\r\nimport SuperSelect from '../SuperSelect/SuperSelect'\r\n\r\ntype PaginatorPropsType = {\r\n    pageCount: number\r\n    itemsTotalCount: number\r\n    onPageChanges: (page: number) => void\r\n    changePageCount: (count: number) => void\r\n}\r\n\r\n\r\nconst Paginator = ({pageCount, itemsTotalCount, changePageCount, onPageChanges}: PaginatorPropsType) => {\r\n\r\n    return <div className={styles.paginatorPage}>\r\n        <ReactPaginate\r\n            pageCount={Math.ceil(itemsTotalCount / pageCount)}\r\n            marginPagesDisplayed={1}\r\n            pageRangeDisplayed={5}\r\n            previousLabel={'<'}\r\n            previousClassName={styles.prev}\r\n            nextLabel={'>'}\r\n            nextClassName={styles.next}\r\n            activeClassName={styles.selectedPage}\r\n            onPageChange={(page) => onPageChanges(page.selected)}\r\n            containerClassName={styles.container}\r\n            pageClassName={styles.page}\r\n        />\r\n        <div className={styles.sortContainer}>\r\n            Show<SuperSelect\r\n            className={styles.superSelect}\r\n            options={[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]}\r\n            value={pageCount}\r\n            onChange={(e) => changePageCount(+e.currentTarget.value)}\r\n        /> Cards per Page\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Paginator","import React, { Dispatch, SetStateAction } from 'react'\r\nimport styles from './AddPackForm.module.scss'\r\nimport { useFormik } from 'formik'\r\nimport { useDispatch } from 'react-redux'\r\nimport { createNewPack } from '../../../m2-bll/packsReducer'\r\nimport SuperInputText from '../../common/SuperInput/SuperInputText'\r\nimport SuperButton from '../../common/SuperButton/SuperButton'\r\n\r\ntype FormPropsType = {\r\n  active: boolean\r\n  setActive: Dispatch<SetStateAction<boolean>>\r\n}\r\n\r\ntype FormValues = {\r\n  packName: string\r\n}\r\n\r\nexport const AddPackForm = ({setActive}: FormPropsType) => {\r\n  const dispatch = useDispatch()\r\n  const formik = useFormik({\r\n    validate: (packName) => {\r\n      \r\n      if (!packName.packName) {\r\n        return {\r\n          packName: 'Pack is required',\r\n        }\r\n      }\r\n    },\r\n    initialValues: {\r\n      packName: '',\r\n    },\r\n    onSubmit: async (values: FormValues) => {\r\n      setActive(false)\r\n      await dispatch(createNewPack(values.packName))\r\n      values.packName = ''\r\n    },\r\n  })\r\n  \r\n  const handleCancel = () => {\r\n    setActive(false)\r\n    formik.resetForm()\r\n  }\r\n  \r\n  return (\r\n    <form onSubmit={formik.handleSubmit} className={styles.form}>\r\n      <div className={styles.formWrapper}>\r\n        <h2 className={styles.title}>Add new pack</h2>\r\n        <div>\r\n          <label htmlFor=\"packName\" className={styles.label}>Name pack</label>\r\n          <SuperInputText\r\n            name=\"packName\"\r\n            type=\"packName\"\r\n            className={styles.inputForm}\r\n            onChange={formik.handleChange}\r\n            value={formik.values.packName}\r\n          />\r\n        </div>\r\n        <div className={styles.errorContainer}>\r\n          {formik.errors.packName ? (\r\n            <div className={styles.error}>{formik.errors.packName}</div>) : null}\r\n        </div>\r\n        <div className={styles.buttonContainer}>\r\n          <SuperButton\r\n            className={styles.cancelButton}\r\n            onClick={handleCancel}\r\n            title={'Cancel'}\r\n            type={'reset'}\r\n          >\r\n            Cancel\r\n          </SuperButton>\r\n          <SuperButton\r\n            className={styles.saveButton}\r\n            title={'Save'}\r\n            type={'submit'}\r\n          >\r\n            Save\r\n          </SuperButton>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n","import React, {KeyboardEvent, useCallback, useEffect, useState} from 'react'\r\nimport cls from './Profile.module.scss'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../m2-bll/store\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport {isLoggedInApp} from \"../../m2-bll/authReducer\";\r\nimport {UserInfo} from \"./UserInfo/UserInfo\";\r\nimport {UserInfoCards} from \"./UserInfoCards/UserInfoCards\";\r\nimport {PATH} from \"../../App\";\r\nimport Search from \"../common/Search/Search\";\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport {TablePacks} from \"../PacksList/TablePacks/TablePacks\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport {\r\n    createNewPack,\r\n    deletePack,\r\n    editPack, getDataPacks,\r\n    setCurrentPage,\r\n    setPageCount,\r\n    setSearchName, setUserId\r\n} from \"../../m2-bll/packsReducer\";\r\nimport {CardsCountDirectionType, UpdatedDirectionType} from \"../PacksList/TablePacks/TableHeaderPacks/TableHeaderPacks\";\r\nimport {AddPackForm} from \"../PacksList/AddPackForm/AddPackForm\";\r\nimport Modal from \"../common/Modal/Modal\";\r\n\r\n\r\nexport const Profile = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const error = useSelector<AppRootStateType, string | null>(state => state.auth.error)\r\n\r\n    const [activeModal, setActiveModal] = useState<boolean>(false)\r\n\r\n    const avatar = useSelector<AppRootStateType, string>(state => state.profile.informationAboutUser.avatar)\r\n    const name = useSelector<AppRootStateType, string>(state => state.profile.informationAboutUser.name)\r\n    const publicCardPacksCount = useSelector<AppRootStateType, number>(state => state.profile.informationAboutUser.publicCardPacksCount)\r\n    const id = useSelector<AppRootStateType, string>(state => state.profile.informationAboutUser._id)\r\n    const cardPacksTotalCount = useSelector<AppRootStateType, number>(state => state.packs.cardPacksTotalCount)\r\n    const pageCount = useSelector<AppRootStateType, number>(state => state.packs.cardPacksRequestParameters.pageCount)\r\n    const minCards = useSelector<AppRootStateType, number>(state => state.packs.cardPacksRequestParameters.minCardsCount)\r\n    const maxCards = useSelector<AppRootStateType, number>(state => state.packs.cardPacksRequestParameters.maxCardsCount)\r\n    const page = useSelector<AppRootStateType, number>(state => state.packs.cardPacksRequestParameters.page)\r\n    const packName = useSelector<AppRootStateType, string>(state => state.packs.cardPacksRequestParameters.packName)\r\n    const updatedDirection = useSelector<AppRootStateType, UpdatedDirectionType | CardsCountDirectionType>(state => state.packs.cardPacksRequestParameters.sortPacks)\r\n\r\n    useEffect(() => {\r\n        if (!id) {\r\n            dispatch(isLoggedInApp())\r\n        } else {\r\n            dispatch(setUserId(id))\r\n            dispatch(getDataPacks())\r\n        }\r\n    }, [id, dispatch, page, pageCount, packName, updatedDirection, minCards, maxCards])\r\n\r\n    const openModal = () => {\r\n        setActiveModal(true)\r\n    }\r\n\r\n    const handlePressSearch = useCallback((e: KeyboardEvent<HTMLInputElement>) => {\r\n        dispatch(setSearchName(e.currentTarget.value))\r\n        e.currentTarget.blur()\r\n    }, [dispatch])\r\n\r\n    const addPack = useCallback(() => {\r\n        const newPackName = prompt('Enter the name of the new pack: ')\r\n        if (newPackName)\r\n            dispatch(createNewPack(newPackName))\r\n    }, [dispatch])\r\n\r\n\r\n    const onPacksPageChanges = useCallback((page: number) => {\r\n        dispatch(setCurrentPage(page + 1))\r\n    }, [dispatch])\r\n\r\n    const changePacksPageCount = useCallback((count: number) => {\r\n        dispatch(setPageCount(count))\r\n    }, [dispatch])\r\n\r\n    if (error) {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n\r\n    return (\r\n        <div className={cls.profileContainer}>\r\n            <div className={cls.card}>\r\n                <div className={cls.info}>\r\n                    <UserInfo avatar={avatar} name={name}/>\r\n                    <UserInfoCards publicCardPacksCount={publicCardPacksCount}/>\r\n                </div>\r\n                <div className={cls.packslist}>\r\n                    <h2 className={cls.packslistTitle}>My packs list</h2>\r\n                    <div className={cls.search_AddButtonContainer}>\r\n                        <Search className={cls.search} handlePressSearch={handlePressSearch}/>\r\n                        <Modal active={activeModal} setActive={setActiveModal}>\r\n                            <AddPackForm active={activeModal} setActive={setActiveModal}/>\r\n                        </Modal>\r\n                        <div className={cls.addButtonContainer}>\r\n                            <SuperButton className={cls.addPackButton} onClick={openModal}>\r\n                                <span>Add new pack</span>\r\n                            </SuperButton>\r\n                        </div>\r\n                    </div>\r\n                    <TablePacks/>\r\n                    {!!cardPacksTotalCount && <Paginator\r\n                        pageCount={pageCount}\r\n                        itemsTotalCount={cardPacksTotalCount}\r\n                        onPageChanges={onPacksPageChanges}\r\n                        changePageCount={changePacksPageCount}\r\n                    />}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport cls from './PageNotFound.module.css'\r\n\r\n\r\nexport const PageNotFound = () => {\r\n    return (\r\n        <div className={cls.pageNotFoundContainer}>\r\n            <h1>PageNotFound</h1>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/letter.bc3a4042.svg\";","import React from 'react'\r\nimport cls from './CheckPassword.module.scss'\r\nimport letter from '../../../assets/images/letter.svg'\r\nimport { NavLink } from 'react-router-dom'\r\nimport {PATH} from \"../../App\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setShowEmailCheck} from \"../../m2-bll/restorePasswordReducer\";\r\n\r\ntype CheckPasswordType = {\r\n    email: string\r\n}\r\n\r\nexport const CheckPassword: React.FC<CheckPasswordType> = ({email}) => {\r\n\r\n   const dispatch = useDispatch()\r\n\r\n    return (\r\n        <div className={cls.checkPasswordContainer}>\r\n            <div className={cls.card}>\r\n                <h2 className={cls.title}>It-incubator</h2>\r\n\r\n                <div className={cls.imgContainer}>\r\n                    <img src={letter} alt=\"\"/>\r\n                </div>\r\n\r\n                <h3 className={cls.subtitle}>Check email</h3>\r\n\r\n                <p className={cls.firstNote}>{`We've sent an Email with instructions to `}<span>{email}</span></p>\r\n                <p className={cls.secondNote}><NavLink to={PATH.LOGIN} onClick={()=>dispatch(setShowEmailCheck(false))}>Try logging in</NavLink> again when you change your password</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport cls from './RestorePassword.module.scss'\r\nimport SuperInputText from \"../common/SuperInput/SuperInputText\";\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../m2-bll/store\";\r\nimport {CheckPassword} from \"../CheckPassword/CheckPassword\";\r\nimport {restorePassword, setRestorePasswordError} from \"../../m2-bll/restorePasswordReducer\";\r\nimport {useFormik} from \"formik\";\r\nimport {Preloader} from \"../common/preloader/Preloader\";\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n}\r\n\r\nexport const RestorePassword = () => {\r\n\r\n    const showEmailCheck = useSelector<AppRootStateType, boolean>(state => state.restorePassword.showEmailCheck)\r\n\r\n    const error = useSelector<AppRootStateType, null | string>(state => state.restorePassword.error)\r\n\r\n    const isFetching = useSelector<AppRootStateType, boolean>(state => state.restorePassword.isFetching)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: ''\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {}\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            return errors\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(restorePassword(values.email))\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className={cls.restorePasswordContainer}>\r\n            {\r\n                isFetching\r\n                    ?\r\n                    <Preloader/>\r\n                    :\r\n                    showEmailCheck\r\n                        ?\r\n                        <CheckPassword email={formik.values.email}/>\r\n                        :\r\n                        <div className={cls.card}>\r\n                            <h2 className={cls.title}>It-incubator</h2>\r\n                            <h3 className={cls.subtitle}>Forgot your password?</h3>\r\n                            <form onSubmit={formik.handleSubmit}>\r\n                                <div className={cls.inputContainer}>\r\n                                    <SuperInputText\r\n                                        {...formik.getFieldProps('email')}\r\n                                        className={cls.inputEmail}\r\n                                        type={\"text\"}\r\n                                        placeholder={'Email'}\r\n                                        onClick={() => dispatch(setRestorePasswordError(null))}\r\n                                        // name={'email'}\r\n                                        // onChange={formik.handleChange}\r\n                                        // onBlur={formik.handleBlur}\r\n                                        // value={formik.values.email}\r\n                                    />\r\n                                    {\r\n                                        formik.touched.email &&\r\n                                        formik.errors.email ? <div style={{color: 'red'}}>{formik.errors.email}</div> :\r\n                                            <div style={{color: 'red'}}>{error}</div>\r\n                                    }\r\n                                </div>\r\n                                <p className={cls.firstNote}>Enter your email address and we will send\r\n                                    you further\r\n                                    instructions</p>\r\n                                <div className={cls.buttonContainer}>\r\n                                    <SuperButton className={cls.button}\r\n                                                 type={'submit'}><span>Send Instructions</span></SuperButton>\r\n                                </div>\r\n                            </form>\r\n                            <p className={cls.secondNote}>Did you remember your password?</p>\r\n                            <div className={cls.reLogin}>\r\n                                <NavLink to={'/login'}>Try logging in</NavLink>\r\n                            </div>\r\n                        </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport {Redirect, useParams} from 'react-router-dom'\r\nimport cls from './NewPassword.module.scss'\r\nimport SuperInputText from \"../common/SuperInput/SuperInputText\";\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../m2-bll/store\";\r\nimport {restorePassword, setNewPassword, setRestorePasswordError} from \"../../m2-bll/restorePasswordReducer\";\r\nimport eye from \"../../../assets/images/eye.svg\";\r\nimport closedEye from \"../../../assets/images/closedEye.svg\";\r\nimport {PATH} from \"../../App\";\r\nimport {useFormik} from \"formik\";\r\nimport {setLoginError} from \"../../m2-bll/authReducer\";\r\nimport {Preloader} from \"../common/preloader/Preloader\";\r\n\r\nexport type InputTypeType = \"password\" | \"text\" | \"checkbox\"\r\n\r\n\r\ntype FormikErrorType = {\r\n    password?: string\r\n}\r\n\r\nexport const NewPassword = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [type, setType] = useState<InputTypeType>(\"password\")\r\n\r\n    const isNewPasswordCreated = useSelector<AppRootStateType, boolean>(state => state.restorePassword.isNewPasswordCreated)\r\n\r\n    const isFetching = useSelector<AppRootStateType, boolean>(state => state.restorePassword.isFetching)\r\n\r\n    const error = useSelector<AppRootStateType,string | null>(state=>state.restorePassword.error)\r\n\r\n    const {token} = useParams<{ token: string }>();\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            password: ''\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {}\r\n            if (!values.password) {\r\n                errors.password = 'Required';\r\n            } else if (values.password.length < 8) {\r\n                errors.password = 'Password must contain from 8 to 15 characters';\r\n            } else if (values.password.length > 15) {\r\n                errors.password = 'Password must contain from 8 to 15 characters';\r\n            }\r\n            return errors\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(setNewPassword(values.password, token))\r\n        }\r\n    })\r\n\r\n    const changeTypeHandler = () => {\r\n        type === 'text' ? setType('password') : setType('text')\r\n    }\r\n\r\n    if (isNewPasswordCreated) {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n\r\n    return (\r\n        <div className={cls.newPasswordContainer}>\r\n            {\r\n                isFetching\r\n                    ?\r\n                    <Preloader/>\r\n                    :\r\n                    <div className={cls.card}>\r\n                        <h2 className={cls.title}>It-incubator</h2>\r\n                        <h3 className={cls.subtitle}>Create new Password</h3>\r\n                        <form onSubmit={formik.handleSubmit}>\r\n                            <div className={cls.inputContainer}>\r\n                                <div className={cls.eye} onClick={changeTypeHandler}><img\r\n                                    src={type === 'password' ? closedEye : eye} alt=\"eye\"/></div>\r\n                                <SuperInputText\r\n                                    {...formik.getFieldProps('password')}\r\n                                    className={cls.inputPassword}\r\n                                    onClick={() => dispatch(setRestorePasswordError(null))}\r\n                                    type={type}\r\n                                    placeholder={'Password'}\r\n                                    // name={'password'}\r\n                                    // onBlur={formik.handleBlur}\r\n                                    // onChange={formik.handleChange}\r\n                                    // value={formik.values.password}\r\n                                />\r\n                                {formik.touched.password && formik.errors.password ?\r\n                                    <div style={{color: 'red'}}>{formik.errors.password}</div> : <div style={{color: 'red', margin:'0px 30px'}}>{error}</div>\r\n                                }\r\n                            </div>\r\n                            <p className={cls.note}>Create new password and press the button below</p>\r\n\r\n                            <div className={cls.buttonContainer}>\r\n                                <SuperButton\r\n                                    className={cls.button}\r\n                                    type={'submit'}\r\n                                >\r\n                                    <span>Create</span>\r\n                                </SuperButton>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React from \"react\";\r\nimport cls from './TestComponents.module.css'\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport SuperInputText from \"../common/SuperInput/SuperInputText\";\r\nimport SuperCheckbox from \"../common/SuperCheckbox/SuperCheckbox\";\r\n\r\nexport const TestComponents = () => {\r\n    return (\r\n        <div className={cls.testComponentsContainer}>\r\n            <h1>Common components</h1>\r\n            <div className={cls.componentsContainer}>\r\n                <div>\r\n                    <h2>Button</h2>\r\n                    <SuperButton>\r\n                        Button\r\n                    </SuperButton>\r\n                </div>\r\n                <div>\r\n                    <h2>Input Text</h2>\r\n                    <SuperInputText/>\r\n                </div>\r\n                <div>\r\n                    <h2>CheckBox</h2>\r\n                    <SuperCheckbox/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useEffect, useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport cls from './PersonalInfo.module.scss'\r\nimport {editUserProfileTC} from \"../../../m2-bll/profileReducer\";\r\nimport {PATH} from \"../../../App\";\r\nimport {AppRootStateType} from \"../../../m2-bll/store\";\r\nimport defaultAvatar from '../../../../assets/images/avatar.png'\r\nimport SuperInputText from \"../../common/SuperInput/SuperInputText\";\r\nimport {isLoggedInApp} from \"../../../m2-bll/authReducer\";\r\nimport {Redirect, useHistory} from 'react-router-dom';\r\n\r\n\r\nexport const PersonalInfo: React.FC = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const id = useSelector<AppRootStateType, string>(state => state.profile.informationAboutUser._id)\r\n    const name = useSelector<AppRootStateType, string>(state => state.profile.informationAboutUser.name)\r\n    const avatar = useSelector<AppRootStateType, string>(state => state.profile.informationAboutUser.avatar)\r\n\r\n    const history = useHistory()\r\n\r\n    const error = useSelector<AppRootStateType, string | null>(state => state.auth.error)\r\n\r\n    let [ava, setAva] = useState<string>('')\r\n    let [nickname, setNickname] = useState<string>(name)\r\n\r\n    useEffect(() => {\r\n        if (!id) {\r\n            dispatch(isLoggedInApp())\r\n        }\r\n        setNickname(name)\r\n    }, [id])\r\n\r\n\r\n    const cancelHandler = () => {\r\n        history.push(PATH.PROFILE)\r\n    }\r\n    const saveHandler = () => {\r\n        dispatch(editUserProfileTC(nickname, ava))\r\n        history.push(PATH.PROFILE)\r\n    }\r\n\r\n    if (error) {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n\r\n\r\n    return (\r\n            <div className={cls.infoContainer}>\r\n                <div className={cls.card}>\r\n                    <h2 className={cls.title}>Personal Inforamtion</h2>\r\n                    <div className={cls.imgWrapper}>\r\n                        <img src={avatar ? avatar : defaultAvatar} alt='profile_photo'/>\r\n                    </div>\r\n                    <label>\r\n                        <p className={cls.titleEmail}>Nickname</p>\r\n                        <div className={cls.inputContainer}>\r\n                            <SuperInputText\r\n                                className={cls.inputNicknameAvatar}\r\n                                value={nickname}\r\n                                type={\"text\"}\r\n                                onChangeText={setNickname}\r\n                                // error={errorEmail}\r\n                            />\r\n                        </div>\r\n                    </label>\r\n                    <label>\r\n                        <p className={cls.titleEmail}>Avatar</p>\r\n                        <div className={cls.inputContainer}>\r\n                            <SuperInputText\r\n                                className={cls.inputNicknameAvatar}\r\n                                value={ava}\r\n                                type={\"text\"}\r\n                                onChangeText={setAva}\r\n                                // error={errorEmail}\r\n                            />\r\n                        </div>\r\n                    </label>\r\n                    <div className={cls.buttonContainer}>\r\n                        <button\r\n                            className={cls.cancelButton}\r\n                            onClick={cancelHandler}>\r\n                            <span>Cancel</span>\r\n                        </button>\r\n                        <button\r\n                            className={cls.registerButton}\r\n                            onClick={saveHandler}\r\n                        >\r\n                            <span>Save</span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    )\r\n}","import React, {useState} from 'react'\r\nimport cls from './Register.module.scss'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {register, setRegisterError} from '../../m2-bll/registerReducer'\r\nimport {AppRootStateType} from '../../m2-bll/store'\r\nimport SuperInputText from '../common/SuperInput/SuperInputText'\r\nimport {Redirect} from \"react-router\";\r\nimport eye from \"../../../assets/images/eye.svg\";\r\nimport {InputTypeType} from \"../NewPassword/NewPassword\";\r\nimport closedEye from \"../../../assets/images/closedEye.svg\";\r\nimport {PATH} from \"../../App\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {useFormik} from \"formik\";\r\nimport {Preloader} from \"../common/preloader/Preloader\";\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    confirmPassword?: string\r\n}\r\n\r\nexport const Register: React.FC = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: ''\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            if (!values.password) {\r\n                errors.password = 'Required';\r\n            } else if (values.password.length < 8) {\r\n                errors.password = 'Password must contain from 8 to 15 characters';\r\n            } else if (values.password.length > 15) {\r\n                errors.password = 'Password must contain from 8 to 15 characters';\r\n            }\r\n            if (!values.confirmPassword) {\r\n                errors.confirmPassword = 'Required';\r\n            } else if (values.password.length !== values.confirmPassword.length) {\r\n                errors.confirmPassword = \"Passwords don't match\";\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(register(values.email, values.password))\r\n        }\r\n    })\r\n\r\n    const error = useSelector<AppRootStateType, string | null>(state => state.register.error)\r\n    const isFetching = useSelector<AppRootStateType, boolean>(state => state.register.isFetching)\r\n    const isRegistered = useSelector<AppRootStateType, boolean>(state => state.register.isRegistered)\r\n\r\n    const history = useHistory()\r\n\r\n    const [type, setType] = useState<InputTypeType>(\"password\")\r\n\r\n    const cancelHandler = () => {\r\n        history.push(PATH.LOGIN)\r\n    }\r\n\r\n    const changeTypeHandler = () => {\r\n        type === 'text' ? setType('password') : setType('text')\r\n    }\r\n\r\n\r\n    // redirect logic\r\n    if (isRegistered) return <Redirect to={PATH.LOGIN}/>\r\n\r\n    return (\r\n        <div className={cls.registrationContainer}>\r\n            {\r\n                isFetching\r\n                    ?\r\n                    <Preloader/>\r\n                    :\r\n                    <div className={cls.card}>\r\n                        <h2 className={cls.title}>IT-Incubator</h2>\r\n                        <h3 className={cls.subtitle}>Sign Up</h3>\r\n                        <form onSubmit={formik.handleSubmit}>\r\n                            <label>\r\n                                <p className={cls.titleEmail}>Email</p>\r\n                                <div className={cls.inputContainer}>\r\n                                    <SuperInputText\r\n                                        {...formik.getFieldProps('email')}\r\n                                        className={cls.inputEmailPassword}\r\n                                        type={\"text\"}\r\n                                        onClick={() => dispatch(setRegisterError(null))}\r\n                                        // name={'email'}\r\n                                        // onChange={formik.handleChange}\r\n                                        // onBlur={formik.handleBlur}\r\n                                        // value={formik.values.email}\r\n                                    />\r\n                                    {\r\n                                        formik.touched.email &&\r\n                                        formik.errors.email ? <div style={{color: 'red'}}>{formik.errors.email}</div> :\r\n                                            <div style={{color: 'red'}}>{error}</div>\r\n                                    }\r\n                                </div>\r\n                            </label>\r\n                            <label>\r\n                                <p className={cls.titlePassword}>Password</p>\r\n                                <div className={cls.inputContainer}>\r\n                                    <div className={cls.eye} onClick={changeTypeHandler}><img\r\n                                        src={type === 'password' ? closedEye : eye} alt=\"eye\"/></div>\r\n                                    <SuperInputText\r\n                                        {...formik.getFieldProps('password')}\r\n                                        className={cls.inputEmailPassword}\r\n                                        type={type}\r\n                                        // name={'password'}\r\n                                        // onBlur={formik.handleBlur}\r\n                                        // onChange={formik.handleChange}\r\n                                        // value={formik.values.password}\r\n                                    />\r\n                                    {formik.touched.password && formik.errors.password ?\r\n                                        <div style={{color: 'red'}}>{formik.errors.password}</div> : null\r\n                                    }\r\n                                </div>\r\n                            </label>\r\n                            <label>\r\n                                <p className={cls.titlePassword}>Confirm Password</p>\r\n                                <div className={cls.inputContainer}>\r\n                                    <div className={cls.eye} onClick={changeTypeHandler}><img\r\n                                        src={type === 'password' ? closedEye : eye} alt=\"eye\"/></div>\r\n                                    <SuperInputText\r\n                                        {...formik.getFieldProps('confirmPassword')}\r\n                                        className={cls.inputEmailPassword}\r\n                                        type={type}\r\n                                        // name={'confirmPassword'}\r\n                                        // onBlur={formik.handleBlur}\r\n                                        // onChange={formik.handleChange}\r\n                                        // value={formik.values.confirmPassword}\r\n                                    />\r\n                                    {formik.touched.confirmPassword && formik.errors.confirmPassword ?\r\n                                        <div style={{color: 'red'}}>{formik.errors.confirmPassword}</div> : null}\r\n                                </div>\r\n                            </label>\r\n\r\n                            <div className={cls.buttonContainer}>\r\n                                <button\r\n                                    className={cls.cancelButton}\r\n                                    onClick={cancelHandler}>\r\n                                    <span>Cancel</span>\r\n                                </button>\r\n                                <button type={\"submit\"}\r\n                                        className={cls.registerButton}\r\n                                >\r\n                                    <span>Register</span>\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}","import React, {useState} from \"react\";\r\nimport {NavLink, useLocation} from \"react-router-dom\";\r\nimport cls from \"./HeaderMain.module.scss\"\r\nimport {PATH} from \"../../App\";\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport {logoutTC} from \"../../m2-bll/authReducer\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {\r\n    setCurrentPage,\r\n    setPageCount,\r\n    setRangeSort,\r\n    setSearchName,\r\n    setUpdatedDirection,\r\n    setUserId\r\n} from \"../../m2-bll/packsReducer\";\r\n\r\n\r\nexport const HeaderMain = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [finalClass, setFinalClass] = useState(cls.active)\r\n\r\n    let location = useLocation()\r\n\r\n    const onClickHandler = () => {\r\n        dispatch(logoutTC())\r\n    }\r\n\r\n    const clickPackListProfileHandler = () =>{\r\n        dispatch(setUserId(\"\"))\r\n        dispatch(setRangeSort([0,0]))\r\n        dispatch(setCurrentPage(1))\r\n        dispatch(setSearchName(\"\"))\r\n        dispatch(setUpdatedDirection(\"0updated\"))\r\n        dispatch(setPageCount(6))\r\n    }\r\n\r\n    return (\r\n        <div className={cls.headerContainer}>\r\n            <div className={cls.wrapper}>\r\n                <h1 className={cls.logo}>It-incubator</h1>\r\n                <div className={cls.linksContainer}>\r\n                    <div className={cls.linkContainer} onClick={clickPackListProfileHandler}>\r\n                        <NavLink to={PATH.PACKS_LIST}\r\n                                 className={location.pathname === PATH.PACKS_LIST ? finalClass : \"\"}\r\n                                 onMouseEnter={() => setFinalClass(\"\")}\r\n                                 onMouseOut={() => setFinalClass(cls.active)}\r\n                                 tabIndex={1}>Packs\r\n                            list</NavLink>\r\n                    </div>\r\n                    <div className={cls.linkContainer} onClick={clickPackListProfileHandler}>\r\n                        <NavLink to={PATH.PROFILE} tabIndex={2}\r\n                                 className={location.pathname === PATH.PROFILE ? finalClass : \"\"}\r\n                                 onMouseEnter={() => setFinalClass(\"\")}\r\n                                 onMouseOut={() => setFinalClass(cls.active)}\r\n                        >Profile</NavLink>\r\n                    </div>\r\n                </div>\r\n                <div className={cls.buttonContainer}>\r\n                    <SuperButton onClick={onClickHandler} className={cls.logoutBtn}><span>Logout</span></SuperButton>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {KeyboardEvent, useCallback, useEffect, useState} from \"react\";\r\nimport cls from \"./PacksList.module.scss\"\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport {TablePacks} from \"./TablePacks/TablePacks\";\r\nimport Search from \"../common/Search/Search\";\r\n\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    createNewPack,\r\n    deletePack, editPack,\r\n    getDataPacks,\r\n    setCurrentPage,\r\n    setPageCount,\r\n    setSearchName,\r\n    setUserId\r\n} from \"../../m2-bll/packsReducer\";\r\nimport {AppRootStateType} from \"../../m2-bll/store\";\r\nimport {isLoggedInApp} from \"../../m2-bll/authReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../App\";\r\nimport {DoubleRange} from \"./DoubleRange/DoubleRange\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport {CardsCountDirectionType, UpdatedDirectionType} from \"./TablePacks/TableHeaderPacks/TableHeaderPacks\";\r\nimport Modal from '../common/Modal/Modal'\r\nimport { AddPackForm } from './AddPackForm/AddPackForm'\r\n\r\ntype ButtonNameType = 'my' | 'all'\r\n\r\nexport const PacksList = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const id = useSelector<AppRootStateType, string>(state => state.profile.informationAboutUser._id)\r\n\r\n    const error = useSelector<AppRootStateType, string | null>(state => state.auth.error)\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn)\r\n\r\n    const page = useSelector<AppRootStateType, number>(state => state.packs.cardPacksRequestParameters.page)\r\n    const pageCount = useSelector<AppRootStateType, number>(state => state.packs.cardPacksRequestParameters.pageCount)\r\n    const packName = useSelector<AppRootStateType, string>(state => state.packs.cardPacksRequestParameters.packName)\r\n    const updatedDirection = useSelector<AppRootStateType, UpdatedDirectionType | CardsCountDirectionType>(state => state.packs.cardPacksRequestParameters.sortPacks)\r\n    const currentUserId = useSelector<AppRootStateType, string>(state => state.packs.cardPacksRequestParameters.user_id)\r\n    const minCards = useSelector<AppRootStateType, number>(state => state.packs.cardPacksRequestParameters.minCardsCount)\r\n    const maxCards = useSelector<AppRootStateType, number>(state => state.packs.cardPacksRequestParameters.maxCardsCount)\r\n    const cardPacksTotalCount = useSelector<AppRootStateType, number>(state => state.packs.cardPacksTotalCount)\r\n    const maxCount = useSelector<AppRootStateType, number>(state => state.packs.maxCardsCount)\r\n    const isFetchingPacks = useSelector<AppRootStateType, boolean>(state => state.packs.isFetching)\r\n\r\n    const [activeModal, setActiveModal] = useState<boolean>(false)\r\n\r\n    const [activeClass, setActiveClass] = useState(cls.active)\r\n    const [buttonName, setButtonName] = useState<ButtonNameType>('all')\r\n\r\n    useEffect(() => {\r\n        if (!isLoggedIn) {\r\n            if (!error) dispatch(isLoggedInApp())\r\n        } else {\r\n            dispatch(getDataPacks())\r\n        }\r\n    }, [isLoggedIn, dispatch, page, pageCount, packName, currentUserId, updatedDirection, minCards, maxCards])\r\n\r\n\r\n    const openModal = () => {\r\n        setActiveModal(true)\r\n    }\r\n\r\n    const getMyPacksList = useCallback(() => {\r\n        setButtonName('my')\r\n        dispatch(setUserId(id))\r\n    }, [id, dispatch])\r\n\r\n    const getAllPacksList = useCallback(() => {\r\n        setButtonName('all')\r\n        dispatch(setUserId(\"\"))\r\n    }, [dispatch])\r\n\r\n    const onPacksPageChanges = useCallback((page: number) => {\r\n        dispatch(setCurrentPage(page + 1))\r\n    }, [dispatch])\r\n\r\n    const changePacksPageCount = useCallback((count: number) => {\r\n        dispatch(setPageCount(count))\r\n    }, [dispatch])\r\n\r\n    const handlePressSearch = useCallback((e: KeyboardEvent<HTMLInputElement>) => {\r\n        dispatch(setSearchName(e.currentTarget.value))\r\n        e.currentTarget.blur()\r\n    }, [dispatch])\r\n\r\n\r\n    if (error) {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={cls.packlistContainer}>\r\n            <div className={cls.card}>\r\n                <div className={cls.info}>\r\n                    <p className={cls.ownerTitle}>Show packs cards</p>\r\n                    <div className={cls.buttonsContainer}>\r\n                        <SuperButton\r\n                            className={buttonName === 'my' ? `${cls.myButton} ${activeClass}` : cls.myButton}\r\n                            onClick={getMyPacksList}\r\n                            onMouseEnter={() => setActiveClass(\"\")}\r\n                            onMouseOut={() => setActiveClass(cls.active)}\r\n                        >My</SuperButton>\r\n                        <SuperButton\r\n                            className={buttonName === \"all\" ? `${cls.allButton} ${activeClass}` : cls.allButton}\r\n                            onClick={getAllPacksList}\r\n                            onMouseEnter={() => setActiveClass(\"\")}\r\n                            onMouseOut={() => setActiveClass(cls.active)}\r\n                        >All</SuperButton>\r\n                    </div>\r\n                    <p className={cls.numberTitle}>Number of cards</p>\r\n                    {!isFetchingPacks && <DoubleRange maxCount={maxCount}/>}\r\n                </div>\r\n                <div className={cls.packslist}>\r\n                    <h2 className={cls.packslistTitle}>Packs list</h2>\r\n                    <div className={cls.search_AddButtonContainer}>\r\n                        <Search className={cls.search} handlePressSearch={handlePressSearch}/>\r\n                        <Modal active={activeModal} setActive={setActiveModal}>\r\n                            <AddPackForm active={activeModal} setActive={setActiveModal}/>\r\n                        </Modal>\r\n                        <div className={cls.addButtonContainer}>\r\n                            <SuperButton className={cls.addPackButton} onClick={openModal}>\r\n                                <span>Add new pack</span>\r\n                            </SuperButton>\r\n                        </div>\r\n                    </div>\r\n                    <TablePacks/>\r\n                    {!!cardPacksTotalCount && <Paginator\r\n                        pageCount={pageCount}\r\n                        itemsTotalCount={cardPacksTotalCount}\r\n                        onPageChanges={onPacksPageChanges}\r\n                        changePageCount={changePacksPageCount}\r\n                    />}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport cls from \"./TableHeaderCards.module.scss\"\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../../m2-bll/store\";\r\n\r\n\r\ntype TableHeaderType = {\r\n    className: string\r\n}\r\n\r\nexport const TableHeaderCards: React.FC<TableHeaderType> = ({className}) => {\r\n\r\n\r\n\r\n    const appUserId = useSelector<AppRootStateType, string>(state => state.profile.informationAboutUser._id)\r\n    const packUserId = useSelector<AppRootStateType, string>(state => state.cards.packUserId)\r\n\r\n    const gridChangeClass = appUserId === packUserId ? cls.gridChangeClass : \"\"\r\n\r\n    return (\r\n        <div className={`${className} ${cls.tableHeader} ${gridChangeClass}`}>\r\n            <div>Question</div>\r\n            <div>Answer</div>\r\n            <div>Last Updated</div>\r\n            <div>Grade</div>\r\n            {appUserId === packUserId && <div>Actions</div>}\r\n        </div>\r\n    )\r\n}","import { useFormik } from 'formik'\r\nimport React, { Dispatch, SetStateAction } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { editCard } from '../../../../../m2-bll/cardsReducer'\r\nimport SuperButton from '../../../../common/SuperButton/SuperButton'\r\nimport SuperInputText from '../../../../common/SuperInput/SuperInputText'\r\nimport styles from './EditCardForm.module.scss'\r\n\r\ntype EditCardFormPropsType = {\r\n  cardId: string\r\n  question: string\r\n  answer: string\r\n  setActive: Dispatch<SetStateAction<boolean>>\r\n}\r\n\r\ntype FormValues = {\r\n  question: string\r\n  answer: string\r\n}\r\n\r\nexport const EditCardForm = ({question,answer, cardId, setActive}: EditCardFormPropsType) => {\r\n  const dispatch = useDispatch()\r\n  const formik = useFormik({\r\n    validate: (values) => {\r\n      \r\n      if (!values.question) {\r\n        return {\r\n          question: 'Question is required',\r\n        }\r\n      }\r\n      if (!values.answer) {\r\n        return {\r\n          answer: 'Answer is required',\r\n        }\r\n      }\r\n    },\r\n    initialValues: {\r\n      question: question,\r\n      answer: answer,\r\n    },\r\n    onSubmit: async ({question, answer}: FormValues) => {\r\n      setActive(false)\r\n      await dispatch(editCard(cardId, question, answer))\r\n      question = ''\r\n      answer = ''\r\n    },\r\n  })\r\n  \r\n  const handleCancel = () => {\r\n    setActive(false)\r\n    formik.resetForm()\r\n  }\r\n  \r\n  return (\r\n    <form className={styles.formContainer} onSubmit={formik.handleSubmit}>\r\n      <h2>Edit Card</h2>\r\n      <div>\r\n        <label htmlFor=\"question\" className={styles.label}>new question</label>\r\n        <SuperInputText\r\n          name=\"question\"\r\n          type=\"text\"\r\n          className={styles.inputForm}\r\n          onChange={formik.handleChange}\r\n          value={formik.values.question}\r\n        />\r\n      </div>\r\n      <div className={styles.errorContainer}>\r\n        {formik.errors.question ? (\r\n          <div className={styles.error}>{formik.errors.question}</div>) : null}\r\n      </div>\r\n      \r\n      <div>\r\n        <label htmlFor=\"answer\" className={styles.label}>new answer</label>\r\n        <SuperInputText\r\n          name=\"answer\"\r\n          type=\"text\"\r\n          className={styles.inputForm}\r\n          onChange={formik.handleChange}\r\n          value={formik.values.answer}\r\n        />\r\n      </div>\r\n      <div className={styles.errorContainer}>\r\n        {formik.errors.answer ? (\r\n          <div className={styles.error}>{formik.errors.answer}</div>) : null}\r\n      </div>\r\n      \r\n      <div className={styles.buttonWrapper}>\r\n        <SuperButton\r\n          onClick={handleCancel}\r\n          className={styles.cancelButton}\r\n          type={'reset'}\r\n        >\r\n          Cancel\r\n        </SuperButton>\r\n        <SuperButton\r\n          className={styles.updateButton}\r\n          type={'submit'}\r\n        >\r\n          Update\r\n        </SuperButton>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n","import React, { Dispatch, SetStateAction } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { deleteCard } from '../../../../../m2-bll/cardsReducer'\r\nimport SuperButton from '../../../../common/SuperButton/SuperButton'\r\nimport styles from './DeleteCardForm.module.scss'\r\n\r\ntype DeleteCardFormPropsType = {\r\n  cardId: string\r\n  question: string\r\n  setActive: Dispatch<SetStateAction<boolean>>\r\n}\r\n\r\nexport const DeleteCardForm = ({question, cardId, setActive}: DeleteCardFormPropsType) => {\r\n  const dispatch = useDispatch()\r\n  \r\n  const handleDeletePack = () => {\r\n    dispatch(deleteCard(cardId))\r\n    setActive(false)\r\n  }\r\n  const handleCancel = () => {\r\n    setActive(false)\r\n  }\r\n  \r\n  return (\r\n    <form className={styles.formContainer}>\r\n      <h2>Delete Card</h2>\r\n      <div className={styles.question}>Do you really want to remove <b>Card </b> - <b>{question}</b>?\r\n        <div>\r\n          This question will be excluded from this pack\r\n        </div>\r\n      </div>\r\n      <div className={styles.buttonContainer}>\r\n        <SuperButton\r\n          onClick={handleCancel}\r\n          className={styles.cancelButton}\r\n        >\r\n          Cancel\r\n        </SuperButton>\r\n        <SuperButton\r\n          onClick={handleDeletePack}\r\n          className={styles.deleteButton}\r\n        >\r\n          Delete\r\n        </SuperButton>\r\n      </div>\r\n    </form>\r\n  )\r\n}","import React, { useState } from 'react'\r\nimport cls from './TableDataCards.module.scss'\r\nimport SuperButton from '../../../common/SuperButton/SuperButton'\r\nimport { useSelector } from 'react-redux'\r\nimport { AppRootStateType } from '../../../../m2-bll/store'\r\nimport Modal from '../../../common/Modal/Modal'\r\nimport { EditCardForm } from './EditCardForm/EditCardForm'\r\nimport { DeleteCardForm } from './DeleteCardForm/DeleteCardForm'\r\nimport ReactStars from 'react-stars'\r\n\r\ntype TableDataCardsPropsType = {\r\n    question: string\r\n    answer: string\r\n    updatedDate: string\r\n    updatedTime: string\r\n    grade: number\r\n    card_id: string\r\n}\r\n\r\n\r\nexport const TableDataCards: React.FC<TableDataCardsPropsType> = ({\r\n                                                                      question,\r\n                                                                      answer,\r\n                                                                      updatedDate,\r\n                                                                      updatedTime,\r\n                                                                      grade,\r\n\r\n                                                                      card_id,\r\n                                                                      children\r\n                                                                  }) => {\r\n    const [activeDeleteModal, setActiveDeleteModal] = useState<boolean>(false)\r\n    const [activeEditModal, setActiveEditModal] = useState<boolean>(false)\r\n\r\n    const appUserId = useSelector<AppRootStateType, string>(state => state.profile.informationAboutUser._id)\r\n    const currentPackUserId = useSelector<AppRootStateType, string>(state => state.cards.packUserId)\r\n\r\n    const gridChangeClass = appUserId === currentPackUserId ? cls.gridChangeClass : \"\"\r\n\r\n    const openDeleteModal = () => {\r\n        setActiveDeleteModal(true)\r\n    }\r\n    const openEditModal = () => {\r\n        setActiveEditModal(true)\r\n    }\r\n\r\n    return (\r\n        <div className={`${cls.tableData} ${gridChangeClass}`}>\r\n            <div>{question}</div>\r\n            <div>{answer}</div>\r\n            <div>\r\n                <p>Date: {updatedDate}</p>\r\n                <p>Time: {updatedTime}</p>\r\n            </div>\r\n            <div>\r\n                <ReactStars\r\n                    count={5}\r\n                    size={24}\r\n                    value={grade}\r\n                    edit={false}\r\n                    color2={'#ffd700'}\r\n                className={cls.rating}\r\n                />\r\n            </div>\r\n\r\n            {\r\n                appUserId === currentPackUserId\r\n                &&\r\n                <div className={cls.buttonsContainer}>\r\n                    <Modal active={activeDeleteModal} setActive={setActiveDeleteModal}>\r\n                        <DeleteCardForm question={question} cardId={card_id} setActive={setActiveDeleteModal}/>\r\n                    </Modal>\r\n                    <SuperButton\r\n                        onClick={openDeleteModal}\r\n                        className={cls.deleteButton}\r\n                    >\r\n                        <span>Delete</span>\r\n                    </SuperButton>\r\n                    <Modal active={activeEditModal} setActive={setActiveEditModal}>\r\n                        <EditCardForm\r\n                          question={question}\r\n                          answer={answer}\r\n                          cardId={card_id}\r\n                          setActive={setActiveEditModal}\r\n                        />\r\n                    </Modal>\r\n                    <SuperButton\r\n                        onClick={openEditModal}\r\n                        className={cls.editButton}\r\n                    >\r\n                        <span>Edit</span>\r\n                    </SuperButton>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport cls from \"./TableCards.module.scss\"\r\nimport {TableHeaderCards} from \"./TableHeaderCards/TableHeaderCards\";\r\nimport {TableDataCards} from \"./TableDataCards/TableDataCards\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../m2-bll/store\";\r\nimport {CardResponseType} from \"../../../m3-dal/apiCards\";\r\nimport {Preloader} from \"../../common/preloader/Preloader\";\r\n\r\nexport const TableCards: React.FC = () => {\r\n\r\n    const cardsData = useSelector<AppRootStateType, Array<CardResponseType>>(state => state.cards.cards)\r\n    const cardsTotalCount = useSelector<AppRootStateType, number>(state => state.cards.cardsTotalCount)\r\n    const isFetchingCards = useSelector<AppRootStateType, boolean>(state => state.cards.isFetching)\r\n    const appUserId = useSelector<AppRootStateType, string>(state => state.profile.informationAboutUser._id)\r\n    const packUserId = useSelector<AppRootStateType, string>(state => state.cards.packUserId)\r\n\r\n    return (\r\n        <div className={cls.tableContainer}>\r\n            <TableHeaderCards className={cls.tableHeader}/>\r\n            {\r\n                isFetchingCards\r\n                    ?\r\n                    <Preloader/>\r\n                    :\r\n                    cardsTotalCount !== 0\r\n                        ?\r\n                        cardsData.map(card => {\r\n\r\n                        const updatedDate = card.updated.slice(0, 10)\r\n                        const updatedTime = card.updated.slice(11, 19)\r\n\r\n                        return (\r\n\r\n                            <TableDataCards\r\n                                key={card._id}\r\n                                card_id={card._id}\r\n                                question={card.question}\r\n                                answer={card.answer}\r\n                                updatedDate={updatedDate}\r\n                                updatedTime={updatedTime}\r\n                                grade={card.grade}\r\n                            />\r\n                        )\r\n                    })\r\n                    :\r\n                        <>\r\n                            {\r\n                                appUserId === packUserId\r\n                                    ?\r\n                                    <p className={cls.noCardsTitle}>This pack is empty. Click add new card to fill this\r\n                                        pack</p>\r\n                                    :\r\n                                    <p className={cls.noCardsTitle}>This pack is empty</p>\r\n\r\n                            }\r\n                        </>\r\n            }\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/LeftArrow.54207b29.svg\";","import React, { Dispatch, SetStateAction } from 'react'\r\nimport mainStyles from '../../../App.module.scss'\r\nimport styles from './AddCardForm.module.scss'\r\nimport { useFormik } from 'formik'\r\nimport { useDispatch } from 'react-redux'\r\nimport { createNewPack, setLoadingPacks } from '../../../m2-bll/packsReducer'\r\nimport SuperInputText from '../../common/SuperInput/SuperInputText'\r\nimport SuperButton from '../../common/SuperButton/SuperButton'\r\nimport { createNewCard } from '../../../m2-bll/cardsReducer'\r\n\r\ntype AddCardFormPropsType = {\r\n  setActive: Dispatch<SetStateAction<boolean>>\r\n}\r\n\r\ntype FormValues = {\r\n  question: string,\r\n  answer: string\r\n}\r\n\r\nexport const AddCardForm = ({setActive}: AddCardFormPropsType) => {\r\n  const dispatch = useDispatch()\r\n  const formik = useFormik({\r\n    validate: (card) => {\r\n      if (!card.question) {\r\n        return {\r\n          question: 'question is required',\r\n        }\r\n      }\r\n      if (!card.answer) {\r\n        return {\r\n          answer: 'answer is required',\r\n        }\r\n      }\r\n    },\r\n    \r\n    initialValues: {\r\n      question: '',\r\n      answer: '',\r\n    },\r\n    onSubmit: async (card: FormValues) => {\r\n      setActive(false)\r\n      await dispatch(createNewCard(card.question, card.answer))\r\n      card.question = ''\r\n      card.answer = ''\r\n    },\r\n    // onReset: (values, {resetForm}) => resetForm(),\r\n  })\r\n  \r\n  const handleCancel = () => {\r\n    setActive(false)\r\n    formik.resetForm()\r\n  }\r\n  \r\n  return (\r\n    <form onSubmit={formik.handleSubmit} className={styles.form}>\r\n      <div className={styles.formWrapper}>\r\n        <h2 className={styles.title}>Add new card</h2>\r\n        <div>\r\n          <label htmlFor=\"question\" className={styles.label}>Question</label>\r\n          <SuperInputText\r\n            name=\"question\"\r\n            type=\"text\"\r\n            className={styles.inputForm}\r\n            onChange={formik.handleChange}\r\n            value={formik.values.question}\r\n          />\r\n          {formik.touched.question}\r\n        </div>\r\n        <div className={styles.errorContainer}>\r\n          {formik.errors.question ? (\r\n            <div className={styles.error}>{formik.errors.question}</div>) : null}\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"answer\" className={styles.label}>Answer</label>\r\n          <SuperInputText\r\n            name=\"answer\"\r\n            type=\"text\"\r\n            className={styles.inputForm}\r\n            onChange={formik.handleChange}\r\n            value={formik.values.answer}\r\n          />\r\n        </div>\r\n        <div className={styles.errorContainer}>\r\n          {formik.errors.answer ? (\r\n            <div className={styles.error}>{formik.errors.answer}</div>) : null}\r\n        </div>\r\n        <div className={styles.buttonContainer}>\r\n          <SuperButton\r\n            className={styles.cancelButton}\r\n            onClick={handleCancel}\r\n            title={'Cancel'}\r\n            type={'reset'}\r\n          >\r\n            Cancel\r\n          </SuperButton>\r\n          <SuperButton\r\n            className={styles.saveButton}\r\n            title={'Save'}\r\n            type={'submit'}\r\n          >\r\n            Save\r\n          </SuperButton>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n","import React, {KeyboardEvent, useCallback, useEffect, useState} from \"react\";\r\nimport cls from \"./CardsList.module.scss\"\r\nimport Search from \"../common/Search/Search\";\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport {getDataCards, setCurrentPage, setPackId, setPageCount, setSearchName} from \"../../m2-bll/cardsReducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {TableCards} from \"./TableCards/TableCards\";\r\nimport {PATH} from \"../../App\";\r\nimport {AppRootStateType} from \"../../m2-bll/store\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport arrow from \"../../../assets/images/LeftArrow.svg\"\r\nimport Modal from '../common/Modal/Modal'\r\nimport {AddCardForm} from \"./AddCardForm/AddCardForm\";\r\n\r\nexport const CardsList = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const history = useHistory()\r\n\r\n    const page = useSelector<AppRootStateType, number>(state => state.cards.cardsRequestParameters.page)\r\n    const packName = useSelector<AppRootStateType, string>(state => state.cards.cardPackName)\r\n    const pageCount = useSelector<AppRootStateType, number>(state => state.cards.cardsRequestParameters.pageCount)\r\n    const cardsTotalCount = useSelector<AppRootStateType, number>(state => state.cards.cardsTotalCount)\r\n    const searchQuestion = useSelector<AppRootStateType, string>(state => state.cards.cardsRequestParameters.cardQuestion)\r\n\r\n\r\n    const appUserId = useSelector<AppRootStateType, string>(state => state.profile.informationAboutUser._id)\r\n    const currentPackUserId = useSelector<AppRootStateType, string>(state => state.cards.packUserId)\r\n\r\n    const {packId} = useParams<{ packId: string }>()\r\n    const [activeModal, setActiveModal] = useState<boolean>(false)\r\n    useEffect(() => {\r\n        dispatch(setPackId(packId))\r\n        dispatch(getDataCards())\r\n    }, [page, pageCount, searchQuestion])\r\n\r\n    const onCardsPageChanges = useCallback((page: number) => {\r\n        dispatch(setCurrentPage(page + 1))\r\n    }, [dispatch])\r\n\r\n    const changeCardsPageCount = useCallback((count: number) => {\r\n        dispatch(setPageCount(count))\r\n    }, [dispatch])\r\n\r\n    const handlePressSearch = useCallback((e: KeyboardEvent<HTMLInputElement>) => {\r\n        dispatch(setSearchName(e.currentTarget.value))\r\n        e.currentTarget.blur()\r\n    }, [dispatch])\r\n\r\n    const openModal = () => {\r\n        setActiveModal(true)\r\n    }\r\n\r\n    return (\r\n        <div className={cls.cardslistContainer}>\r\n            <div className={cls.card}>\r\n                <div className={cls.cardslist}>\r\n                    <div className={cls.arrowTitleContainer}><img className={cls.arrow}\r\n                                                                  onClick={() => {\r\n                                                                      history.push(PATH.PACKS_LIST)\r\n                                                                  }}\r\n                                                                  src={arrow}\r\n                                                                  alt={\"\"}\r\n                    /><h2 className={cls.cardslistTitle}>Pack\r\n                        name: <span>{packName}</span></h2></div>\r\n                    <div className={cls.search_AddButtonContainer}>\r\n                        <Search className={cls.search} handlePressSearch={handlePressSearch}/>\r\n                        <div className={cls.addButtonContainer}>\r\n                            <Modal active={activeModal} setActive={setActiveModal}>\r\n                                <AddCardForm setActive={setActiveModal}/>\r\n                            </Modal>\r\n                            {appUserId === currentPackUserId\r\n                            && <SuperButton\r\n                                className={cls.addPackButton}\r\n                                onClick={openModal}\r\n                            >\r\n                                <span>Add new card</span>\r\n                            </SuperButton>}\r\n                        </div>\r\n                    </div>\r\n                    <TableCards/>\r\n                    {!!cardsTotalCount && <Paginator\r\n                        pageCount={pageCount}\r\n                        itemsTotalCount={cardsTotalCount}\r\n                        onPageChanges={onCardsPageChanges}\r\n                        changePageCount={changeCardsPageCount}\r\n                    />}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, useEffect, useState} from \"react\";\r\nimport {Redirect, useHistory, useParams} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../m2-bll/store\";\r\nimport {CardResponseType} from \"../../m3-dal/apiCards\";\r\nimport cls from \"./Learn.module.scss\"\r\nimport {Preloader} from \"../common/preloader/Preloader\";\r\nimport {addCard, getCardsToLearn, sendCardGrade, setChangeCard, setPackId} from \"../../m2-bll/learnReducer\";\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport {PATH} from \"../../App\";\r\nimport {isLoggedInApp} from \"../../m2-bll/authReducer\";\r\n\r\nconst grades = ['Did not know', 'Forgot', 'A lot of thought', 'Confused', 'Knew the answer'];\r\n\r\nexport const Learn = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [showAnswer, setShowAnswer] = useState(false)\r\n\r\n    const [currentGrade, setCurrentGrade] = useState(0)\r\n\r\n    const error = useSelector<AppRootStateType, string | null>(state => state.auth.error)\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn)\r\n\r\n    const cards = useSelector<AppRootStateType, Array<CardResponseType>>(state => state.learn.cards)\r\n    const isFetching = useSelector<AppRootStateType, boolean>(state => state.learn.isFetching)\r\n    const packName = localStorage.getItem(\"packName\")\r\n    const changeCard = useSelector<AppRootStateType, boolean>(state => state.learn.changeCard)\r\n    const card = useSelector<AppRootStateType, CardResponseType | null>(state => state.learn.card)\r\n\r\n    let history = useHistory()\r\n\r\n    const {packId} = useParams<{ packId: string }>()\r\n\r\n    dispatch(setPackId(packId))\r\n\r\n    useEffect(() => {\r\n        if (!isLoggedIn) {\r\n            if (!error) dispatch(isLoggedInApp())\r\n        } else {\r\n            dispatch(getCardsToLearn())\r\n        }\r\n    }, [dispatch])\r\n\r\n\r\n    //algorithm for getting card\r\n    const getCard = (cards: Array<CardResponseType>) => {\r\n        const sum = cards.reduce((acc, card) => acc + (6 - card.grade) * (6 - card.grade), 0);\r\n        const rand = Math.random() * sum;\r\n        const res = cards.reduce((acc: { sum: number, id: number }, card, i) => {\r\n                const newSum = acc.sum + (6 - card.grade) * (6 - card.grade);\r\n                return {sum: newSum, id: newSum < rand ? i : acc.id}\r\n            }\r\n            , {sum: 0, id: -1});\r\n\r\n        return cards[res.id + 1];\r\n    }\r\n\r\n\r\n    const cancelHandler = () => {\r\n        history.goBack()\r\n    }\r\n\r\n    const setGradeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setCurrentGrade(+e.target.defaultValue)\r\n    }\r\n\r\n    const nextHandler = () => {\r\n        dispatch(sendCardGrade(currentGrade))\r\n        setShowAnswer(false)\r\n        dispatch(setChangeCard(true))\r\n    }\r\n\r\n    if (changeCard) {\r\n        dispatch(addCard(getCard(cards)))\r\n        dispatch(setChangeCard(false))\r\n    }\r\n\r\n    if (error) {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n\r\n    return (\r\n        <div className={cls.learnContainer}>\r\n            {\r\n                !showAnswer\r\n                    ?\r\n                    isFetching\r\n                        ?\r\n                        <Preloader/>\r\n                        :\r\n                        cards.length === 0\r\n                            ?\r\n                            <>\r\n                                <p className={`${cls.card} ${cls.noCards}`}>No cards to learn</p>\r\n                            </>\r\n                            :\r\n                            <div className={cls.card}>\r\n                                <h2 className={cls.title}>{`Learn \"${packName}\"`}</h2>\r\n                                <p><span>Question: </span>{card && card.question}</p>\r\n                                <div className={cls.buttonsContainer}>\r\n                                    <SuperButton className={cls.cancelButton}\r\n                                                 onClick={cancelHandler}\r\n                                    >\r\n                                    <span>\r\n                                        Cancel\r\n                                    </span>\r\n                                    </SuperButton>\r\n                                    <SuperButton className={cls.showAnswerButton}\r\n                                                 onClick={() => setShowAnswer(true)}\r\n                                    >\r\n                                    <span>\r\n                                        Show answer\r\n                                    </span>\r\n                                    </SuperButton>\r\n                                </div>\r\n                            </div>\r\n                    :\r\n                    !card\r\n                        ?\r\n                        <Preloader/>\r\n                        :\r\n                        <div className={cls.card}>\r\n                            <h2 className={cls.title}>{`Learn \"${packName}\"`}</h2>\r\n                            <p><span>Question: </span>{card && card.question}</p>\r\n                            <p><span>Answer: </span>{card && card.answer}</p>\r\n                            <p className={cls.answerTitle}>Rate yourself:</p>\r\n                            {\r\n                                grades.map((grade, index) => {\r\n                                    return (\r\n                                        <div key={index} className={cls.answers}>\r\n                                            <label className={cls.label}>\r\n                                                <input type={\"radio\"} name={\"answer\"} value={index + 1}\r\n                                                       onChange={setGradeHandler}/>{`${grade}`}\r\n                                            </label>\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                            }\r\n                            <div className={cls.buttonsContainerAnswer}>\r\n                                <SuperButton className={cls.cancelAnswerButton}\r\n                                             onClick={cancelHandler}\r\n                                >\r\n                                    <span>\r\n                                        Cancel\r\n                                    </span>\r\n                                </SuperButton>\r\n                                <SuperButton className={cls.nextButton}\r\n                                             onClick={nextHandler}\r\n                                >\r\n                                    <span>\r\n                                        Next\r\n                                    </span>\r\n                                </SuperButton>\r\n                            </div>\r\n                        </div>\r\n            }\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {Route} from 'react-router-dom';\r\nimport mainStyles from './App.module.scss';\r\nimport {Header} from './m1-ui/Header/Header';\r\nimport {Login} from \"./m1-ui/Login/Login\";\r\nimport {Profile} from \"./m1-ui/Profile/Profile\";\r\nimport {PageNotFound} from \"./m1-ui/PageNotFound/PageNotFound\";\r\nimport {RestorePassword} from \"./m1-ui/RestorePassword/RestorePassword\";\r\nimport {NewPassword} from \"./m1-ui/NewPassword/NewPassword\";\r\nimport {TestComponents} from \"./m1-ui/TestComponents/TestComponents\";\r\nimport {PersonalInfo} from \"./m1-ui/Profile/PersonalInfo/PersonalInfo\";\r\nimport {Register} from \"./m1-ui/Registration/Register\";\r\nimport {HeaderMain} from \"./m1-ui/HeaderMain/HeaderMain\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"./m2-bll/store\";\r\nimport {PacksList} from \"./m1-ui/PacksList/PacksList\";\r\nimport {Redirect} from \"react-router\";\r\nimport {Preloader} from \"./m1-ui/common/preloader/Preloader\";\r\nimport {CardsList} from \"./m1-ui/CardsList/CardsList\";\r\nimport {Learn} from \"./m1-ui/Learn/Learn\";\r\n\r\nexport const PATH = {\r\n    PROFILE: '/profile',\r\n    PACKS_LIST: '/packslist',\r\n    CARDS_LIST: '/cardslist/:packId?',\r\n    LEARN: '/learn/:packId?',\r\n    USER_INFO: '/information_about_user',\r\n    LOGIN: '/login',\r\n    REGISTRATION: '/registration',\r\n    TEST_COMPONENTS: '/test_components',\r\n    PAGE_NOT_FOUND: '/404',\r\n    RESTORE_PASSWORD: '/restore_password',\r\n    NEW_PASSWORD: \"/new_password/:token?\"\r\n}\r\n\r\nconst App = () => {\r\n\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn)\r\n    const isFetching = useSelector<AppRootStateType, boolean>(state => state.auth.isFetching)\r\n\r\n    return (\r\n        isFetching\r\n            ?\r\n            <Preloader/>\r\n            :\r\n            <div className={mainStyles.appWrapper}>\r\n                {/*<Header/>*/}\r\n                {isLoggedIn && <HeaderMain/>}\r\n                <div className={mainStyles.appWrapperContent}>\r\n                    <Route exact path={'/'} render={() => <Redirect to={PATH.LOGIN}/>}/>\r\n                    <Route exact path={PATH.LOGIN} render={() => <Login/>}/>\r\n                    <Route path={PATH.PROFILE} render={() => <Profile/>}/>\r\n                    <Route path={PATH.PACKS_LIST} render={() => <PacksList/>}/>\r\n                    <Route path={PATH.CARDS_LIST} render={() => <CardsList/>}/>\r\n                    <Route path={PATH.LEARN} render={() => <Learn/>}/>\r\n                    <Route path={PATH.USER_INFO} render={() => <PersonalInfo/>}/>\r\n                    <Route path={PATH.REGISTRATION} render={() => <Register/>}/>\r\n                    <Route path={PATH.TEST_COMPONENTS} render={() => <TestComponents/>}/>\r\n                    <Route path={PATH.PAGE_NOT_FOUND} render={() => <PageNotFound/>}/>\r\n                    <Route path={PATH.RESTORE_PASSWORD} render={() => <RestorePassword/>}/>\r\n                    <Route path={PATH.NEW_PASSWORD}\r\n                           render={() => <NewPassword/>}/> {/* для отображения <NewPassword/> после token стоит \"?\" */}\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport reportWebVitals from './reportWebVitals'\r\nimport { HashRouter } from 'react-router-dom'\r\nimport { Provider } from 'react-redux'\r\nimport {store} from \"./n1-main/m2-bll/store\";\r\nimport App from \"./n1-main/App\";\r\n\r\n\r\n\r\nReactDOM.render(\r\n    <HashRouter>\r\n      <Provider store={store}>\r\n        <App/>\r\n      </Provider>\r\n    </HashRouter>,\r\n  document.getElementById('root'),\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}