{"version":3,"sources":["n1-main/m1-ui/RestorePassword/RestorePassword.module.css","n1-main/m1-ui/Profile/Profile.module.css","n1-main/m1-ui/common/SuperInput/SuperInputText.module.css","n1-main/m1-ui/common/SuperButton/SuperButton.module.css","n1-main/m1-ui/TestComponents/TestComponents.module.css","n1-main/m1-ui/common/SuperCheckbox/SuperCheckbox.module.css","n1-main/m1-ui/Header/Header.module.css","n1-main/m1-ui/Registration/Register.module.css","n1-main/m1-ui/Header/Header.tsx","n1-main/m3-dal/API.ts","n1-main/m3-dal/apiProfile.ts","n1-main/m2-bll/profileReducer.ts","n1-main/m2-bll/authReducer.ts","n1-main/m1-ui/common/SuperInput/SuperInputText.tsx","n1-main/m1-ui/common/SuperButton/SuperButton.tsx","n1-main/m1-ui/Login/Login.tsx","n1-main/m1-ui/Profile/Profile.tsx","n1-main/m1-ui/PageNotFound/PageNotFound.tsx","n1-main/m1-ui/CheckPassword/CheckPassword.tsx","n1-main/m3-dal/apiRestore.ts","n1-main/m2-bll/restorePasswordReducer.ts","n1-main/m1-ui/RestorePassword/RestorePassword.tsx","n1-main/m1-ui/NewPassword/NewPassword.tsx","n1-main/m1-ui/common/SuperCheckbox/SuperCheckbox.tsx","n1-main/m1-ui/TestComponents/TestComponents.tsx","n1-main/m3-dal/registerAPI.ts","n1-main/m2-bll/registerReducer.ts","n1-main/m1-ui/common/preloader/Spinner-2.gif","n1-main/m1-ui/Registration/Register.tsx","n1-main/m1-ui/Registration/RegisterContainer.tsx","n1-main/m1-ui/Registration/RegisterPage.tsx","n1-main/m1-ui/Profile/PersonalInfo/PersonalInfo.tsx","n1-main/m1-ui/App.tsx","reportWebVitals.ts","n1-main/m2-bll/store.ts","index.tsx","n1-main/m1-ui/Login/Login.module.css"],"names":["module","exports","Header","className","cls","header","to","instance","axios","create","baseURL","withCredentials","authAPI","data","post","delete","axiosInstance","profileApi","name","put","initialState","informationAboutUser","_id","email","publicCardPacksCount","created","Date","updated","isAdmin","verified","rememberMe","setInformationAboutUserAC","type","isLoggedIn","setIsLoggedInAC","value","SuperInputText","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","errorInput","superInput","e","currentTarget","key","SuperButton","red","finalClassName","default","Login","useState","setEmail","password","setPassword","errorEmail","errorPassword","check","setCheck","useSelector","state","auth","dispatch","useDispatch","loginContainer","card","title","subtitle","titleEmail","inputEmail","spanErrorEmail","titlePassword","inputPassword","spanErrorPassword","checkbox","checked","restorePassword","button","onClick","then","res","catch","response","messages","console","log","newAccount","signUp","Profile","info","profile","useEffect","profileContainer","infoCards","infoUser","userPhoto","src","avatar","userName","logoutBtn","editProfile","userCards","PageNotFound","pageNotFoundContainer","CheckPassword","alt","authApi","message","resetPasswordToken","setError","payload","showEmailCheck","isNewPasswordCreated","RestorePassword","restorePasswordContainer","placeholder","text","firstAdvice","err","secondAdvice","reLogin","NewPassword","token","useParams","newPasswordContainer","setNewPassword","SuperCheckbox","onChangeChecked","children","TestComponents","testComponentsContainer","componentsContainer","RegisterAPI","REGISTER_LOADING","REGISTER_ERROR","REGISTER_SUCCESS","registerInitialState","isRegistered","isFetching","setRegisterError","setRegisterLoading","Register","register","pass","setPass","confirmPass","setConfirmPass","validateEmailError","setValidateError","validatePasswordError","setValidatePasswordError","registrationContainer","content","form","inputTitle","inputContainer","input","test","length","loader","preloader","buttonsContainer","cancelBtn","registerBtn","disable","disabled","a","RegisterContainer","RegisterPage","PersonalInfo","nickname","setNickname","styles","infoContainer","saveBtn","setUserNameAC","updatedUser","App","path","render","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8abc3f22.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"restorePasswordContainer\":\"RestorePassword_restorePasswordContainer__1wnLR\",\"card\":\"RestorePassword_card__3V_ND\",\"title\":\"RestorePassword_title__2F-Wi\",\"subtitle\":\"RestorePassword_subtitle__1ptNR\",\"inputEmail\":\"RestorePassword_inputEmail__11Gy0\",\"text\":\"RestorePassword_text__16KHx\",\"firstAdvice\":\"RestorePassword_firstAdvice__XjzZg\",\"secondAdvice\":\"RestorePassword_secondAdvice__2_1QE\",\"button\":\"RestorePassword_button__2WTC0\",\"reLogin\":\"RestorePassword_reLogin__1aPBa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileContainer\":\"Profile_profileContainer__3Ixw8\",\"card\":\"Profile_card__GBead\",\"infoCards\":\"Profile_infoCards__2GqCU\",\"infoUser\":\"Profile_infoUser__24NX0\",\"userPhoto\":\"Profile_userPhoto__1ecE3\",\"userName\":\"Profile_userName__Tzmf_\",\"userCards\":\"Profile_userCards__1t_iu\",\"logoutBtn\":\"Profile_logoutBtn__279IM\",\"editProfile\":\"Profile_editProfile__20e7z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__1Y9SI\",\"errorInput\":\"SuperInputText_errorInput__1QiRr\",\"error\":\"SuperInputText_error__5dUtt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2WNQ6\",\"red\":\"SuperButton_red__1si2j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"testComponentsContainer\":\"TestComponents_testComponentsContainer__2JwAI\",\"componentsContainer\":\"TestComponents_componentsContainer__1m_9P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2drz_\",\"spanClassName\":\"SuperCheckbox_spanClassName__3LAnk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1pFAq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registrationContainer\":\"Register_registrationContainer__35byv\",\"content\":\"Register_content__3SINa\",\"title\":\"Register_title__3SEuG\",\"form\":\"Register_form__3dFMB\",\"inputContainer\":\"Register_inputContainer__2jgIG\",\"input\":\"Register_input__XkwHW\",\"inputTitle\":\"Register_inputTitle__1OHel\",\"buttonsContainer\":\"Register_buttonsContainer__3zMl4\",\"cancelBtn\":\"Register_cancelBtn__33-qR\",\"registerBtn\":\"Register_registerBtn__7altz\",\"info\":\"Register_info__B-CUX\",\"error\":\"Register_error__1TJPY\",\"loader\":\"Register_loader__24Smx\",\"disable\":\"Register_disable__29zQQ\"};","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport cls from './Header.module.css'\r\n\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div className={cls.header}>\r\n            <NavLink to={'/login'}>Login</NavLink>\r\n            <NavLink to={'/registration'}>Registration</NavLink>\r\n            <NavLink to={'/profile'}>Profile</NavLink>\r\n            <NavLink to={'/404'}>404</NavLink>\r\n            <NavLink to={'/restore_password'}>Restore password</NavLink>\r\n            <NavLink to={'/new_password'}>New password</NavLink>\r\n            <NavLink to={'/test_components'}>Test components</NavLink>\r\n        </div>\r\n    )\r\n}","import axios from 'axios'\r\nimport {DefaultResponseType} from \"./apiRestore\";\r\n\r\nconst instance = axios.create({\r\n    // baseURL: \"http://localhost:7542/2.0/\",\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0\",\r\n    withCredentials: true,\r\n});\r\n\r\nexport const authAPI = {\r\n    login(data: LoginParamsType) {\r\n        return instance.post<LoginResponseType>(\"auth/login\", data)\r\n    },\r\n    logout() {\r\n        return instance.delete<DefaultResponseType>(\"auth/me\")\r\n    },\r\n    isAuthorized () {\r\n        return instance.post<LoginResponseType>(\"auth/me\",{})\r\n    }\r\n}\r\n\r\n\r\nexport type LoginParamsType = {\r\n    email: string\r\n    password: string\r\n    check: boolean\r\n}\r\n\r\nexport type LoginResponseType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar?: string\r\n    publicCardPacksCount: number\r\n    created: DateConstructor\r\n    updated: DateConstructor\r\n    isAdmin: boolean\r\n    verified: boolean\r\n    rememberMe: boolean\r\n    error?: string\r\n}\r\n","import axios from 'axios'\r\nimport {LoginResponseType} from \"./API\";\r\n\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    // baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true\r\n})\r\n\r\n//api types\r\n\r\nexport const profileApi = {\r\n    editUserName(name: string) {\r\n        return axiosInstance.put<{updatedUser: LoginResponseType}>('/auth/me', {\r\n            name\r\n        })\r\n    }\r\n}","import {LoginResponseType} from \"../m3-dal/API\";\r\nimport {AppThunkType} from \"./store\";\r\nimport {authApi} from \"../m3-dal/apiRestore\";\r\nimport {profileApi} from \"../m3-dal/apiProfile\";\r\n\r\nconst initialState = {\r\n    informationAboutUser: {\r\n        _id: \"\",\r\n        email: \"\",\r\n        name: \"\",\r\n        publicCardPacksCount: 0,\r\n        created: Date,\r\n        updated: Date,\r\n        isAdmin: false,\r\n        verified: false,\r\n        rememberMe: false,\r\n    }\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\n/*export type LoginResponseType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar?: string\r\n    publicCardPacksCount: number\r\n    created: Date\r\n    updated: Date\r\n    isAdmin: boolean\r\n    verified: boolean\r\n    rememberMe: boolean\r\n    error?: string\r\n}*/\r\n\r\nexport const profileReducer = (state: InitialStateType = initialState, action: ProfileActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'profile/SET-INFORMATION-ABOUT-USER':\r\n            return {...state, informationAboutUser: action.data}\r\n        case \"profile/SET-USER-NAME\":\r\n            return {...state, informationAboutUser: {...state.informationAboutUser, name: action.name}}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setInformationAboutUserAC = (data: LoginResponseType) =>\r\n    ({type: 'profile/SET-INFORMATION-ABOUT-USER', data} as const)\r\n\r\nexport const setUserNameAC = (name: string) =>\r\n    ({type: 'profile/SET-USER-NAME', name} as const)\r\n\r\nexport const editUserNameTC = (name: string): AppThunkType => (dispatch) => {\r\n    profileApi.editUserName(name)\r\n        .then(res => {\r\n            debugger\r\n            dispatch(setUserNameAC(res.data.updatedUser.name))\r\n        })\r\n        .catch(err => {\r\n            const error = err.response\r\n                ?\r\n                err.response.data.error\r\n                :\r\n                (err.message + ', more details in the console')\r\n            console.log(`error: ${error}`)\r\n        })\r\n}\r\n\r\nexport type ProfileActionsType = ReturnType<typeof setInformationAboutUserAC | typeof setUserNameAC>","import {authAPI, LoginParamsType} from \"../m3-dal/API\";\r\nimport {setInformationAboutUserAC} from \"./profileReducer\";\r\nimport {AppThunkType} from \"./store\";\r\n\r\nconst initialState = {\r\n    isLoggedIn: false\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const authReducer = (state: InitialStateType = initialState, action: AuthActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'login/SET-IS-LOGGED-IN':\r\n            return {...state, isLoggedIn: action.value}\r\n        case 'logout/SET-IS-LOGGED-OUT':\r\n            return {...state, isLoggedIn: action.value}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n// actions\r\nexport const setIsLoggedInAC = (value: boolean) =>\r\n    ({type: 'login/SET-IS-LOGGED-IN', value} as const)\r\n\r\nexport const setIsLoggedOutAC = (value: boolean) =>\r\n    ({type: 'logout/SET-IS-LOGGED-OUT', value} as const)\r\n\r\n// thunks\r\nexport const loginTC = (data: LoginParamsType): AppThunkType => (dispatch) => {\r\n    authAPI.login(data)\r\n        .then(res => {\r\n            dispatch(setInformationAboutUserAC(res.data))\r\n            dispatch(setIsLoggedInAC(true))\r\n        })\r\n        .catch((e) => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.messages + ', more details in the console')\r\n            console.log('Error: ', {...e})\r\n        })\r\n}\r\n\r\nexport const logoutTC = (): AppThunkType => (dispatch) => {\r\n    authAPI.logout()\r\n        .then(res => {\r\n            dispatch(setIsLoggedOutAC(false))\r\n        })\r\n        .catch((e) => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.messages + ', more details in the console')\r\n            console.log('Error: ', {...e})\r\n        })\r\n}\r\n\r\nexport const isLoggedInApp = (): AppThunkType => (dispatch) => {\r\n    authAPI.isAuthorized()\r\n        .then(res => {\r\n            dispatch(setInformationAboutUserAC(res.data))\r\n            dispatch(setIsLoggedInAC(true))\r\n        })\r\n        .catch((e) => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.messages + ', more details in the console')\r\n            console.log('Error: ', {...e})\r\n        })\r\n}\r\n\r\nexport type AuthActionsType = ReturnType<typeof setIsLoggedInAC | typeof setInformationAboutUserAC | typeof setIsLoggedOutAC> // изменили запись в одну строчку !!","import React, { ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent } from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n  onChangeText?: (value: string) => void\r\n  onEnter?: () => void\r\n  error?: string\r\n  spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n  {\r\n    type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n    onChange, onChangeText,\r\n    onKeyPress, onEnter,\r\n    error,\r\n    className, spanClassName,\r\n    \r\n    ...restProps// все остальные пропсы попадут в объект restProps\r\n  },\r\n) => {\r\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n    onChange // если есть пропс onChange\r\n    && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n    onChangeText && onChangeText(e.currentTarget.value)\r\n  }\r\n  const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n    onKeyPress && onKeyPress(e)\r\n    onEnter // если есть пропс onEnter\r\n    && e.key === 'Enter' // и если нажата кнопка Enter\r\n    && onEnter() // то вызвать его\r\n  }\r\n  \r\n  const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n  const finalInputClassName = `${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\r\n  \r\n  return (\r\n    <>\r\n      <input\r\n        type={type}\r\n        onChange={onChangeCallback}\r\n        onKeyPress={onKeyPressCallback}\r\n        className={finalInputClassName}\r\n        \r\n        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n      />\r\n      {error && <div className={finalSpanClassName}>{error}</div>}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red,\r\n        className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport cls from './Login.module.css'\r\nimport {loginTC} from \"../../m2-bll/authReducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../m2-bll/store\";\r\nimport {NavLink, Redirect} from 'react-router-dom';\r\nimport SuperInputText from \"../common/SuperInput/SuperInputText\";\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\n\r\n\r\nexport const Login = () => {\r\n    const [email, setEmail] = useState<string>(\"\")\r\n    const [password, setPassword] = useState<string>(\"\")\r\n    const errorEmail = email ? '' : 'write your email';\r\n    const errorPassword = password ? '' : 'write your password';\r\n    const [check, setCheck] = useState<boolean>(false)\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n\r\n    const onChangeCheck = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setCheck(e.currentTarget.checked)\r\n    }\r\n\r\n    const sentData = () => {\r\n        dispatch(loginTC({email, password, check}))\r\n        setEmail(\"\")\r\n        setPassword(\"\")\r\n        setCheck(false)\r\n    }\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return (\r\n        <div className={cls.loginContainer}>\r\n            <h1>Login</h1>\r\n            <div className={cls.card}>\r\n                <span className={cls.title}>It-incubator</span>\r\n                <span className={cls.subtitle}>Sign In</span>\r\n                <div>\r\n                    <span className={cls.titleEmail}>Email</span>\r\n                    <SuperInputText\r\n                        className={cls.inputEmail}\r\n                        value={email}\r\n                        type={\"text\"}\r\n                        onChangeText={setEmail}\r\n                        error={errorEmail}\r\n                        spanClassName={cls.spanErrorEmail}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <span className={cls.titlePassword}>Password</span>\r\n                    <SuperInputText\r\n                        className={cls.inputPassword}\r\n                        value={password}\r\n                        type={\"password\"}\r\n                        onChangeText={setPassword}\r\n                        error={errorPassword}\r\n                        spanClassName={cls.spanErrorPassword}\r\n                    />\r\n                </div>\r\n                <div className={cls.checkbox}>\r\n                    <input type={\"checkbox\"} checked={check} name={\"RememberMe\"} onChange={onChangeCheck}/>\r\n                    <span>Remember me</span>\r\n                </div>\r\n                <NavLink to={'/restore_password'} className={cls.restorePassword}>Forgot Password</NavLink>\r\n                <SuperButton className={cls.button} onClick={sentData}>Login</SuperButton>\r\n                <span className={cls.newAccount}>Don't have an account</span>\r\n                <NavLink to={'/registration'} className={cls.signUp}>Sign Up</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useEffect} from 'react'\r\nimport cls from './Profile.module.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../m2-bll/store\";\r\nimport {LoginResponseType} from \"../../m3-dal/API\";\r\nimport {NavLink, Redirect} from 'react-router-dom';\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport {isLoggedInApp, logoutTC} from \"../../m2-bll/authReducer\";\r\n\r\n\r\n\r\nexport const Profile = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const info = useSelector<AppRootStateType, LoginResponseType>(state => state.profile.informationAboutUser)\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn)\r\n\r\n    useEffect(() => {\r\n        if (!info._id) {\r\n            dispatch(isLoggedInApp())\r\n        }\r\n    },[])\r\n\r\n    const onClickHandler = () => {\r\n        dispatch(logoutTC())\r\n    }\r\n\r\n    if (!isLoggedIn) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    return (\r\n        <div className={cls.profileContainer}>\r\n            <h1>Profile</h1>\r\n            <div className={cls.card}>\r\n                <div className={cls.infoCards}>\r\n                    <div className={cls.infoUser}>\r\n                        <img className={cls.userPhoto} src={info.avatar ? info.avatar : \"\"}/>\r\n                        <span className={cls.userName}>{info.name}</span>\r\n                        <div>\r\n                            <SuperButton onClick={onClickHandler} className={cls.logoutBtn}>Logout</SuperButton>\r\n                        </div>\r\n                        <div>\r\n                            <NavLink to={'/profile/information_about_user'} className={cls.editProfile}>Edit Profile</NavLink>\r\n                        </div>\r\n                    </div>\r\n                    <span className={cls.userCards}>Number of cards: {info.publicCardPacksCount}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport cls from './PageNotFound.module.css'\r\n\r\n\r\nexport const PageNotFound = () => {\r\n    return (\r\n        <div className={cls.pageNotFoundContainer}>\r\n            <h1>PageNotFound</h1>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\ntype CheckPasswordType = {\r\n    email: string\r\n}\r\n\r\nexport const CheckPassword: React.FC<CheckPasswordType> = ({email}) => {\r\n    return (\r\n        <div>\r\n            <h2>It-incubator</h2>\r\n\r\n            <img src=\"\" alt=\"picture\"/>\r\n\r\n            <h3>Check email</h3>\r\n\r\n            <p>We've sent an Email with instructions to {email}</p>\r\n\r\n        </div>\r\n    )\r\n}","import axios from 'axios'\r\n\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    // baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true\r\n})\r\n\r\n//api types\r\n\r\nexport type DefaultResponseType = {\r\n    info: string\r\n    error: string | null\r\n}\r\n\r\n\r\nexport const authApi = {\r\n    restorePassword(email: string) {\r\n        return axiosInstance.post<DefaultResponseType>('/auth/forgot', {\r\n            email,\r\n            message: `<div style='background-color: lime; padding: 15px'>\r\n                      <p>To restore your password, follow the link below</p>\r\n                      <a href='https://georgeusynin.github.io/cards-react-redux/#/new_password/$token$'>Restore link</a>\r\n                      </div>`\r\n        })\r\n    },\r\n    setNewPassword(password: string, resetPasswordToken: string) {\r\n        return axiosInstance.post<DefaultResponseType>('/auth/set-new-password', {\r\n            password,\r\n            resetPasswordToken\r\n        })\r\n    }\r\n}","//types\r\n\r\nimport {AppThunkType} from \"./store\";\r\nimport {authApi} from \"../m3-dal/apiRestore\";\r\n\r\ntype InitialStateType = {\r\n    showEmailCheck: boolean\r\n    error: string | null\r\n    isNewPasswordCreated: boolean\r\n}\r\n\r\nexport type RestorePasswordActionsType =\r\n\r\n    | ReturnType<typeof setShowEmailCheck>\r\n    | ReturnType<typeof setError>\r\n    | ReturnType<typeof setIsNewPasswordCreated>\r\n\r\n//actions\r\n\r\nconst setShowEmailCheck = (showEmailCheck: boolean) => {\r\n    return {\r\n        type: 'cards/restorePassword/setShowEmailCheck',\r\n        payload: {\r\n            showEmailCheck\r\n        }\r\n    } as const\r\n}\r\n\r\nconst setError = (error: string | null) => {\r\n    return {\r\n        type: 'cards/restorePassword/setError',\r\n        payload: {\r\n            error\r\n        }\r\n    } as const\r\n}\r\nconst setIsNewPasswordCreated = (isNewPasswordCreated: boolean) => {\r\n    return {\r\n        type: 'cards/restorePassword/setIsNewPasswordCreated',\r\n        payload: {\r\n            isNewPasswordCreated\r\n        }\r\n    } as const\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    showEmailCheck: false,\r\n    error: null,\r\n    isNewPasswordCreated: false\r\n}\r\n\r\nexport const restorePasswordReducer = (state: InitialStateType = initialState, action: RestorePasswordActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"cards/restorePassword/setShowEmailCheck\":\r\n        case \"cards/restorePassword/setError\":\r\n        case \"cards/restorePassword/setIsNewPasswordCreated\":\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\n//thunk\r\n\r\nexport const restorePassword = (email: string): AppThunkType => (dispatch) => {\r\n    authApi.restorePassword(email)\r\n        .then(res => {\r\n            dispatch(setShowEmailCheck(true))\r\n        })\r\n        .catch(err => {\r\n            const error = err.response\r\n                ?\r\n                err.response.data.error\r\n                :\r\n                (err.message + ', more details in the console')\r\n            debugger\r\n            dispatch(setError(error))\r\n        })\r\n}\r\n\r\nexport const setNewPassword = (password: string, resetPasswordToken: string): AppThunkType => (dispatch) => {\r\n    authApi.setNewPassword(password, resetPasswordToken)\r\n        .then(res => {\r\n            debugger\r\n            dispatch(setIsNewPasswordCreated(true))\r\n        })\r\n        .catch(err => {\r\n            const error = err.response\r\n                ?\r\n                err.response.data.error\r\n                :\r\n                (err.message + ', more details in the console')\r\n            dispatch(setError(error))\r\n        })\r\n}","import React, {useState} from 'react'\r\nimport cls from './RestorePassword.module.css'\r\nimport SuperInputText from \"../common/SuperInput/SuperInputText\";\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../m2-bll/store\";\r\nimport {CheckPassword} from \"../CheckPassword/CheckPassword\";\r\nimport {restorePassword} from \"../../m2-bll/restorePasswordReducer\";\r\n\r\n\r\nexport const RestorePassword = () => {\r\n\r\n    const showEmailCheck = useSelector<AppRootStateType, boolean>(state => state.restorePassword.showEmailCheck)\r\n\r\n    const error = useSelector<AppRootStateType, null | string>(state => state.restorePassword.error)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [email, setEmail] = useState('')\r\n\r\n    const onChangeEmail = (email: string) => {\r\n        setEmail(email)\r\n    }\r\n\r\n    const onClickSend = () => {\r\n        dispatch(restorePassword(email))\r\n    }\r\n\r\n    return (\r\n        <div className={cls.restorePasswordContainer}>\r\n            {\r\n                showEmailCheck\r\n                    ?\r\n                    <CheckPassword email={email}/>\r\n                    :\r\n                    <div className={cls.card}>\r\n\r\n                        <h2 className={cls.title}>It-incubator</h2>\r\n\r\n                        <h3>Forgot your password?</h3>\r\n\r\n                        <SuperInputText\r\n                            value={email}\r\n                            onChangeText={onChangeEmail}\r\n                            className={cls.inputEmail}\r\n                            placeholder={'Email'}\r\n                        />\r\n\r\n                        <p>{error}</p>\r\n\r\n                        <p className={`${cls.text} ${cls.firstAdvice}`}>Enter your email address and we will send\r\n                            you further\r\n                            instructions</p>\r\n\r\n                        <SuperButton onClick={onClickSend} className={cls.button}>Send Instructions</SuperButton>\r\n\r\n                        <p className={`${cls.text} ${cls.secondAdvice}`}>Did you remember your password?</p>\r\n\r\n                        <div className={cls.reLogin}>\r\n                            <NavLink to={'/login'}>Try logging in</NavLink>\r\n                        </div>\r\n\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n//","import React, {useState} from 'react'\r\nimport {Redirect, useParams} from 'react-router-dom'\r\nimport cls from './NewPassword.module.css'\r\nimport SuperInputText from \"../common/SuperInput/SuperInputText\";\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../m2-bll/store\";\r\nimport {setNewPassword} from \"../../m2-bll/restorePasswordReducer\";\r\n\r\n\r\nexport const NewPassword = () => {\r\n    debugger\r\n\r\n    const isNewPasswordCreated = useSelector<AppRootStateType, boolean>(state => state.restorePassword.isNewPasswordCreated)\r\n\r\n    const error = useSelector<AppRootStateType, null | string>(state => state.restorePassword.error)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const {token} = useParams<{ token: string }>();\r\n\r\n    const [password, setPassword] = useState('')\r\n\r\n    const onChangePassword = (password: string) => {\r\n        setPassword(password)\r\n    }\r\n\r\n    const onClickSend = () => {\r\n        if (token)\r\n            dispatch(setNewPassword(password, token))\r\n    }\r\n\r\n    if (isNewPasswordCreated) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    return (\r\n        <div className={cls.newPasswordContainer}>\r\n\r\n            <h2>It-incubator</h2>\r\n\r\n            <h3>Create new Password</h3>\r\n\r\n            <SuperInputText value={password} onChangeText={onChangePassword}/>\r\n\r\n            <p>{error}</p>\r\n\r\n            <p>Create new password and we will send you further instructions to email</p>\r\n\r\n            <SuperButton onClick={onClickSend}>Send instructions</SuperButton>\r\n\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React from \"react\";\r\nimport cls from './TestComponents.module.css'\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport SuperInputText from \"../common/SuperInput/SuperInputText\";\r\nimport SuperCheckbox from \"../common/SuperCheckbox/SuperCheckbox\";\r\n\r\nexport const TestComponents = () => {\r\n    return (\r\n        <div className={cls.testComponentsContainer}>\r\n            <h1>Common components</h1>\r\n            <div className={cls.componentsContainer}>\r\n                <div>\r\n                    <h2>Button</h2>\r\n                    <SuperButton>\r\n                        Button\r\n                    </SuperButton>\r\n                </div>\r\n                <div>\r\n                    <h2>Input Text</h2>\r\n                    <SuperInputText/>\r\n                </div>\r\n                <div>\r\n                    <h2>CheckBox</h2>\r\n                    <SuperCheckbox/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import axios from 'axios'\r\n\r\nexport interface IRegisterData {\r\n  addedUser: {},\r\n  error?: string\r\n}\r\n\r\nconst instance = axios.create({\r\n  // baseURL: \"http://localhost:7542/2.0/\",\r\n  baseURL: 'https://neko-back.herokuapp.com/2.0',\r\n  withCredentials: true,\r\n\r\n})\r\n\r\nexport const RegisterAPI = {\r\n  register(email: string, password: string) {\r\n    return instance.post<IRegisterData>(`auth/register`, {email, password})\r\n  },\r\n}\r\n","import { RegisterAPI } from '../m3-dal/registerAPI'\r\nimport { AppThunkType } from './store'\r\n\r\nexport const REGISTER_LOADING = 'REGISTER/LOADING'\r\nexport const REGISTER_ERROR = 'REGISTER/ERROR'\r\nexport const REGISTER_SUCCESS = 'REGISTER/SUCCESS'\r\n\r\ntype InitialStateType = {\r\n  isRegistered: boolean,\r\n  error: string | null,\r\n  isFetching: boolean\r\n}\r\n\r\nexport const registerInitialState: InitialStateType = {\r\n  isRegistered: false,\r\n  error: null,\r\n  isFetching: false,\r\n}\r\n\r\n\r\nexport type RegisterActions = ReturnType<typeof setRegisterSuccess\r\n  | typeof setRegisterError\r\n  | typeof setRegisterLoading>;\r\n\r\nexport const setRegisterSuccess = (isRegistered: boolean) => {\r\n  return {\r\n    type: REGISTER_SUCCESS,\r\n    isRegistered,\r\n  } as const\r\n}\r\n\r\nexport const setRegisterError = (error: string | null) => {\r\n  return {\r\n    type: REGISTER_ERROR,\r\n    error,\r\n  } as const\r\n}\r\n\r\nexport const setRegisterLoading = (isFetching: boolean) => {\r\n  return {\r\n    type: REGISTER_LOADING,\r\n    isFetching,\r\n  } as const\r\n}\r\n\r\nexport const registerReducer = (state = registerInitialState, action: RegisterActions): InitialStateType => {\r\n  switch (action.type) {\r\n    case REGISTER_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        isRegistered: action.isRegistered,\r\n      }\r\n    }\r\n    case REGISTER_ERROR: {\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n      }\r\n    }\r\n    case REGISTER_LOADING: {\r\n      return {\r\n        ...state,\r\n        isFetching: action.isFetching,\r\n      }\r\n    }\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const register =\r\n  (email: string, password: string): AppThunkType => async (dispatch) => {\r\n\r\n    // dispatch(setRegisterLoading(true))\r\n    try {\r\n      await RegisterAPI.register(email, password)\r\n      dispatch(setRegisterLoading(false))\r\n      dispatch(setRegisterSuccess(true))\r\n    } catch (e) {\r\n      const error = e.response.data.error\r\n      dispatch(setRegisterLoading(false))\r\n      dispatch(setRegisterError(error))\r\n    }\r\n  }","export default __webpack_public_path__ + \"static/media/Spinner-2.0c299348.gif\";","import React, {ChangeEvent, useEffect, useState} from 'react'\r\nimport cls from './Register.module.css'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { register, setRegisterError, setRegisterLoading } from '../../m2-bll/registerReducer'\r\nimport { AppRootStateType } from '../../m2-bll/store'\r\nimport preloader from '../common/preloader/Spinner-2.gif'\r\nimport SuperInputText from '../common/SuperInput/SuperInputText'\r\n\r\nexport const Register: React.FC = () => {\r\n  const dispatch = useDispatch()\r\n  const error = useSelector<AppRootStateType, string | null>(state => state.register.error)\r\n  const isFetching = useSelector<AppRootStateType, boolean>(state => state.register.isFetching)\r\n\r\n  let [email, setEmail] = useState<string>('')\r\n  let [pass, setPass] = useState<string>('')\r\n  let [confirmPass, setConfirmPass] = useState<string>('')\r\n  let [validateEmailError, setValidateError] = useState<string>('')\r\n  let [validatePasswordError, setValidatePasswordError] = useState<string>('')\r\n\r\n  useEffect(() => {\r\n    const error = null\r\n    dispatch(setRegisterError(error))\r\n  }, [dispatch])\r\n\r\n  const changeEmailHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const value = e.currentTarget.value\r\n    setEmail(value)\r\n    if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\r\n      setValidateError('invalid email')\r\n    } else {\r\n      setValidateError('')\r\n    }\r\n  }\r\n  const changePasswordHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const value = e.currentTarget.value\r\n    setPass(value)\r\n    if (value.length < 8 || value.length > 15) {\r\n      setValidatePasswordError('invalid password length')\r\n    } else {\r\n      setValidatePasswordError('')\r\n    }\r\n  }\r\n\r\n  const cancelHandler = () => {\r\n    setEmail('')\r\n    setPass('')\r\n    setConfirmPass('')\r\n  }\r\n  const registerHandler = () => {\r\n    dispatch(setRegisterLoading(true))\r\n    if (pass === confirmPass) {\r\n      dispatch(register(email, pass))\r\n    } else {\r\n      dispatch(setRegisterLoading(false))\r\n      dispatch(setRegisterError('password don\\'t match'))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={cls.registrationContainer}>\r\n      <div className={cls.content}>\r\n        <h2 className={cls.title}>IT-Incubator</h2>\r\n        <h2 className={cls.title}>Sign Up</h2>\r\n        <div className={cls.form}>\r\n          <label>\r\n            <div className={cls.inputTitle}>Email</div>\r\n            <div className={cls.inputContainer}>\r\n              <SuperInputText\r\n                className={cls.input}\r\n                value={email}\r\n                type=\"email\"\r\n                error={validateEmailError}\r\n                onChange={changeEmailHandler}\r\n              />\r\n            </div>\r\n          </label>\r\n          <label>\r\n            <div className={cls.inputTitle}>Password</div>\r\n            <div className={cls.inputContainer}>\r\n              <SuperInputText\r\n                className={cls.input}\r\n                value={pass}\r\n                type=\"password\"\r\n                error={validatePasswordError}\r\n                onChange={changePasswordHandler}\r\n              />\r\n            </div>\r\n          </label>\r\n          <label>\r\n            <div className={cls.inputTitle}>Confirm Password</div>\r\n            <div className={cls.inputContainer}>\r\n              <SuperInputText\r\n                className={cls.input}\r\n                value={confirmPass}\r\n                type=\"password\"\r\n                onChange={(e) => setConfirmPass(e.currentTarget.value)}\r\n              />\r\n            </div>\r\n          </label>\r\n        </div>\r\n        <div className={cls.info}>\r\n          {\r\n            isFetching ?\r\n              <div>\r\n                <img className={cls.loader} src={preloader} alt=\"preloader\"/>\r\n              </div>\r\n              : error && <div className={cls.error}>{error}</div>}\r\n        </div>\r\n        <div className={cls.buttonsContainer}>\r\n          <button className={cls.cancelBtn} onClick={cancelHandler}>Cancel\r\n          </button>\r\n          <button\r\n            className={isFetching ? `${cls.registerBtn} ${cls.disable}` : cls.registerBtn}\r\n            disabled={isFetching}\r\n            onClick={registerHandler}\r\n          >\r\n            Register\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\nimport {Redirect} from 'react-router'\r\nimport {Register} from './Register'\r\nimport {useSelector} from 'react-redux'\r\nimport {AppRootStateType} from \"../../m2-bll/store\";\r\n\r\nconst RegisterContainer: React.FC = () => {\r\n    const isRegistered = useSelector<AppRootStateType, boolean>(state => state.register.isRegistered)\r\n    // redirect logic\r\n    if (isRegistered) return <Redirect to={'/login'}/>\r\n\r\n    return (\r\n        <Register/>\r\n    )\r\n}\r\n\r\nexport default RegisterContainer\r\n","import React from 'react';\r\nimport RegisterContainer from \"./RegisterContainer\";\r\n\r\nconst RegisterPage: React.FC = () => {\r\n  console.log('render RegisterPage');\r\n  return (\r\n    <RegisterContainer/>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n","import React, {useState} from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport styles from './PersonalInfo.module.css'\r\nimport {editUserNameTC} from \"../../../m2-bll/profileReducer\";\r\n\r\nexport const PersonalInfo: React.FC = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    let [email, setEmail] = useState<string>('')\r\n    let [nickname, setNickname] = useState<string>('')\r\n    // let [error, setError] = useState<string | null>(null)\r\n\r\n    const cancelHandler = () => {\r\n        console.log('cancel')\r\n    }\r\n    const saveHandler = () => {\r\n        dispatch(editUserNameTC(nickname))\r\n        //     debugger\r\n        console.log('save')\r\n        //     if (pass === confirmPass) {\r\n        //         dispatch(register(email, pass))\r\n        //         setError(null)\r\n        //     } else {\r\n        //         setError('password don\\'t match')\r\n        //     }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.infoContainer}>\r\n            <div>\r\n                <h2>Personal Inforamtion</h2>\r\n                <div>\r\n                    <img src={''} alt='profile_photo'/>\r\n                </div>\r\n                <div className={styles.form}>\r\n                    <label>\r\n                        <div className={styles.inputTitle}>Nickname</div>\r\n                        <input className={styles.input} type=\"text\" value={nickname}\r\n                               onChange={(e) => setNickname(e.currentTarget.value)}/>\r\n                    </label>\r\n                    <label>\r\n                        <div className={styles.inputTitle}>Email</div>\r\n                        <input className={styles.input} type=\"password\" value={email}\r\n                               onChange={(e) => setEmail(e.currentTarget.value)}/>\r\n                    </label>\r\n                </div>\r\n                {/*<div className={cls.info}>*/}\r\n                {/*    {error && <div className={cls.error}>{error}</div>}*/}\r\n                {/*</div>*/}\r\n                <div className={styles.buttonsContainer}>\r\n                    <button className={styles.cancelBtn} onClick={cancelHandler}>Cancel\r\n                    </button>\r\n                    <button className={styles.saveBtn} onClick={saveHandler}>Save</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport './App.css';\r\nimport {Header} from './Header/Header';\r\nimport {Login} from \"./Login/Login\";\r\nimport {Profile} from \"./Profile/Profile\";\r\nimport {PageNotFound} from \"./PageNotFound/PageNotFound\";\r\nimport {RestorePassword} from \"./RestorePassword/RestorePassword\";\r\nimport {NewPassword} from \"./NewPassword/NewPassword\";\r\nimport {TestComponents} from \"./TestComponents/TestComponents\";\r\nimport RegisterPage from './Registration/RegisterPage'\r\nimport {PersonalInfo} from \"./Profile/PersonalInfo/PersonalInfo\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className='app-wrapper'>\r\n\r\n            <Header/>\r\n            <div className='app-wrapper-content'>\r\n                <Route path={'/login'} render={() => <Login/>}/>\r\n                <Route path={'/registration'} render={() => <RegisterPage/>}/>\r\n                <Route exact path={'/profile'} render={() => <Profile/>}/>\r\n                <Route path={'/404'} render={() => <PageNotFound/>}/>\r\n                <Route path={'/restore_password'} render={() => <RestorePassword/>}/>\r\n                <Route path={'/new_password/:token?'}\r\n                       render={() => <NewPassword/>}/> {/* для отображения <NewPassword/> после token стоит \"?\" */}\r\n                <Route path={'/test_components'} render={() => <TestComponents/>}/>\r\n                <Route path={'/profile/information_about_user'} render={() => <PersonalInfo/>}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware} from \"redux\";\r\nimport {combineReducers, createStore} from \"redux\";\r\nimport thunk, {ThunkAction} from \"redux-thunk\";\r\nimport {AuthActionsType, authReducer} from \"./authReducer\";\r\nimport {ProfileActionsType, profileReducer} from \"./profileReducer\";\r\nimport {RegisterActions, registerReducer} from './registerReducer'\r\nimport {RestorePasswordActionsType, restorePasswordReducer} from \"./restorePasswordReducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    profile: profileReducer,\r\n    restorePassword: restorePasswordReducer,\r\n    register: registerReducer\r\n})\r\n\r\nexport type AppActionsType = RestorePasswordActionsType | RegisterActions | AuthActionsType | ProfileActionsType\r\n\r\nexport type AppThunkType<ReturnType = void> = ThunkAction<ReturnType, AppRootStateType, unknown, AppActionsType>\r\n\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n\r\n//@ts-ignore\r\nwindow.store = store","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './n1-main/m1-ui/App'\r\nimport reportWebVitals from './reportWebVitals'\r\nimport { HashRouter } from 'react-router-dom'\r\nimport { Provider } from 'react-redux'\r\nimport {store} from \"./n1-main/m2-bll/store\";\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <Provider store={store}>\r\n        <App/>\r\n      </Provider>\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginContainer\":\"Login_loginContainer__3efiI\",\"card\":\"Login_card__1w84R\",\"title\":\"Login_title__3tkKw\",\"subtitle\":\"Login_subtitle__22JQq\",\"titleEmail\":\"Login_titleEmail__3_nhg\",\"inputEmail\":\"Login_inputEmail__TE3pQ\",\"spanErrorEmail\":\"Login_spanErrorEmail__YgcNl\",\"titlePassword\":\"Login_titlePassword__1poxZ\",\"inputPassword\":\"Login_inputPassword__13GGl\",\"spanErrorPassword\":\"Login_spanErrorPassword__1DkyW\",\"checkbox\":\"Login_checkbox__30IUp\",\"restorePassword\":\"Login_restorePassword__1-beV\",\"button\":\"Login_button__3r3_H\",\"newAccount\":\"Login_newAccount__xDhKj\",\"signUp\":\"Login_signUp__3mn0Y\"};"],"sourceRoot":""}