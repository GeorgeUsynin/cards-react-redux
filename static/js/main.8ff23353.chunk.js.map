{"version":3,"sources":["n1-main/m1-ui/common/SuperInput/SuperInputText.module.css","n1-main/m1-ui/common/SuperButton/SuperButton.module.css","n1-main/m1-ui/TestComponents/TestComponents.module.css","n1-main/m1-ui/common/SuperCheckbox/SuperCheckbox.module.css","n1-main/m1-ui/Header/Header.module.css","n1-main/m1-ui/Header/Header.tsx","n1-main/m1-ui/Login/Login.tsx","n1-main/m1-ui/Registration/Registration.tsx","n1-main/m1-ui/Profile/Profile.tsx","n1-main/m1-ui/PageNotFound/PageNotFound.tsx","n1-main/m1-ui/common/SuperInput/SuperInputText.tsx","n1-main/m1-ui/common/SuperButton/SuperButton.tsx","n1-main/m1-ui/CheckPassword/CheckPassword.tsx","n1-main/m3-dal/api.ts","n1-main/m2-bll/restorePasswordReducer.ts","n1-main/m1-ui/RestorePassword/RestorePassword.tsx","n1-main/m1-ui/NewPassword/NewPassword.tsx","n1-main/m1-ui/common/SuperCheckbox/SuperCheckbox.tsx","n1-main/m1-ui/TestComponents/TestComponents.tsx","n1-main/m1-ui/App.tsx","reportWebVitals.ts","n1-main/m2-bll/store.ts","n1-main/m2-bll/authReducer.ts","n1-main/m2-bll/profileReducer.ts","index.tsx"],"names":["module","exports","Header","className","cls","header","to","Login","loginContainer","Registration","registrationContainer","Profile","profileContainer","PageNotFound","pageNotFoundContainer","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","errorInput","superInput","e","currentTarget","value","key","SuperButton","red","finalClassName","default","CheckPassword","email","src","alt","axiosInstance","axios","create","baseURL","withCredentials","authApi","post","message","password","resetPasswordToken","setError","payload","initialState","showEmailCheck","isNewPasswordCreated","RestorePassword","useSelector","state","restorePassword","dispatch","useDispatch","useState","setEmail","restorePasswordContainer","onClick","then","res","data","NewPassword","token","useParams","setPassword","newPasswordContainer","info","setNewPassword","SuperCheckbox","onChangeChecked","children","checkbox","checked","TestComponents","testComponentsContainer","componentsContainer","App","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","auth","action","profile","store","createStore","applyMiddleware","thunk","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8ff23353.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__1Y9SI\",\"errorInput\":\"SuperInputText_errorInput__1QiRr\",\"error\":\"SuperInputText_error__5dUtt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2WNQ6\",\"red\":\"SuperButton_red__1si2j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"testComponentsContainer\":\"TestComponents_testComponentsContainer__2JwAI\",\"componentsContainer\":\"TestComponents_componentsContainer__1m_9P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2drz_\",\"spanClassName\":\"SuperCheckbox_spanClassName__3LAnk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1pFAq\"};","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport cls from './Header.module.css'\r\n\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div className={cls.header}>\r\n            <NavLink to={'/login'}>Login</NavLink>\r\n            <NavLink to={'/registration'}>Registration</NavLink>\r\n            <NavLink to={'/profile'}>Profile</NavLink>\r\n            <NavLink to={'/404'}>404</NavLink>\r\n            <NavLink to={'/restore_password'}>Restore password</NavLink>\r\n            <NavLink to={'/new_password'}>New password</NavLink>\r\n            <NavLink to={'/test_components'}>Test components</NavLink>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport cls from './Login.module.css'\r\n\r\n\r\nexport const Login = () => {\r\n    return (\r\n        <div className={cls.loginContainer}>\r\n            <h1>Login</h1>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport cls from './Registration.module.css'\r\n\r\n\r\nexport const Registration = () => {\r\n    return (\r\n        <div className={cls.registrationContainer}>\r\n            <h1>Registration</h1>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport cls from './Profile.module.css'\r\n\r\n\r\nexport const Profile = () => {\r\n    return (\r\n        <div className={cls.profileContainer}>\r\n            <h1>Profile</h1>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport cls from './PageNotFound.module.css'\r\n\r\n\r\nexport const PageNotFound = () => {\r\n    return (\r\n        <div className={cls.pageNotFoundContainer}>\r\n            <h1>PageNotFound</h1>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red,\r\n        className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React from 'react'\r\n\r\ntype CheckPasswordType = {\r\n    email: string\r\n}\r\n\r\nexport const CheckPassword: React.FC<CheckPasswordType> = ({email}) => {\r\n    return (\r\n        <div>\r\n            <h2>It-incubator</h2>\r\n\r\n            <img src=\"\" alt=\"picture\"/>\r\n\r\n            <h3>Check email</h3>\r\n\r\n            <p>We've sent an Email with instructions to {email}</p>\r\n\r\n        </div>\r\n    )\r\n}","import axios from 'axios'\r\n\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true\r\n})\r\n\r\n//api types\r\n\r\ntype ResponseType = {\r\n    info: string\r\n    error: string | null\r\n}\r\n\r\n\r\nexport const authApi = {\r\n    restorePassword(email: string) {\r\n        return axiosInstance.post<ResponseType>('/auth/forgot', {\r\n            email,\r\n            message: `<div style='background-color: lime; padding: 15px'>\r\n                      <p>To restore your password, follow the link below</p>\r\n                      <a href='https://georgeusynin.github.io/cards-react-redux/#/new_password/$token$'>Restore link</a>\r\n                      </div>`\r\n        })\r\n    },\r\n    setNewPassword(password: string, resetPasswordToken: string) {\r\n        return axiosInstance.post<ResponseType>('/auth/set-new-password', {\r\n            password,\r\n            resetPasswordToken\r\n        })\r\n    }\r\n}","//types\r\n\r\nimport {AppThunkType} from \"./store\";\r\nimport {authApi} from \"../m3-dal/api\";\r\n\r\ntype InitialStateType = {\r\n    showEmailCheck: boolean\r\n    error: string | null\r\n    isNewPasswordCreated: boolean\r\n}\r\n\r\nexport type RestorePasswordActionsType =\r\n\r\n    | ReturnType<typeof setShowEmailCheck>\r\n    | ReturnType<typeof setError>\r\n    | ReturnType<typeof setIsNewPasswordCreated>\r\n\r\n//actions\r\n\r\nconst setShowEmailCheck = (showEmailCheck: boolean) => {\r\n    return {\r\n        type: 'cards/restorePassword/setShowEmailCheck',\r\n        payload: {\r\n            showEmailCheck\r\n        }\r\n    } as const\r\n}\r\n\r\nconst setError = (error: string | null) => {\r\n    return {\r\n        type: 'cards/restorePassword/setError',\r\n        payload: {\r\n            error\r\n        }\r\n    } as const\r\n}\r\nconst setIsNewPasswordCreated = (isNewPasswordCreated: boolean) => {\r\n    return {\r\n        type: 'cards/restorePassword/setIsNewPasswordCreated',\r\n        payload: {\r\n            isNewPasswordCreated\r\n        }\r\n    } as const\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    showEmailCheck: false,\r\n    error: null,\r\n    isNewPasswordCreated: false\r\n}\r\n\r\nexport const restorePasswordReducer = (state: InitialStateType = initialState, action: RestorePasswordActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"cards/restorePassword/setShowEmailCheck\":\r\n        case \"cards/restorePassword/setError\":\r\n        case \"cards/restorePassword/setIsNewPasswordCreated\":\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\n//thunk\r\n\r\nexport const restorePassword = (email: string): AppThunkType => (dispatch) => {\r\n    authApi.restorePassword(email)\r\n        .then(res => {\r\n            res.data.error\r\n                ?\r\n                setError(res.data.error)\r\n                :\r\n                setShowEmailCheck(true)\r\n        })\r\n}\r\n\r\nexport const setNewPassword = (password: string, resetPasswordToken: string): AppThunkType => (dispatch) => {\r\n    authApi.setNewPassword(password, resetPasswordToken)\r\n        .then(res => {\r\n            res.data.info\r\n                ?\r\n                setIsNewPasswordCreated(true)\r\n                :\r\n                setError(res.data.error)\r\n        })\r\n}","import React, {useState} from 'react'\r\nimport cls from './RestorePassword.module.css'\r\nimport SuperInputText from \"../common/SuperInput/SuperInputText\";\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../m2-bll/store\";\r\nimport {CheckPassword} from \"../CheckPassword/CheckPassword\";\r\nimport {restorePassword} from \"../../m2-bll/restorePasswordReducer\";\r\n\r\n\r\nexport const RestorePassword = () => {\r\n\r\n    const showEmailCheck = useSelector<AppRootStateType, boolean>(state => state.restorePassword.showEmailCheck)\r\n\r\n    const error = useSelector<AppRootStateType, null | string>(state => state.restorePassword.error)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [email, setEmail] = useState('')\r\n\r\n    const onChangeEmail = (email: string) => {\r\n        setEmail(email)\r\n    }\r\n\r\n    const onClickSend = () => {\r\n        dispatch(restorePassword(email))\r\n    }\r\n\r\n    return (\r\n        <div className={cls.restorePasswordContainer}>\r\n            {\r\n                showEmailCheck\r\n                    ?\r\n                    <CheckPassword email={email}/>\r\n                    :\r\n                    <div>\r\n\r\n                        <h2>It-incubator</h2>\r\n\r\n                        <h3>Forgot your password?</h3>\r\n\r\n                        <SuperInputText value={email} onChangeText={onChangeEmail}/>\r\n\r\n                        <p>{error}</p>\r\n\r\n                        <p>Enter your email address and we will send you further instructions</p>\r\n\r\n                        <SuperButton onClick={onClickSend}>Send instructions</SuperButton>\r\n\r\n                        <p>Did you remember your password?</p>\r\n\r\n                        <NavLink to={'/login'}>Try logging in</NavLink>\r\n\r\n                    </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react'\r\nimport {Redirect, useParams} from 'react-router-dom'\r\nimport cls from './NewPassword.module.css'\r\nimport SuperInputText from \"../common/SuperInput/SuperInputText\";\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../m2-bll/store\";\r\nimport {setNewPassword} from \"../../m2-bll/restorePasswordReducer\";\r\n\r\n\r\nexport const NewPassword = () => {\r\n\r\n    const isNewPasswordCreated = useSelector<AppRootStateType, boolean>(state => state.restorePassword.isNewPasswordCreated)\r\n\r\n    const error = useSelector<AppRootStateType, null | string>(state => state.restorePassword.error)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const {token} = useParams<{ token?: string }>();\r\n\r\n    const [password, setPassword] = useState('')\r\n\r\n    const onChangePassword = (password: string) => {\r\n        setPassword(password)\r\n    }\r\n\r\n    const onClickSend = () => {\r\n        if (token)\r\n            dispatch(setNewPassword(password, token))\r\n    }\r\n\r\n    if (isNewPasswordCreated) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={cls.newPasswordContainer}>\r\n\r\n            <h2>It-incubator</h2>\r\n\r\n            <h3>Create new Password</h3>\r\n\r\n            <SuperInputText value={password} onChangeText={onChangePassword}/>\r\n\r\n            <p>{error}</p>\r\n\r\n            <p>Create new password and we will send you further instructions to email</p>\r\n\r\n            <SuperButton onClick={onClickSend}>Send instructions</SuperButton>\r\n\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React from \"react\";\r\nimport cls from './TestComponents.module.css'\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport SuperInputText from \"../common/SuperInput/SuperInputText\";\r\nimport SuperCheckbox from \"../common/SuperCheckbox/SuperCheckbox\";\r\n\r\nexport const TestComponents = () => {\r\n    return (\r\n        <div className={cls.testComponentsContainer}>\r\n            <h1>Common components</h1>\r\n            <div className={cls.componentsContainer}>\r\n                <div>\r\n                    <h2>Button</h2>\r\n                    <SuperButton>\r\n                        Button\r\n                    </SuperButton>\r\n                </div>\r\n                <div>\r\n                    <h2>Input Text</h2>\r\n                    <SuperInputText/>\r\n                </div>\r\n                <div>\r\n                    <h2>CheckBox</h2>\r\n                    <SuperCheckbox/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport {Route} from 'react-router-dom';\nimport './App.css';\nimport {Header} from './Header/Header';\nimport {Login} from \"./Login/Login\";\nimport {Registration} from \"./Registration/Registration\";\nimport {Profile} from \"./Profile/Profile\";\nimport {PageNotFound} from \"./PageNotFound/PageNotFound\";\nimport {RestorePassword} from \"./RestorePassword/RestorePassword\";\nimport {NewPassword} from \"./NewPassword/NewPassword\";\nimport {TestComponents} from \"./TestComponents/TestComponents\";\n\nconst App = () => {\n    return (\n        <div className='app-wrapper'>\n            <Header/>\n            <div className='app-wrapper-content'>\n                <Route path={'/login'} render={() => <Login/>}/>\n                <Route path={'/registration'} render={() => <Registration/>}/>\n                <Route path={'/profile'} render={() => <Profile/>}/>\n                <Route path={'/404'} render={() => <PageNotFound/>}/>\n                <Route path={'/restore_password'} render={() => <RestorePassword/>}/>\n                <Route path={'/new_password:token'} render={() => <NewPassword/>}/>\n                <Route path={'/test_components'} render={() => <TestComponents/>}/>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware} from \"redux\";\r\nimport {combineReducers, createStore} from \"redux\";\r\nimport thunk, {ThunkAction} from \"redux-thunk\";\r\nimport {authReducer} from \"./authReducer\";\r\nimport {profileReducer} from \"./profileReducer\";\r\nimport {RestorePasswordActionsType, restorePasswordReducer} from \"./restorePasswordReducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    profile: profileReducer,\r\n    restorePassword: restorePasswordReducer\r\n})\r\n\r\nexport type AppActionsType = RestorePasswordActionsType\r\n\r\nexport type AppThunkType<ReturnType = void> = ThunkAction<ReturnType, AppRootStateType, unknown, AppActionsType>\r\n\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n//@ts-ignore\r\nwindow.store = store","type InitialStateType = {}\r\n\r\ntype ActionsType = { type: 'type' }\r\n\r\nexport const authReducer = (state: InitialStateType = {}, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        default:\r\n            return {...state}\r\n    }\r\n}","type InitialStateType = {}\r\n\r\ntype ActionsType = { type: 'type' }\r\n\r\n\r\nexport const profileReducer = (state: InitialStateType = {}, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        default:\r\n            return {...state}\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './n1-main/m1-ui/App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {store} from \"./n1-main/m2-bll/store\";\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}