{"version":3,"sources":["n1-main/m1-ui/common/SuperInput/SuperInputText.module.css","n1-main/m1-ui/TestComponents/TestComponents.module.css","n1-main/m1-ui/common/SuperButton/SuperButton.module.css","n1-main/m1-ui/common/SuperCheckbox/SuperCheckbox.module.css","n1-main/m1-ui/Header/Header.module.css","n1-main/m1-ui/Header/Header.tsx","n1-main/m1-ui/Login/Login.tsx","n1-main/m1-ui/Registration/Registration.tsx","n1-main/m1-ui/Profile/Profile.tsx","n1-main/m1-ui/PageNotFound/PageNotFound.tsx","n1-main/m1-ui/RestorePassword/RestorePassword.tsx","n1-main/m1-ui/NewPassword/NewPassword.tsx","n1-main/m1-ui/common/SuperButton/SuperButton.tsx","n1-main/m1-ui/common/SuperInput/SuperInputText.tsx","n1-main/m1-ui/common/SuperCheckbox/SuperCheckbox.tsx","n1-main/m1-ui/TestComponents/TestComponents.tsx","n1-main/m1-ui/App.tsx","reportWebVitals.ts","n1-main/m2-bll/store.ts","n1-main/m2-bll/authReducer.ts","n1-main/m2-bll/profileReducer.ts","index.tsx"],"names":["module","exports","Header","className","cls","header","to","Login","loginContainer","Registration","registrationContainer","Profile","profileContainer","PageNotFound","pageNotFoundContainer","RestorePassword","restorePasswordContainer","NewPassword","newPasswordContainer","SuperButton","red","restProps","finalClassName","s","default","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","finalSpanClassName","finalInputClassName","errorInput","superInput","e","currentTarget","value","key","SuperCheckbox","onChangeChecked","children","checkbox","checked","TestComponents","testComponentsContainer","componentsContainer","App","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","auth","state","action","profile","store","createStore","applyMiddleware","thunk","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.941c2338.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__1sgJx\",\"errorInput\":\"SuperInputText_errorInput__1fsHs\",\"error\":\"SuperInputText_error__3Fj_f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"testComponentsContainer\":\"TestComponents_testComponentsContainer__2wS-y\",\"componentsContainer\":\"TestComponents_componentsContainer__2k6T_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1_AZ_\",\"red\":\"SuperButton_red__nhTxO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__23c9k\",\"spanClassName\":\"SuperCheckbox_spanClassName__2lpfo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__13sX6\"};","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport cls from './Header.module.css'\r\n\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div className={cls.header}>\r\n            <NavLink to={'/login'}>Login</NavLink>\r\n            <NavLink to={'/registration'}>Registration</NavLink>\r\n            <NavLink to={'/profile'}>Profile</NavLink>\r\n            <NavLink to={'/404'}>404</NavLink>\r\n            <NavLink to={'/restore_password'}>Restore password</NavLink>\r\n            <NavLink to={'/new_password'}>New password</NavLink>\r\n            <NavLink to={'/test_components'}>Test components</NavLink>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport cls from './Login.module.css'\r\n\r\n\r\nexport const Login = () => {\r\n    return (\r\n        <div className={cls.loginContainer}>\r\n            <h1>Login</h1>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport cls from './Registration.module.css'\r\n\r\n\r\nexport const Registration = () => {\r\n    return (\r\n        <div className={cls.registrationContainer}>\r\n            <h1>Registration</h1>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport cls from './Profile.module.css'\r\n\r\n\r\nexport const Profile = () => {\r\n    return (\r\n        <div className={cls.profileContainer}>\r\n            <h1>Profile</h1>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport cls from './PageNotFound.module.css'\r\n\r\n\r\nexport const PageNotFound = () => {\r\n    return (\r\n        <div className={cls.pageNotFoundContainer}>\r\n            <h1>PageNotFound</h1>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport cls from './RestorePassword.module.css'\r\n\r\n\r\nexport const RestorePassword = () => {\r\n    return (\r\n        <div className={cls.restorePasswordContainer}>\r\n            <h1>Restore Password</h1>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport cls from './NewPassword.module.css'\r\n\r\n\r\nexport const NewPassword = () => {\r\n    return (\r\n        <div className={cls.newPasswordContainer}>\r\n            <h1>New Password</h1>\r\n        </div>\r\n    )\r\n}","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red,\r\n        className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React from \"react\";\r\nimport cls from './TestComponents.module.css'\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport SuperInputText from \"../common/SuperInput/SuperInputText\";\r\nimport SuperCheckbox from \"../common/SuperCheckbox/SuperCheckbox\";\r\n\r\nexport const TestComponents = () => {\r\n    return (\r\n        <div className={cls.testComponentsContainer}>\r\n            <h1>Common components</h1>\r\n            <div className={cls.componentsContainer}>\r\n                <div>\r\n                    <h2>Button</h2>\r\n                    <SuperButton>\r\n                        Button\r\n                    </SuperButton>\r\n                </div>\r\n                <div>\r\n                    <h2>Input Text</h2>\r\n                    <SuperInputText/>\r\n                </div>\r\n                <div>\r\n                    <h2>CheckBox</h2>\r\n                    <SuperCheckbox/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {Route} from 'react-router-dom';\r\nimport './App.css';\r\nimport {Header} from './Header/Header';\r\nimport {Login} from \"./Login/Login\";\r\nimport {Registration} from \"./Registration/Registration\";\r\nimport {Profile} from \"./Profile/Profile\";\r\nimport {PageNotFound} from \"./PageNotFound/PageNotFound\";\r\nimport {RestorePassword} from \"./RestorePassword/RestorePassword\";\r\nimport {NewPassword} from \"./NewPassword/NewPassword\";\r\nimport {TestComponents} from \"./TestComponents/TestComponents\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className='app-wrapper'>\r\n\r\n            <Header/>\r\n            <div className='app-wrapper-content'>\r\n                <Route path={'/login'} render={() => <Login/>}/>\r\n                <Route path={'/registration'} render={() => <Registration/>}/>\r\n                <Route path={'/profile'} render={() => <Profile/>}/>\r\n                <Route path={'/404'} render={() => <PageNotFound/>}/>\r\n                <Route path={'/restore_password'} render={() => <RestorePassword/>}/>\r\n                <Route path={'/new_password'} render={() => <NewPassword/>}/>\r\n                <Route path={'/test_components'} render={() => <TestComponents/>}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {applyMiddleware} from \"redux\";\r\nimport {combineReducers, createStore} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {authReducer} from \"./authReducer\";\r\nimport {profileReducer} from \"./profileReducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    profile: profileReducer\r\n})\r\n\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\n//@ts-ignore\r\nwindow.store = store","type InitialStateType = {}\r\n\r\ntype ActionsType = { type: 'type' }\r\n\r\nexport const authReducer = (state: InitialStateType = {}, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        default:\r\n            return {...state}\r\n    }\r\n}","type InitialStateType = {}\r\n\r\ntype ActionsType = { type: 'type' }\r\n\r\n\r\nexport const profileReducer = (state: InitialStateType = {}, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        default:\r\n            return {...state}\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './n1-main/m1-ui/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {HashRouter} from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {store} from \"./n1-main/m2-bll/store\";\r\n\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </HashRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}