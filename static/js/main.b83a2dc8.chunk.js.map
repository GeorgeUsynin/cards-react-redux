{"version":3,"sources":["reportWebVitals.ts","n1-main/m3-dal/apiLogin.ts","n1-main/m3-dal/apiProfile.ts","n1-main/m2-bll/profileReducer.ts","n1-main/m3-dal/apiRegister.ts","n1-main/m2-bll/registerReducer.ts","n1-main/m2-bll/authReducer.ts","n1-main/m3-dal/apiRestore.ts","n1-main/m2-bll/restorePasswordReducer.ts","n1-main/m3-dal/apiPacks.ts","n1-main/m2-bll/packsReducer.ts","n1-main/m2-bll/store.ts","n1-main/m1-ui/Header/Header.tsx","n1-main/m1-ui/common/SuperInput/SuperInputText.tsx","n1-main/m1-ui/common/SuperButton/SuperButton.tsx","assets/images/eye.svg","assets/images/closedEye.svg","n1-main/m1-ui/common/preloader/Preloader.tsx","n1-main/m1-ui/Login/Login.tsx","assets/images/avatar.png","n1-main/m1-ui/Profile/UserInfo/UserInfo.tsx","n1-main/m1-ui/Profile/UserInfoCards/UserInfoCards.tsx","n1-main/m1-ui/Profile/Profile.tsx","n1-main/m1-ui/PageNotFound/PageNotFound.tsx","assets/images/letter.svg","n1-main/m1-ui/CheckPassword/CheckPassword.tsx","n1-main/m1-ui/RestorePassword/RestorePassword.tsx","n1-main/m1-ui/NewPassword/NewPassword.tsx","n1-main/m1-ui/common/SuperCheckbox/SuperCheckbox.tsx","n1-main/m1-ui/TestComponents/TestComponents.tsx","n1-main/m1-ui/Profile/PersonalInfo/PersonalInfo.tsx","n1-main/m1-ui/Registration/Register.tsx","n1-main/m1-ui/HeaderMain/HeaderMain.tsx","assets/images/DownSort.svg","assets/images/UpSort.svg","n1-main/m1-ui/PacksList/TablePacks/TableHeader/TableHeader.tsx","n1-main/m1-ui/PacksList/TablePacks/TableData/TableData.tsx","n1-main/m1-ui/PacksList/TablePacks/TablePacks.tsx","n1-main/m1-ui/common/Search/Search.tsx","n1-main/m1-ui/common/SuperDoubleRange/SuperDoubleRange.tsx","n1-main/m1-ui/PacksList/DoubleRange/DoubleRange.tsx","n1-main/m1-ui/common/SuperSelect/SuperSelect.tsx","n1-main/m1-ui/common/Paginator/Paginator.tsx","n1-main/m1-ui/PacksList/PacksList.tsx","n1-main/App.tsx","index.tsx","n1-main/m1-ui/PacksList/PacksList.module.scss","n1-main/m1-ui/Login/Login.module.scss","n1-main/m1-ui/Registration/Register.module.scss","n1-main/m1-ui/Profile/PersonalInfo/PersonalInfo.module.scss","n1-main/m1-ui/RestorePassword/RestorePassword.module.scss","n1-main/m1-ui/HeaderMain/HeaderMain.module.scss","n1-main/m1-ui/NewPassword/NewPassword.module.scss","n1-main/m1-ui/common/Paginator/Paginator.module.scss","n1-main/m1-ui/CheckPassword/CheckPassword.module.scss","n1-main/m1-ui/Profile/UserInfo/UserInfo.module.scss","n1-main/m1-ui/PacksList/TablePacks/TableData/TableData.module.scss","n1-main/m1-ui/common/SuperInput/SuperInputText.module.scss","n1-main/m1-ui/Profile/Profile.module.scss","n1-main/m1-ui/common/SuperButton/SuperButton.module.css","n1-main/m1-ui/Profile/UserInfoCards/UserInfoCards.module.scss","n1-main/m1-ui/TestComponents/TestComponents.module.css","n1-main/m1-ui/common/SuperCheckbox/SuperCheckbox.module.css","n1-main/m1-ui/PacksList/TablePacks/TablePacks.module.scss","n1-main/m1-ui/Header/Header.module.scss","n1-main/m1-ui/common/preloader/Preloader.module.scss","n1-main/m1-ui/PacksList/TablePacks/TableHeader/TableHeader.module.scss","n1-main/m1-ui/PacksList/DoubleRange/DoubleRange.module.scss"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","create","baseURL","withCredentials","authAPI","data","post","delete","axiosInstance","profileApi","name","avatar","put","initialState","informationAboutUser","_id","email","publicCardPacksCount","created","Date","updated","isAdmin","verified","rememberMe","error","setInformationAboutUserAC","type","ApiRegister","password","REGISTER_LOADING","REGISTER_ERROR","REGISTER_SUCCESS","registerInitialState","isRegistered","isFetching","setRegisterError","setRegisterLoading","isLoggedIn","setIsLoggedInAC","value","setLoginError","setLoginLoading","isLoggedInApp","dispatch","res","catch","e","response","messages","finally","authApi","message","resetPasswordToken","setShowEmailCheck","showEmailCheck","payload","setRestorePasswordError","setRestorePasswordLoading","isNewPasswordCreated","packsApi","packName","min","max","sortPacks","page","pageCount","user_id","get","params","isPrivate","cardsPack","packId","cardPacks","cardPacksRequestParameters","maxCardsCount","minCardsCount","cardPacksTotalCount","setUpdatedDirection","direction","setLoadingPacks","setUserId","userId","getDataPacks","getState","a","packs","dataPacks","console","log","rootReducer","combineReducers","auth","state","action","profile","updatedUser","restorePassword","register","requestedName","requestedPage","count","range","store","createStore","applyMiddleware","thunk","window","Header","className","cls","header","to","replace","SuperInputText","onChange","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","errorInput","superInput","currentTarget","key","map","err","SuperButton","red","finalClassName","default","Preloader","loader","Login","useDispatch","useSelector","useState","setType","formik","useFormik","initialValues","validate","values","errors","test","length","onSubmit","PATH","PROFILE","loginContainer","card","title","subtitle","handleSubmit","titleEmail","inputContainer","getFieldProps","inputEmailPassword","onClick","touched","style","color","match","titlePassword","eye","src","closedEye","alt","checkbox","buttonContainer","button","newAccount","signUp","UserInfo","infoUser","userPhoto","defaultAvatar","userName","editProfileWrapper","UserInfoCards","infoUserCards","userCards","Profile","id","useEffect","LOGIN","profileContainer","info","PageNotFound","pageNotFoundContainer","CheckPassword","checkPasswordContainer","imgContainer","letter","firstNote","secondNote","RestorePassword","restorePasswordContainer","inputEmail","placeholder","reLogin","NewPassword","token","useParams","newPasswordContainer","inputPassword","margin","note","SuperCheckbox","onChangeChecked","children","checked","TestComponents","testComponentsContainer","componentsContainer","PersonalInfo","ava","setAva","nickname","setNickname","infoContainer","imgWrapper","inputNicknameAvatar","cancelButton","registerButton","editUserProfileTC","Register","confirmPassword","history","useHistory","changeTypeHandler","registrationContainer","push","HeaderMain","active","finalClass","setFinalClass","location","useLocation","headerContainer","wrapper","logo","linksContainer","linkContainer","PACKS_LIST","pathname","onMouseEnter","onMouseOut","tabIndex","logoutBtn","TableHeader","updatedDirection","arrow","setArrow","tableHeader","downArrow","upArrow","TableData","cardsCount","updatedDate","updatedTime","createdDate","createdTime","removePack","appUserId","tableData","buttonsContainer","deleteButton","disabled","TablePacks","packsData","isFetchingPacks","tableContainer","pack","slice","Search","request","setRequest","blur","Slider","require","Range","createSliderWithTooltip","SuperDoubleRange","onChangeRange","onAfterChange","step","included","handleStyle","trackStyle","railStyle","dotStyle","activeDotStyle","DoubleRange","setMin","setMax","borderColor","backgroundColor","width","styles","rangeContainer","SuperSelect","options","onChangeOption","mappedOptions","o","i","Paginator","paginatorPage","Math","ceil","marginPagesDisplayed","pageRangeDisplayed","previousLabel","previousClassName","prev","nextLabel","nextClassName","next","activeClassName","selectedPage","onPageChange","onPageChanges","selected","containerClassName","container","pageClassName","sortContainer","superSelect","setPageCount","PacksList","currentUserId","minCards","maxCards","activeClass","setActiveClass","buttonName","setButtonName","addPack","useCallback","newPackName","prompt","deletePack","getMyPacksList","getAllPacksList","packlistContainer","ownerTitle","myButton","allButton","numberTitle","packslist","packslistTitle","search_AddButtonContainer","search","addButtonContainer","addPackButton","USER_INFO","REGISTRATION","TEST_COMPONENTS","PAGE_NOT_FOUND","RESTORE_PASSWORD","NEW_PASSWORD","App","exact","path","render","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"oKAceA,G,MAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,sDCNRQ,EAAWC,IAAMC,OAAO,CAE1BC,QAAS,sCACTC,iBAAiB,IAGRC,EAAU,SACbC,GACF,OAAON,EAASO,KAAwB,aAAcD,IAFjDD,EAAU,WAKf,OAAOL,EAASQ,OAA4B,YALvCH,EAAU,WAQf,OAAOL,EAASO,KAAwB,UAAU,KCbpDE,EAAgBR,IAAMC,OAAO,CAC/BC,QAAS,uCAETC,iBAAiB,IAKRM,EAAa,SACHC,EAAcC,GAC7B,OAAOH,EAAcI,IAAsC,WAAY,CACnEF,OACAC,YCPNE,EAAiC,CACnCC,qBAAsB,CAClBC,IAAK,GACLC,MAAO,GACPN,KAAM,GACNO,qBAAsB,EACtBC,QAASC,KACTC,QAASD,KACTE,SAAS,EACTC,UAAU,EACVC,YAAY,EACZZ,OAAQ,GACRa,MAAO,KA6BFC,EAA4B,SAACpB,GAAD,MACpC,CAACqB,KAAM,qCAAsCrB,S,yBC5C5CN,EAAWC,IAAMC,OAAO,CAE5BC,QAAS,sCACTC,iBAAiB,IAINwB,EAAc,SAChBX,EAAeY,GACtB,OAAO7B,EAASO,KAAT,gBAA8C,CAACU,QAAOY,cCbpDC,EAAmB,mBACnBC,EAAiB,iBACjBC,EAAmB,mBAQnBC,EAAyC,CACpDC,cAAc,EACdT,MAAO,KACPU,YAAY,GAeDC,EAAmB,SAACX,GAC/B,MAAO,CACLE,KAAMI,EACNN,UAISY,EAAqB,SAACF,GACjC,MAAO,CACLR,KAAMG,EACNK,eC9BErB,EAAiC,CACnCqB,YAAY,EACZG,YAAY,EACZb,MAAO,MAIEc,EAAkB,SAACC,GAAD,MAC1B,CAACb,KAAM,yBAA0Ba,UAKzBC,EAAgB,SAAChB,GAC1B,MAAO,CACHE,KAAMI,EACNN,UAIKiB,EAAkB,SAACP,GAC5B,MAAO,CACHR,KAAMG,EACNK,eAuDKQ,EAAgB,kBAAoB,SAACC,GAC9CA,EAASF,GAAgB,IACzBrC,IACKX,MAAK,SAAAmD,GACFD,EAASlB,EAA0BmB,EAAIvC,OACvCsC,EAASL,GAAgB,OAE5BO,OAAM,SAACC,GACJ,IAAMtB,EAAQsB,EAAEC,SACVD,EAAEC,SAAS1C,KAAKmB,MACfsB,EAAEE,SAAW,gCACpBL,EAASH,EAAchB,OAE1ByB,SAAQ,WACLN,EAASF,GAAgB,SCpG/BjC,EAAgBR,IAAMC,OAAO,CAC/BC,QAAS,uCAETC,iBAAiB,IAYR+C,EAAU,SACHlC,GACZ,OAAOR,EAAcF,KAA0B,eAAgB,CAC3DU,QACAmC,QAAQ,2BAAD,OANG,oDAMH,8PAJND,EAAU,SAUJtB,EAAkBwB,GAC7B,OAAO5C,EAAcF,KAA0B,yBAA0B,CACrEsB,WACAwB,wBCVCC,EAAoB,SAACC,GAC9B,MAAO,CACH5B,KAAM,0CACN6B,QAAS,CACLD,oBAKCE,EAA0B,SAAChC,GACpC,MAAO,CACHE,KAAM,iCACN6B,QAAS,CACL/B,WAaCiC,EAA4B,SAACvB,GACtC,MAAO,CACHR,KAAM,kDACN6B,QAAS,CACLrB,gBAKNrB,EAAiC,CACnCyC,gBAAgB,EAChB9B,MAAO,KACPkC,sBAAsB,EACtBxB,YAAY,GC5CV1B,EAAgBR,IAAMC,OAAO,CAC/BC,QAAS,uCAETC,iBAAiB,IAGRwD,EAAW,SACXC,EAAmBC,EAAcC,EAAcC,EAAoBC,EAAeC,EAAoBC,GAC3G,OAAO1D,EAAc2D,IAAuB,cAAe,CACvDC,OAAQ,CACJR,WACAC,MACAC,MACAC,YACAC,OACAC,YACAC,aAELzE,MAAK,SAAAmD,GAAG,OAAIA,EAAIvC,SAZdsD,EAAW,SAcNjD,GAA2C,IAA7B2D,EAA4B,wDACpD,OAAO7D,EAAcF,KAAmB,aAAc,CAClDgE,UAAW,CACP5D,OACA2D,gBAlBHV,EAAW,SAsBTY,GACP,OAAO/D,EAAcD,OAAd,wBAAoDgE,KCf7D1D,EAAiC,CACnC2D,UAAW,GACXC,2BAA4B,CACxBT,KAAM,EACNC,UAAW,EACXS,cAAe,EACfC,cAAe,EACfZ,UAAW,WACXH,SAAU,GACVM,QAAS,IAEbU,oBAAqB,EACrB1C,YAAY,GAWH2C,EAAsB,SAACC,GAAD,MAC9B,CAACpD,KAAM,8BAA+BoD,cAKrCC,EAAkB,SAAC7C,GAAD,MACnB,CAACR,KAAM,0BAA2BQ,eAE1B8C,EAAY,SAACC,GAAD,MACpB,CAACvD,KAAM,oBAAqBuD,WAqDpBC,GAAe,yDAAoB,WAAOvC,EAAUwC,GAAjB,+BAAAC,EAAA,wEAWpCD,IAAWE,MAAMZ,2BAPjBb,EAJoC,EAIpCA,SACAe,EALoC,EAKpCA,cACAD,EANoC,EAMpCA,cACAX,EAPoC,EAOpCA,UACAC,EARoC,EAQpCA,KACAC,EAToC,EASpCA,UACAC,EAVoC,EAUpCA,QAEJvB,EAASoC,GAAgB,IAZe,SAapBpB,EAAkBC,EAAUe,EAAeD,EAAeX,EAAWC,EAAMC,EAAWC,GAblE,OAalCmB,EAbkC,OAcxC1C,EAzEH,CAACjB,KAAM,kBAAmB4D,UAyEDD,IAdkB,gDAgBxCE,QAAQC,IAAR,MAhBwC,yBAkBxC7C,EAASoC,GAAgB,IAlBe,4EAApB,yDC1GtBU,GAAcC,YAAgB,CAChCC,KL6BuB,WAAwF,IAAvFC,EAAsF,uDAA5D/E,EAAcgF,EAA8C,uCAC9G,OAAQA,EAAOnE,MACX,IAAK,yBACL,IAAK,2BACD,OAAO,2BAAIkE,GAAX,IAAkBvD,WAAYwD,EAAOtD,QACzC,IAAK,iBACD,OAAO,2BAAIqD,GAAX,IAAkBpE,MAAOqE,EAAOrE,QACpC,IAAK,mBACD,OAAO,2BAAIoE,GAAX,IAAkB1D,WAAY2D,EAAO3D,aACzC,QACI,OAAO0D,IKtCfE,QR2B0B,WAA2F,IAA1FF,EAAyF,uDAA/D/E,EAAcgF,EAAiD,uCACpH,OAAQA,EAAOnE,MACX,IAAK,qCACD,OAAO,2BAAIkE,GAAX,IAAkB9E,qBAAsB+E,EAAOxF,OACnD,IAAK,2BACD,OAAO,2BAAIuF,GAAX,IAAkB9E,qBAAsB+E,EAAOE,cACnD,QACI,OAAOH,IQjCfI,gBHkDkC,WAAmG,IAAlGJ,EAAiG,uDAAvE/E,EAAcgF,EAAyD,uCACpI,OAAQA,EAAOnE,MACX,IAAK,0CACL,IAAK,iCACL,IAAK,gDACL,IAAK,kDACD,OAAO,2BACAkE,GACAC,EAAOtC,SAElB,QACI,OAAO,eAAIqC,KG5DnBK,SN+B2B,WAA8E,IAA7EL,EAA4E,uDAApE5D,EAAsB6D,EAA8C,uCAC1G,OAAQA,EAAOnE,MACb,KAAKK,EACH,OAAO,2BACF6D,GADL,IAEE3D,aAAc4D,EAAO5D,eAGzB,KAAKH,EACH,OAAO,2BACF8D,GADL,IAEEpE,MAAOqE,EAAOrE,QAGlB,KAAKK,EACH,OAAO,2BACF+D,GADL,IAEE1D,WAAY2D,EAAO3D,aAGvB,QACE,OAAO0D,IMnDTP,MDyDwB,WAAwF,IAAvFO,EAAsF,uDAA5D/E,EAAcgF,EAA8C,uCAC/G,OAAQA,EAAOnE,MACX,IAAK,kBACD,OAAO,2BAAIkE,GAAUC,EAAOP,WAChC,IAAK,oBACD,OAAO,2BAAIM,GAAX,IAAkBnB,2BAA2B,2BAAKmB,EAAMnB,4BAAZ,IAAwCP,QAAS2B,EAAOZ,WACxG,IAAK,wBACD,OAAO,2BACAW,GADP,IAEInB,2BAA2B,2BAAKmB,EAAMnB,4BAAZ,IAAwCb,SAAUiC,EAAOK,kBAE3F,IAAK,yBACD,OAAO,2BACAN,GADP,IAEInB,2BAA2B,2BAAKmB,EAAMnB,4BAAZ,IAAwCT,KAAM6B,EAAOM,kBAEvF,IAAK,8BACD,OAAO,2BACAP,GADP,IAEInB,2BAA2B,2BAAKmB,EAAMnB,4BAAZ,IAAwCV,UAAW8B,EAAOf,cAE5F,IAAK,uBACD,OAAO,2BACAc,GADP,IAEInB,2BAA2B,2BAAKmB,EAAMnB,4BAAZ,IAAwCR,UAAW4B,EAAOO,UAE5F,IAAK,uBACD,OAAO,2BACAR,GADP,IAEInB,2BAA2B,2BACpBmB,EAAMnB,4BADa,IAEtBE,cAAekB,EAAOQ,MAAM,GAC5B3B,cAAemB,EAAOQ,MAAM,OAGxC,IAAK,0BACD,OAAO,2BAAIT,GAAX,IAAkB1D,WAAY2D,EAAO3D,aACzC,QACI,OAAO0D,MCvFNU,GAAQC,YAAYd,GAAae,YAAgBC,MAM9DC,OAAOJ,MAAQA,G,iDCxBFK,GAAS,WAClB,OACI,uBAAKC,UAAWC,KAAIC,OAApB,UACI,eAAC,IAAD,CAASC,GAAI,SAAb,mBACA,eAAC,IAAD,CAASA,GAAI,gBAAb,0BACA,eAAC,IAAD,CAASC,SAAO,EAACD,GAAI,WAArB,qBACA,eAAC,IAAD,CAASA,GAAI,OAAb,iBACA,eAAC,IAAD,CAASA,GAAI,oBAAb,8BACA,eAAC,IAAD,CAASA,GAAI,gBAAb,0BACA,eAAC,IAAD,CAASA,GAAI,mBAAb,iC,2JC6CGE,GA3C2C,SAAC,GAUrD,IAREvF,EAQH,EARGA,KACAwF,EAOH,EAPGA,SAAUC,EAOb,EAPaA,aACVC,EAMH,EANGA,WAAYC,EAMf,EANeA,QACZ7F,EAKH,EALGA,MACAoF,EAIH,EAJGA,UAAWU,EAId,EAJcA,cAERC,EAEN,mBAaKC,EAAkB,UAAMC,KAAEjG,MAAR,YAAiB8F,GAAgC,IACnEI,EAAmB,UAAMlG,EAAQiG,KAAEE,WAAaF,KAAEG,WAA/B,YAA6ChB,GAGtE,OACI,uCACI,oCACIlF,KAAMA,EACNwF,SApBa,SAACpE,GACtBoE,GACGA,EAASpE,GACZqE,GAAgBA,EAAarE,EAAE+E,cAActF,QAkBrC6E,WAhBe,SAACtE,GACxBsE,GAAcA,EAAWtE,GACzBuE,GACa,UAAVvE,EAAEgF,KACFT,EAAQvE,IAaH8D,UAAWc,GACPH,IAEP/F,GAASA,EAAMuG,KAAI,SAAAC,GAChB,OAAO,sBAAKpB,UAAWY,EAAhB,SAAqCQ,W,oBC1B7CC,GAjBqC,SAAC,GAM/C,IAJEC,EAIH,EAJGA,IACAtB,EAGH,EAHGA,UACGW,EAEN,oCACKY,EAAc,UAAMD,EAAMT,KAAES,IAAMT,KAAEW,QAAtB,YAAiCxB,GAErD,OACI,qCACIA,UAAWuB,GACPZ,KCtBD,OAA0B,gCCA1B,OAA0B,sC,6BCG5Bc,GAAY,WACrB,OACI,sBAAKzB,UAAWC,KAAIyB,UCgBfC,GAAQ,WAEjB,IAAM5F,EAAW6F,cAEXhH,EAAQiH,aAA6C,SAAA7C,GAAK,OAAIA,EAAMD,KAAKnE,SAEzEa,EAAaoG,aAAuC,SAAA7C,GAAK,OAAIA,EAAMD,KAAKtD,cAExEH,EAAauG,aAAuC,SAAA7C,GAAK,OAAIA,EAAMD,KAAKzD,cAE9E,EAAwBwG,mBAAwB,YAAhD,oBAAOhH,EAAP,KAAaiH,EAAb,KAGMC,EAASC,aAAU,CACrBC,cAAe,CACX9H,MAAO,GACPY,SAAU,GACVL,YAAY,GAEhBwH,SAAU,SAACC,GACP,IAAMC,EAA0B,GAahC,OAZKD,EAAOhI,MAEA,4CAA4CkI,KAAKF,EAAOhI,SAChEiI,EAAOjI,MAAQ,yBAFfiI,EAAOjI,MAAQ,WAIdgI,EAAOpH,UAEDoH,EAAOpH,SAASuH,OAAS,GAEzBH,EAAOpH,SAASuH,OAAS,MADhCF,EAAOrH,SAAW,iDAFlBqH,EAAOrH,SAAW,WAMfqH,GAEXG,SAAU,SAAAJ,GZDK,IAAC3I,EYEZsC,GZFYtC,EYEK2I,EZFmC,SAACrG,GAC7DA,EAASF,GAAgB,IACzBrC,EAAcC,GACTZ,MAAK,SAAAmD,GACFD,EAASlB,EAA0BmB,EAAIvC,OACvCsC,EAASL,GAAgB,OAE5BO,OAAM,SAACC,GACJ,IAAMtB,EAAQsB,EAAEC,SACVD,EAAEC,SAAS1C,KAAKmB,MACfsB,EAAEE,SAAW,gCACpBL,EAASH,EAAchB,OAE1ByB,SAAQ,WACLN,EAASF,GAAgB,aYJjC,OAAIJ,EACO,eAAC,KAAD,CAAU0E,GAAIsC,GAAKC,UAI1B,sBAAK1C,UAAWC,KAAI0C,eAApB,SAEQrH,EAEI,eAAC,GAAD,IAEA,uBAAK0E,UAAWC,KAAI2C,KAApB,UACI,qBAAI5C,UAAWC,KAAI4C,MAAnB,0BACA,qBAAI7C,UAAWC,KAAI6C,SAAnB,qBACA,wBAAMN,SAAUR,EAAOe,aAAvB,UACI,mCACI,oBAAG/C,UAAWC,KAAI+C,WAAlB,mBACA,uBAAKhD,UAAWC,KAAIgD,eAApB,UACI,eAAC,GAAD,2BACQjB,EAAOkB,cAAc,UAD7B,IAEIlD,UAAWC,KAAIkD,mBACfrI,KAAM,OACNsI,QAAS,kBAAMrH,EAASH,EAAc,WAOtCoG,EAAOqB,QAAQjJ,OACf4H,EAAOK,OAAOjI,MAAQ,sBAAKkJ,MAAO,CAACC,MAAO,OAApB,SAA6BvB,EAAOK,OAAOjI,QAC7D,sBAAKkJ,MAAO,CAACC,MAAO,OAApB,UAAkC,OAAL3I,QAAK,IAALA,OAAA,EAAAA,EAAO4I,MAAM,SAAU5I,EAAQ,WAI5E,mCACI,oBAAGoF,UAAWC,KAAIwD,cAAlB,sBACA,uBAAKzD,UAAWC,KAAIgD,eAApB,UACI,sBAAKjD,UAAWC,KAAIyD,IAAKN,QA1C/B,WACJrB,EAAT,SAATjH,EAA0B,WAAsB,SAyCpB,SAAqD,sBACjD6I,IAAc,aAAT7I,EAAsB8I,GAAYF,GAAKG,IAAI,UACpD,eAAC,GAAD,2BACQ7B,EAAOkB,cAAc,aAD7B,IAEIlD,UAAWC,KAAIkD,mBACfC,QAAS,kBAAMrH,EAASH,EAAc,QACtCd,KAAMA,KAMTkH,EAAOqB,QAAQrI,UAAYgH,EAAOK,OAAOrH,SACtC,sBAAKsI,MAAO,CAACC,MAAO,OAApB,SAA6BvB,EAAOK,OAAOrH,WAC3C,sBAAKsI,MAAO,CAACC,MAAO,OAApB,UAAkC,OAAL3I,QAAK,IAALA,OAAA,EAAAA,EAAO4I,MAAM,aAAc5I,EAAQ,WAI5E,sBAAKoF,UAAWC,KAAI6D,SAApB,SACI,mCACI,eAAC,GAAD,2BACQ9B,EAAOkB,cAAc,eAD7B,IAEIpI,KAAM,cAKV,uBAAMkF,UAAWC,KAAItF,WAArB,8BAGR,eAAC,IAAD,CAASwF,GAAI,oBAAqBH,UAAWC,KAAIb,gBAAjD,6BACA,sBAAKY,UAAWC,KAAI8D,gBAApB,SACI,eAAC,GAAD,CAAa/D,UAAWC,KAAI+D,OAAQlJ,KAAM,SAA1C,SAAoD,iDAG5D,oBAAGkF,UAAWC,KAAIgE,WAAlB,mCACA,sBAAKjE,UAAWC,KAAIiE,OAApB,SACI,eAAC,IAAD,CAAS/D,GAAI,gBAAb,6B,wCC5Ib,OAA0B,mCCW5BgE,GAAmC,SAAC,GAAoB,IAAnBpK,EAAkB,EAAlBA,OAAQD,EAAU,EAAVA,KACtD,OACI,uBAAKkG,UAAWC,KAAImE,SAApB,UACI,sBAAKpE,UAAWC,KAAIoE,UAAWV,IAAK5J,GAAkBuK,GAAeT,IAAK,KAC1E,oBAAG7D,UAAWC,KAAIsE,SAAlB,SAA6BzK,IAC7B,sBAAKkG,UAAWC,KAAIuE,mBAApB,SACI,eAAC,IAAD,CAASrE,GAAI,0BAAb,gC,oBCVHsE,GAA6C,SAAC,GAA4B,IAA3BpK,EAA0B,EAA1BA,qBACxD,OACI,sBAAK2F,UAAWC,KAAIyE,cAApB,SACI,qBAAG1E,UAAWC,KAAI0E,UAAlB,8BAA+CtK,QCE9CuK,GAAU,WAGnB,IAAM7I,EAAW6F,cAEXtG,EAAauG,aAAuC,SAAA7C,GAAK,OAAIA,EAAMD,KAAKzD,cACxEV,EAAQiH,aAA6C,SAAA7C,GAAK,OAAIA,EAAMD,KAAKnE,SAEzEb,EAAS8H,aAAsC,SAAA7C,GAAK,OAAIA,EAAME,QAAQhF,qBAAqBH,UAC3FD,EAAO+H,aAAsC,SAAA7C,GAAK,OAAIA,EAAME,QAAQhF,qBAAqBJ,QACzFO,EAAuBwH,aAAsC,SAAA7C,GAAK,OAAIA,EAAME,QAAQhF,qBAAqBG,wBACzGwK,EAAKhD,aAAsC,SAAA7C,GAAK,OAAIA,EAAME,QAAQhF,qBAAqBC,OAQ7F,OANA2K,qBAAU,WACDD,GACD9I,EAASD,OAEd,CAAC+I,EAAI9I,IAEJnB,EACO,eAAC,KAAD,CAAUuF,GAAIsC,GAAKsC,QAI1BzJ,EAEI,eAAC,GAAD,IAEA,sBAAK0E,UAAWC,KAAI+E,iBAApB,SACI,sBAAKhF,UAAWC,KAAI2C,KAApB,SACI,uBAAK5C,UAAWC,KAAIgF,KAApB,UACI,eAAC,GAAD,CAAUlL,OAAQA,EAAQD,KAAMA,IAChC,eAAC,GAAD,CAAeO,qBAAsBA,Y,oBCxChD6K,GAAe,WACxB,OACI,sBAAKlF,UAAWC,KAAIkF,sBAApB,SACI,kD,wCCPG,OAA0B,mCCY5BC,GAA6C,SAAC,GAAa,IAAZhL,EAAW,EAAXA,MAEnD2B,EAAW6F,cAEhB,OACI,sBAAK5B,UAAWC,KAAIoF,uBAApB,SACI,uBAAKrF,UAAWC,KAAI2C,KAApB,UACI,qBAAI5C,UAAWC,KAAI4C,MAAnB,0BAEA,sBAAK7C,UAAWC,KAAIqF,aAApB,SACI,sBAAK3B,IAAK4B,GAAQ1B,IAAI,OAG1B,qBAAI7D,UAAWC,KAAI6C,SAAnB,yBAEA,qBAAG9C,UAAWC,KAAIuF,UAAlB,sDAA0E,gCAAOpL,OACjF,qBAAG4F,UAAWC,KAAIwF,WAAlB,UAA8B,eAAC,IAAD,CAAStF,GAAIsC,GAAKsC,MAAO3B,QAAS,kBAAIrH,EAASU,GAAkB,KAAjE,4BAA9B,gDCZHiJ,GAAkB,WAE3B,IAAMhJ,EAAiBmF,aAAuC,SAAA7C,GAAK,OAAIA,EAAMI,gBAAgB1C,kBAEvF9B,EAAQiH,aAA6C,SAAA7C,GAAK,OAAIA,EAAMI,gBAAgBxE,SAEpFU,EAAauG,aAAuC,SAAA7C,GAAK,OAAIA,EAAMI,gBAAgB9D,cAEnFS,EAAW6F,cAEXI,EAASC,aAAU,CACrBC,cAAe,CACX9H,MAAO,IAEX+H,SAAU,SAACC,GACP,IAAMC,EAA0B,GAMhC,OALKD,EAAOhI,MAEA,4CAA4CkI,KAAKF,EAAOhI,SAChEiI,EAAOjI,MAAQ,yBAFfiI,EAAOjI,MAAQ,WAIZiI,GAEXG,SAAU,SAAAJ,GlByCa,IAAChI,EkBxCpB2B,GlBwCoB3B,EkBxCKgI,EAAOhI,MlBwCoB,SAAC2B,GAC7DA,EAASc,GAA0B,IACnCP,EAAwBlC,GACnBvB,MAAK,SAAAmD,GACFD,EAASU,GAAkB,OAE9BR,OAAM,SAAAmF,GACH,IAAMxG,EAAQwG,EAAIjF,SAEdiF,EAAIjF,SAAS1C,KAAKmB,MAEjBwG,EAAI7E,QAAU,gCACnBR,EAASa,EAAwBhC,OAEpCyB,SAAQ,WACLN,EAASc,GAA0B,akBnD3C,OACI,sBAAKmD,UAAWC,KAAI0F,yBAApB,SAEQrK,EAEI,eAAC,GAAD,IAEAoB,EAEI,eAAC,GAAD,CAAetC,MAAO4H,EAAOI,OAAOhI,QAEpC,uBAAK4F,UAAWC,KAAI2C,KAApB,UACI,qBAAI5C,UAAWC,KAAI4C,MAAnB,0BACA,qBAAI7C,UAAWC,KAAI6C,SAAnB,mCACA,wBAAMN,SAAUR,EAAOe,aAAvB,UACI,uBAAK/C,UAAWC,KAAIgD,eAApB,UACI,eAAC,GAAD,2BACQjB,EAAOkB,cAAc,UAD7B,IAEIlD,UAAWC,KAAI2F,WACf9K,KAAM,OACN+K,YAAa,QACbzC,QAAS,kBAAMrH,EAASa,EAAwB,WAOhDoF,EAAOqB,QAAQjJ,OACf4H,EAAOK,OAAOjI,MAAQ,sBAAKkJ,MAAO,CAACC,MAAO,OAApB,SAA6BvB,EAAOK,OAAOjI,QAC7D,sBAAKkJ,MAAO,CAACC,MAAO,OAApB,SAA6B3I,OAGzC,oBAAGoF,UAAWC,KAAIuF,UAAlB,gFAGA,sBAAKxF,UAAWC,KAAI8D,gBAApB,SACI,eAAC,GAAD,CAAa/D,UAAWC,KAAI+D,OACflJ,KAAM,SADnB,SAC6B,6DAGrC,oBAAGkF,UAAWC,KAAIwF,WAAlB,6CACA,sBAAKzF,UAAWC,KAAI6F,QAApB,SACI,eAAC,IAAD,CAAS3F,GAAI,SAAb,oC,oBCjEnB4F,GAAc,WAEvB,IAAMhK,EAAW6F,cAFY,EAILE,mBAAwB,YAJnB,oBAItBhH,EAJsB,KAIhBiH,EAJgB,KAMvBjF,EAAuB+E,aAAuC,SAAA7C,GAAK,OAAIA,EAAMI,gBAAgBtC,wBAE7FxB,EAAauG,aAAuC,SAAA7C,GAAK,OAAIA,EAAMI,gBAAgB9D,cAEnFV,EAAQiH,aAA4C,SAAA7C,GAAK,OAAEA,EAAMI,gBAAgBxE,SAEhFoL,EAASC,eAATD,MAEDhE,EAASC,aAAU,CACrBC,cAAe,CACXlH,SAAU,IAEdmH,SAAU,SAACC,GACP,IAAMC,EAA0B,GAQhC,OAPKD,EAAOpH,UAEDoH,EAAOpH,SAASuH,OAAS,GAEzBH,EAAOpH,SAASuH,OAAS,MADhCF,EAAOrH,SAAW,iDAFlBqH,EAAOrH,SAAW,WAMfqH,GAEXG,SAAU,SAAAJ,GnBgDY,IAACpH,EAAkBwB,EmB/CrCT,GnB+CmBf,EmB/CKoH,EAAOpH,SnB+CMwB,EmB/CIwJ,EnB+CyC,SAACjK,GAC3FA,EAASc,GAA0B,IACnCP,EAAuBtB,EAAUwB,GAC5B3D,MAAK,SAAAmD,GAEFD,EAjED,CACHjB,KAAM,gDACN6B,QAAS,CACLG,sBA8DiC,QAEpCb,OAAM,SAAAmF,GACH,IAAMxG,EAAQwG,EAAIjF,SAEdiF,EAAIjF,SAAS1C,KAAKmB,MAEjBwG,EAAI7E,QAAU,gCACnBR,EAASa,EAAwBhC,OAEpCyB,SAAQ,WACLN,EAASc,GAA0B,amBvD3C,OAAIC,EACO,eAAC,KAAD,CAAUqD,GAAIsC,GAAKsC,QAI1B,sBAAK/E,UAAWC,KAAIiG,qBAApB,SAEQ5K,EAEI,eAAC,GAAD,IAEA,uBAAK0E,UAAWC,KAAI2C,KAApB,UACI,qBAAI5C,UAAWC,KAAI4C,MAAnB,0BACA,qBAAI7C,UAAWC,KAAI6C,SAAnB,iCACA,wBAAMN,SAAUR,EAAOe,aAAvB,UACI,uBAAK/C,UAAWC,KAAIgD,eAApB,UACI,sBAAKjD,UAAWC,KAAIyD,IAAKN,QApB3B,WACJrB,EAAT,SAATjH,EAA0B,WAAsB,SAmBxB,SAAqD,sBACjD6I,IAAc,aAAT7I,EAAsB8I,GAAYF,GAAKG,IAAI,UACpD,eAAC,GAAD,2BACQ7B,EAAOkB,cAAc,aAD7B,IAEIlD,UAAWC,KAAIkG,cACf/C,QAAS,kBAAMrH,EAASa,EAAwB,QAChD9B,KAAMA,EACN+K,YAAa,cAMhB7D,EAAOqB,QAAQrI,UAAYgH,EAAOK,OAAOrH,SACtC,sBAAKsI,MAAO,CAACC,MAAO,OAApB,SAA6BvB,EAAOK,OAAOrH,WAAkB,sBAAKsI,MAAO,CAACC,MAAO,MAAO6C,OAAO,YAAlC,SAAgDxL,OAGrH,oBAAGoF,UAAWC,KAAIoG,KAAlB,4DAEA,sBAAKrG,UAAWC,KAAI8D,gBAApB,SACI,eAAC,GAAD,CACI/D,UAAWC,KAAI+D,OACflJ,KAAM,SAFV,SAII,wD,wCC1DrBwL,GA/ByC,SAAC,GASpD,EAPGxL,KAOF,IANEwF,EAMH,EANGA,SAAUiG,EAMb,EANaA,gBACVvG,EAKH,EALGA,UACAwG,GAIH,EALc9F,cAKd,EAJG8F,UAEG7F,EAEN,6FAMKG,EAAmB,UAAMD,KAAEiD,SAAR,YAAoB9D,GAAwB,IAErE,OACI,mCACI,oCACIlF,KAAM,WACNwF,SAXa,SAACpE,GACtBoE,GAAYA,EAASpE,GACrBqK,GAAmBA,EAAgBrK,EAAE+E,cAAcwF,UAU3CzG,UAAWc,GAEPH,IAEP6F,GAAY,uBAAMxG,UAAWa,KAAEH,cAAnB,SAAmC8F,QC/B/CE,GAAiB,WAC1B,OACI,uBAAK1G,UAAWC,KAAI0G,wBAApB,UACI,oDACA,uBAAK3G,UAAWC,KAAI2G,oBAApB,UACI,iCACI,yCACA,eAAC,GAAD,wBAIJ,iCACI,6CACA,eAAC,GAAD,OAEJ,iCACI,2CACA,eAAC,GAAD,c,oBCVPC,GAAyB,WAClC,IAAM9K,EAAW6F,cAEXiD,EAAKhD,aAAsC,SAAA7C,GAAK,OAAIA,EAAME,QAAQhF,qBAAqBC,OACvFL,EAAO+H,aAAsC,SAAA7C,GAAK,OAAIA,EAAME,QAAQhF,qBAAqBJ,QACzFC,EAAS8H,aAAsC,SAAA7C,GAAK,OAAIA,EAAME,QAAQhF,qBAAqBH,UAE3Fa,EAAQiH,aAA6C,SAAA7C,GAAK,OAAIA,EAAMD,KAAKnE,SACzEU,EAAauG,aAAuC,SAAA7C,GAAK,OAAIA,EAAMD,KAAKzD,cAE9EwJ,qBAAU,WACDD,GACD9I,EAASD,OAEd,CAAC+I,IAEJ,MAAoB/C,mBAAiB,IAArC,oBAAKgF,EAAL,KAAUC,EAAV,KACA,EAA8BjF,mBAAiBhI,GAA/C,oBAAKkN,EAAL,KAAeC,EAAf,KAWA,OAAIrM,EACO,eAAC,KAAD,CAAUuF,GAAIsC,GAAKsC,QAI1BzJ,EAEI,eAAC,GAAD,IAEA,sBAAK0E,UAAWC,KAAIiH,cAApB,SACI,uBAAKlH,UAAWC,KAAI2C,KAApB,UACI,qBAAI5C,UAAWC,KAAI4C,MAAnB,kCACA,sBAAK7C,UAAWC,KAAIkH,WAApB,SACI,sBAAKxD,IAAK5J,GAAkBuK,GAAeT,IAAI,oBAEnD,mCACI,oBAAG7D,UAAWC,KAAI+C,WAAlB,sBACA,sBAAKhD,UAAWC,KAAIgD,eAApB,SACI,eAAC,GAAD,CACIjD,UAAWC,KAAImH,oBACfzL,MAAOqL,EACPlM,KAAM,OACNyF,aAAc0G,SAK1B,mCACI,oBAAGjH,UAAWC,KAAI+C,WAAlB,oBACA,sBAAKhD,UAAWC,KAAIgD,eAApB,SACI,eAAC,GAAD,CACIjD,UAAWC,KAAImH,oBACfzL,MAAOmL,EACPhM,KAAM,OACNyF,aAAcwG,SAK1B,uBAAK/G,UAAWC,KAAI8D,gBAApB,UACI,yBACI/D,UAAWC,KAAIoH,aACfjE,QAnDF,WAElB,OAAO,eAAC,KAAD,CAAUjD,GAAIsC,GAAKC,WA+CV,SAGI,6CAEJ,yBACI1C,UAAWC,KAAIqH,eACflE,QApDJ,WAEhB,OADArH,E3BoByB,SAACjC,EAAcC,GAAf,OAAgD,SAACgC,GAC9EA,EAASF,GAAgB,IACzBhC,EAA8BC,EAAMC,GAC/BlB,MAAK,SAAAmD,GACFD,EAPP,CAACjB,KAAM,2BAA4BqE,YAOFnD,EAAIvC,KAAK0F,iBAEtClD,OAAM,SAAAmF,GACH,IAAMxG,EAAQwG,EAAIjF,SAEdiF,EAAIjF,SAAS1C,KAAKmB,MAEjBwG,EAAI7E,QAAU,gCACnBoC,QAAQC,IAAR,iBAAsBhE,OAEzByB,SAAQ,WACLN,EAASF,GAAgB,Q2BnCpB0L,CAAkBP,EAAUF,IAC9B,eAAC,KAAD,CAAU3G,GAAIsC,GAAKC,WAgDV,SAII,oD,oBCrEf8E,GAAqB,WAE9B,IAAMzL,EAAW6F,cAEXI,EAASC,aAAU,CACrBC,cAAe,CACX9H,MAAO,GACPY,SAAU,GACVyM,gBAAiB,IAErBtF,SAAU,SAACC,GACP,IAAMC,EAA0B,GAkBhC,OAjBKD,EAAOhI,MAEA,4CAA4CkI,KAAKF,EAAOhI,SAChEiI,EAAOjI,MAAQ,yBAFfiI,EAAOjI,MAAQ,WAIdgI,EAAOpH,UAEDoH,EAAOpH,SAASuH,OAAS,GAEzBH,EAAOpH,SAASuH,OAAS,MADhCF,EAAOrH,SAAW,iDAFlBqH,EAAOrH,SAAW,WAMjBoH,EAAOqF,gBAEDrF,EAAOpH,SAASuH,SAAWH,EAAOqF,gBAAgBlF,SACzDF,EAAOoF,gBAAkB,yBAFzBpF,EAAOoF,gBAAkB,WAItBpF,GAEXG,SAAU,SAAAJ,G1BqBhB,IAAChI,EAAeY,E0BpBNe,G1BoBT3B,E0BpB2BgI,EAAOhI,M1BoBnBY,E0BpB0BoH,EAAOpH,S1BoBjD,uCAAmD,WAAOe,GAAP,eAAAyC,EAAA,6DACjDzC,EAASP,GAAmB,IADqB,kBAGzCT,EAAqBX,EAAOY,GAHa,OAI/Ce,EApDG,CACLjB,KAAMK,EACNE,cAkD8B,IAJmB,gDAMzCT,EAAQ,KAAEuB,SAAS1C,KAAKmB,MAC9BmB,EAASR,EAAiBX,IAPqB,yBAU/CmB,EAASP,GAAmB,IAVmB,4EAAnD,2D0BhBQZ,EAAQiH,aAA6C,SAAA7C,GAAK,OAAIA,EAAMK,SAASzE,SAC7EU,EAAauG,aAAuC,SAAA7C,GAAK,OAAIA,EAAMK,SAAS/D,cAC5ED,EAAewG,aAAuC,SAAA7C,GAAK,OAAIA,EAAMK,SAAShE,gBAE9EqM,EAAUC,eAxCoB,EA0CZ7F,mBAAwB,YA1CZ,oBA0C7BhH,EA1C6B,KA0CvBiH,EA1CuB,KAgD9B6F,EAAoB,WACJ7F,EAAT,SAATjH,EAA0B,WAAsB,SAKpD,OAAIO,EAAqB,eAAC,KAAD,CAAU8E,GAAIsC,GAAKsC,QAGxC,sBAAK/E,UAAWC,KAAI4H,sBAApB,SAEQvM,EAEI,eAAC,GAAD,IAEA,uBAAK0E,UAAWC,KAAI2C,KAApB,UACI,qBAAI5C,UAAWC,KAAI4C,MAAnB,0BACA,qBAAI7C,UAAWC,KAAI6C,SAAnB,qBACA,wBAAMN,SAAUR,EAAOe,aAAvB,UACI,mCACI,oBAAG/C,UAAWC,KAAI+C,WAAlB,mBACA,uBAAKhD,UAAWC,KAAIgD,eAApB,UACI,eAAC,GAAD,2BACQjB,EAAOkB,cAAc,UAD7B,IAEIlD,UAAWC,KAAIkD,mBACfrI,KAAM,OACNsI,QAAS,kBAAMrH,EAASR,EAAiB,WAOzCyG,EAAOqB,QAAQjJ,OACf4H,EAAOK,OAAOjI,MAAQ,sBAAKkJ,MAAO,CAACC,MAAO,OAApB,SAA6BvB,EAAOK,OAAOjI,QAC7D,sBAAKkJ,MAAO,CAACC,MAAO,OAApB,SAA6B3I,UAI7C,mCACI,oBAAGoF,UAAWC,KAAIwD,cAAlB,sBACA,uBAAKzD,UAAWC,KAAIgD,eAApB,UACI,sBAAKjD,UAAWC,KAAIyD,IAAKN,QAASwE,EAAlC,SAAqD,sBACjDjE,IAAc,aAAT7I,EAAsB8I,GAAYF,GAAKG,IAAI,UACpD,eAAC,GAAD,2BACQ7B,EAAOkB,cAAc,aAD7B,IAEIlD,UAAWC,KAAIkD,mBACfrI,KAAMA,KAMTkH,EAAOqB,QAAQrI,UAAYgH,EAAOK,OAAOrH,SACtC,sBAAKsI,MAAO,CAACC,MAAO,OAApB,SAA6BvB,EAAOK,OAAOrH,WAAkB,WAIzE,mCACI,oBAAGgF,UAAWC,KAAIwD,cAAlB,8BACA,uBAAKzD,UAAWC,KAAIgD,eAApB,UACI,sBAAKjD,UAAWC,KAAIyD,IAAKN,QAASwE,EAAlC,SAAqD,sBACjDjE,IAAc,aAAT7I,EAAsB8I,GAAYF,GAAKG,IAAI,UACpD,eAAC,GAAD,2BACQ7B,EAAOkB,cAAc,oBAD7B,IAEIlD,UAAWC,KAAIkD,mBACfrI,KAAMA,KAMTkH,EAAOqB,QAAQoE,iBAAmBzF,EAAOK,OAAOoF,gBAC7C,sBAAKnE,MAAO,CAACC,MAAO,OAApB,SAA6BvB,EAAOK,OAAOoF,kBAAyB,WAIhF,uBAAKzH,UAAWC,KAAI8D,gBAApB,UACI,yBACI/D,UAAWC,KAAIoH,aACfjE,QApFV,WAClBsE,EAAQI,KAAKrF,GAAKsC,QAiFM,SAGI,6CAEJ,yBAAQjK,KAAM,SACNkF,UAAWC,KAAIqH,eADvB,SAGI,2D,oBClJvBS,GAAa,WAEtB,IAAMhM,EAAW6F,cAEjB,EAAoCE,mBAAS7B,KAAI+H,QAAjD,oBAAOC,EAAP,KAAmBC,EAAnB,KAEIC,EAAWC,eAMf,OACI,sBAAKpI,UAAWC,KAAIoI,gBAApB,SACI,uBAAKrI,UAAWC,KAAIqI,QAApB,UACI,qBAAItI,UAAWC,KAAIsI,KAAnB,0BACA,uBAAKvI,UAAWC,KAAIuI,eAApB,UACI,sBAAKxI,UAAWC,KAAIwI,cAApB,SACI,eAAC,IAAD,CAAStI,GAAIsC,GAAKiG,WACT1I,UAAWmI,EAASQ,WAAalG,GAAKiG,WAAaT,EAAa,GAChEW,aAAc,kBAAMV,EAAc,KAClCW,WAAY,kBAAMX,EAAcjI,KAAI+H,SACpCc,SAAU,EAJnB,0BAOJ,sBAAK9I,UAAWC,KAAIwI,cAApB,SACI,eAAC,IAAD,CAAStI,GAAIsC,GAAKC,QAASoG,SAAU,EAC5B9I,UAAWmI,EAASQ,WAAalG,GAAKC,QAAUuF,EAAa,GAC7DW,aAAc,kBAAMV,EAAc,KAClCW,WAAY,kBAAMX,EAAcjI,KAAI+H,SAH7C,0BAOR,sBAAKhI,UAAWC,KAAI8D,gBAApB,SACI,eAAC,GAAD,CAAaX,QA1BN,WACnBrH,G1BuDoC,SAACA,GACzCA,EAASF,GAAgB,IACzBrC,IACKX,MAAK,SAAAmD,GACFD,EAvDP,CAACjB,KAAM,2BAA4Ba,OAuDF,OAE7BM,OAAM,SAACC,GACUA,EAAEC,SACVD,EAAEC,SAAS1C,KAAKmB,MACfsB,EAAEE,YAEZC,SAAQ,WACLN,EAASF,GAAgB,W0B1CqBmE,UAAWC,KAAI8I,UAArD,SAAgE,qD,4DC3CrE,OAA0B,qCCA1B,OAA0B,mCCiB5BC,GAAyC,SAAC,GAAiB,IAAhBhJ,EAAe,EAAfA,UAE9CjE,EAAW6F,cAEXqH,EAAmBpH,aAAoD,SAAA7C,GAAK,OAAIA,EAAMP,MAAMZ,2BAA2BV,aAE7H,EAA0B2E,mBAAoB,QAA9C,oBAAOoH,EAAP,KAAcC,EAAd,KAcA,OACI,uBAAKnJ,UAAS,UAAKA,EAAL,YAAkBC,KAAImJ,aAApC,UACI,wCACA,yCACA,iDAAkB,uBAAMhG,QAhBD,WAE3B,OADA+F,EAAmB,SAAVD,EAAmB,KAAO,QAC3BD,GACJ,IAAK,WACDlN,EAASkC,EAAoB,aAC7B,MACJ,IAAK,WACDlC,EAASkC,EAAoB,eASf,SACd,sBAAK0F,IAAe,SAAVuF,EAAmBG,GAAYC,GAASzF,IAAI,UAE1D,gDACA,+C,oBC1BC0F,GAA0C,SAAC,GAYO,IAXHzP,EAWE,EAXFA,KACAK,EAUE,EAVFA,IACAqP,EASE,EATFA,WACAC,EAQE,EARFA,YACAC,EAOE,EAPFA,YACAC,EAME,EANFA,YACAC,EAKE,EALFA,YACAC,EAIE,EAJFA,WACAC,EAGE,EAHFA,UACAxM,EAEE,EAFFA,QAEE,EADFkJ,SAGxD,OACI,uBAAKxG,UAAWC,KAAI8J,UAApB,UACI,sBAAK/J,UAAWC,KAAIqB,IAApB,SAA0BxH,IAC1B,+BAAM0P,IACN,iCACI,wCAAUC,KACV,wCAAUC,QAEd,iCACI,wCAAUC,KACV,wCAAUC,QAEd,sBAAK5J,UAAWC,KAAI+J,iBAApB,SACI,eAAC,GAAD,CAAahK,UAAWC,KAAIgK,aACf7G,QAAS,kBAAMyG,EAAW1P,IAC1B+P,SAAU5M,IAAYwM,EAFnC,SAGC,mDClCJK,GAA4C,SAAC,GAA6B,IAA5BN,EAA2B,EAA3BA,WAGjDO,GAH4E,EAAf/M,UAGjDwE,aAAmD,SAAA7C,GAAK,OAAIA,EAAMP,MAAMb,cACpFkM,EAAYjI,aAAsC,SAAA7C,GAAK,OAAIA,EAAME,QAAQhF,qBAAqBC,OAC9FkQ,EAAkBxI,aAAuC,SAAA7C,GAAK,OAAIA,EAAMP,MAAMnD,cAGpF,OACI,uBAAK0E,UAAWC,KAAIqK,eAApB,UACI,eAAC,GAAD,CAAatK,UAAWC,KAAImJ,cAExBiB,EAEI,eAAC,GAAD,IAEAD,EAAUjJ,KAAI,SAAAoJ,GAEV,IAAMd,EAAcc,EAAK/P,QAAQgQ,MAAM,EAAG,IACpCd,EAAca,EAAK/P,QAAQgQ,MAAM,GAAI,IACrCb,EAAcY,EAAKjQ,QAAQkQ,MAAM,EAAG,IACpCZ,EAAcW,EAAKjQ,QAAQkQ,MAAM,GAAI,IAE3C,OACI,eAAC,GAAD,CACI1Q,KAAMyQ,EAAKzQ,KACXK,IAAKoQ,EAAKpQ,IACVqP,WAAYe,EAAKf,WACjBlP,QAASiQ,EAAKjQ,QACdmP,YAAaA,EACbC,YAAaA,EACbC,YAAaA,EACbC,YAAaA,EACbtM,QAASiN,EAAKjN,QAEduM,WAAYA,EACZC,UAAWA,GAFNS,EAAKpQ,YClB3BsQ,GAtB2B,SAAC,GAAiB,IAAhBzK,EAAe,EAAfA,UAElCjE,EAAW6F,cACjB,EAA8BE,mBAAiB,IAA/C,oBAAO4I,EAAP,KAAgBC,EAAhB,KAOA,OACI,eAAC,GAAD,CACIhP,MAAO+O,EACP5P,KAAM,OACNyF,aAAcoK,EACdlK,QAVY,SAACvE,GACjBH,E5BiCH,CAACjB,KAAM,wBAAyBwE,c4BjCNoL,IACvBxO,EAAE+E,cAAc2J,QASZ/E,YAAa,YACb7F,UAAWA,KCvBjB6K,I,OAASC,EAAQ,MAEjBC,IAAQC,EADkBH,GAAOG,yBACDH,GAAOE,OAqD9BE,GApC+C,SAAC,GActD,IAZLC,EAYI,EAZJA,cACAC,EAWI,EAXJA,cACAxP,EAUI,EAVJA,MACAsB,EASI,EATJA,IACAC,EAQI,EARJA,IACAkO,EAOI,EAPJA,KACAC,EAMI,EANJA,SACAC,EAKI,EALJA,YACAC,EAII,EAJJA,WACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,SACAC,EACI,EADJA,eAGF,OACE,qCACE,eAACX,GAAD,CACEzK,SAAU4K,EACVC,cAAeA,EACfxP,MAAOA,EACPsB,IAAKA,EACLC,IAAKA,EACLkO,KAAMA,EACNC,SAAUA,EACVC,YAAaA,EACbC,WAAYA,EACZC,UAAWA,EACXC,SAAUA,EACVC,eAAgBA,O,oBC9CXC,GAAc,WACzB,IAAM5P,EAAW6F,cACjB,EAAsBE,mBAAS,GAA/B,oBAAO7E,EAAP,KAAY2O,EAAZ,KACA,EAAsB9J,mBAAS,KAA/B,oBAAO5E,EAAP,KAAY2O,EAAZ,KAUA,OACE,uCACE,eAAC,GAAD,CACElQ,MAAO,CAACsB,EAAKC,GACbD,IAAK,EACLC,IAAK,IACLkO,KAAM,EACNC,UAAU,EACVH,cAhBgB,SAACvP,GACjBsB,GAAOC,GAAK0O,EAAOjQ,EAAM,IACzBuB,GAAOD,GAAK4O,EAAOlQ,EAAM,KAezBwP,cAbc,WAClBpP,E9BqDC,CAACjB,KAAM,uBAAwB2E,M8BrDV,CAACxC,EAAKC,MAaxBoO,YAAa,CAAC,CAACQ,YAAa,UAAWC,gBAAiB,YACxDR,WAAY,CAAC,CAACS,MAAO,OAAQD,gBAAiB,YAC9CP,UAAW,CAACO,gBAAiB,QAC7BN,SAAU,CAACM,gBAAiB,OAC5BL,eAAgB,CAACI,YAAa,WAEhC,uBAAK9L,UAAWiM,KAAOC,eAAvB,UACE,gCAAOjP,IACP,gCAAOC,W,mFCPAiP,GAtBqC,SAAC,GAM/C,IAJFC,EAIC,EAJDA,QACA9L,EAGC,EAHDA,SAAU+L,EAGT,EAHSA,eACP1L,EAEF,mBACG2L,EAAuBF,EAAUA,EAAQjL,KAAI,SAACoL,EAAEC,GAAH,OACjD,kCAA2BD,GAAdA,EAAI,IAAMC,MAAmB,GAO5C,OACE,iDAAQlM,SANe,SAACpE,GACxBmQ,GAAkBA,EAAenQ,EAAE+E,cAActF,OACjD2E,GAAYA,EAASpE,KAImByE,GAAxC,aACG2L,MC0BQG,GAtCG,SAAC,GAAoC,IAAnCpP,EAAkC,EAAlCA,UACZtB,EAAW6F,cAEX5D,EAAsB6D,aAAsC,SAAA7C,GAAK,OAAIA,EAAMP,MAAMT,uBAUvF,OAAO,uBAAKgC,UAAWiM,KAAOS,cAAvB,UACL,eAAC,KAAD,CACErP,UAAWsP,KAAKC,KAAK5O,EAAoBX,GACzCwP,qBAAsB,EACtBC,mBAAoB,EACpBC,cAAe,IACfC,kBAAmBf,KAAOgB,KAC1BC,UAAW,IACXC,cAAelB,KAAOmB,KACtBC,gBAAiBpB,KAAOqB,aACxBC,aAAc,SAACnQ,GAAD,OAlBI,SAACA,GACrBrB,EhCgCC,CAACjB,KAAM,yBAA0ByE,cgChCVnC,EAAK,IAiBHoQ,CAAcpQ,EAAKqQ,WAC3CC,mBAAoBzB,KAAO0B,UAC3BC,cAAe3B,KAAO7O,OAExB,uBAAK4C,UAAWiM,KAAO4B,cAAvB,iBACM,eAAC,GAAD,CACF7N,UAAWiM,KAAO6B,YAClB1B,QAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACrCzQ,MAAO0B,EACPiD,SAAU,SAACpE,GAAD,OAxBSsD,GAwBetD,EAAE+E,cAActF,WAvBtDI,EhC2CwB,SAACyD,GAAD,MACvB,CAAC1E,KAAM,uBAAwB0E,SgC5CvBuO,CAAavO,IADA,IAACA,KAmBvB,yBCtBSwO,GAAY,WAErB,IAAMjS,EAAW6F,cAEXiD,EAAKhD,aAAsC,SAAA7C,GAAK,OAAIA,EAAME,QAAQhF,qBAAqBC,OAEvFmB,EAAauG,aAAuC,SAAA7C,GAAK,OAAIA,EAAMD,KAAKzD,cACxEV,EAAQiH,aAA6C,SAAA7C,GAAK,OAAIA,EAAMD,KAAKnE,SAEzEwC,EAAOyE,aAAsC,SAAA7C,GAAK,OAAIA,EAAMP,MAAMZ,2BAA2BT,QAC7FC,EAAYwE,aAAsC,SAAA7C,GAAK,OAAIA,EAAMP,MAAMZ,2BAA2BR,aAClGL,EAAW6E,aAAsC,SAAA7C,GAAK,OAAIA,EAAMP,MAAMZ,2BAA2Bb,YACjGiM,EAAmBpH,aAAsC,SAAA7C,GAAK,OAAIA,EAAMP,MAAMZ,2BAA2BV,aACzG8Q,EAAgBpM,aAAsC,SAAA7C,GAAK,OAAIA,EAAMP,MAAMZ,2BAA2BP,WACtG4Q,EAAWrM,aAAsC,SAAA7C,GAAK,OAAIA,EAAMP,MAAMZ,2BAA2BE,iBACjGoQ,EAAWtM,aAAsC,SAAA7C,GAAK,OAAIA,EAAMP,MAAMZ,2BAA2BC,iBAEvG,EAAsCgE,mBAAS7B,KAAI+H,QAAnD,oBAAOoG,EAAP,KAAoBC,EAApB,KACA,EAAoCvM,mBAAyB,OAA7D,oBAAOwM,EAAP,KAAmBC,EAAnB,KAEAzJ,qBAAU,WAIF/I,EAHC8I,EAGQvG,KAFAxC,OAId,CAAC+I,EAAI9I,EAAUqB,EAAMC,EAAWL,EAAUiR,EAAehF,EAAkBiF,EAAUC,IAGxF,IAAMK,EAAUC,uBAAY,WACxB,IjC0FsB3U,EAAc2D,EiC1F9BiR,EAAcC,OAAO,oCACvBD,GACA3S,GjCwFkBjC,EiCxFK4U,EjCwFN,uCAAqD,WAAO3S,GAAP,SAAAyC,EAAA,sEAE1EzC,EAASoC,GAAgB,IAFiD,SAGpEpB,EAAuBjD,EAAM2D,GAHuC,OAI1E1B,EAASuC,MAJiE,gDAM1EK,QAAQC,IAAR,MAN0E,yDAArD,0DiCvFtB,CAAC7C,IAGE8N,EAAa4E,uBAAY,SAAC9Q,GAC5B5B,EjC6FkB,SAAC4B,GAAD,8CAAkC,WAAO5B,GAAP,SAAAyC,EAAA,sEAEpDzC,EAASoC,GAAgB,IAF2B,SAG9CpB,EAAoBY,GAH0B,OAIpD5B,EAASuC,MAJ2C,gDAMpDK,QAAQC,IAAR,MANoD,yDAAlC,sDiC7FTgQ,CAAWjR,MACrB,CAAC5B,IAGE8S,EAAiBJ,uBAAY,WAC/BF,EAAc,MACdxS,EAASqC,EAAUyG,MACpB,CAACA,EAAI9I,IAEF+S,EAAkBL,uBAAY,WAChCF,EAAc,OACdxS,EAASqC,EAAU,OACpB,CAACrC,IAGJ,OAAInB,EACO,eAAC,KAAD,CAAUuF,GAAIsC,GAAKsC,QAI1BzJ,EAEI,eAAC,GAAD,IAEA,sBAAK0E,UAAWC,KAAI8O,kBAApB,SACI,uBAAK/O,UAAWC,KAAI2C,KAApB,UACI,uBAAK5C,UAAWC,KAAIgF,KAApB,UACI,oBAAGjF,UAAWC,KAAI+O,WAAlB,8BACA,uBAAKhP,UAAWC,KAAI+J,iBAApB,UACI,eAAC,GAAD,CACIhK,UAA0B,OAAfsO,EAAA,UAAyBrO,KAAIgP,SAA7B,YAAyCb,GAAgBnO,KAAIgP,SACxE7L,QAASyL,EACTjG,aAAc,kBAAMyF,EAAe,KACnCxF,WAAY,kBAAMwF,EAAepO,KAAI+H,SAJzC,gBAMA,eAAC,GAAD,CACIhI,UAA0B,QAAfsO,EAAA,UAA0BrO,KAAIiP,UAA9B,YAA2Cd,GAAgBnO,KAAIiP,UAC1E9L,QAAS0L,EACTlG,aAAc,kBAAMyF,EAAe,KACnCxF,WAAY,kBAAMwF,EAAepO,KAAI+H,SAJzC,oBAOJ,oBAAGhI,UAAWC,KAAIkP,YAAlB,6BACA,eAAC,GAAD,OAEJ,uBAAKnP,UAAWC,KAAImP,UAApB,UACI,qBAAIpP,UAAWC,KAAIoP,eAAnB,wBACA,uBAAKrP,UAAWC,KAAIqP,0BAApB,UACI,eAAC,GAAD,CAAQtP,UAAWC,KAAIsP,SACvB,sBAAKvP,UAAWC,KAAIuP,mBAApB,SACI,eAAC,GAAD,CAAaxP,UAAWC,KAAIwP,cACfrM,QAASoL,EADtB,SAC+B,wDAGvC,eAAC,GAAD,CAAY3E,WAAYA,EAAYxM,UAAWA,IAC/C,eAAC,GAAD,CAAWA,UAAWA,aC5FjCoF,GAAO,CAChBC,QAAS,WACTgG,WAAY,aACZgH,UAAW,0BACX3K,MAAO,SACP4K,aAAc,gBACdC,gBAAiB,mBACjBC,eAAgB,OAChBC,iBAAkB,oBAClBC,aAAc,yBA4BHC,GAzBH,WAER,IAAMvU,EAAaoG,aAAuC,SAAA7C,GAAK,OAAIA,EAAMD,KAAKtD,cAE9E,OACI,uBAAKuE,UAAU,cAAf,UACI,eAAC,GAAD,IACCvE,GAAc,eAAC,GAAD,IACf,uBAAKuE,UAAU,sBAAf,UACI,eAAC,KAAD,CAAOiQ,OAAK,EAACC,KAAM,IAAKC,OAAQ,kBAAM,eAAC,KAAD,CAAUhQ,GAAIsC,GAAKC,aACzD,eAAC,KAAD,CAAOuN,OAAK,EAACC,KAAMzN,GAAKsC,MAAOoL,OAAQ,kBAAM,eAAC,GAAD,OAC7C,eAAC,KAAD,CAAOD,KAAMzN,GAAKC,QAASyN,OAAQ,kBAAM,eAAC,GAAD,OACzC,eAAC,KAAD,CAAOD,KAAMzN,GAAKiG,WAAYyH,OAAQ,kBAAM,eAAC,GAAD,OAC5C,eAAC,KAAD,CAAOD,KAAMzN,GAAKiN,UAAWS,OAAQ,kBAAM,eAAC,GAAD,OAC3C,eAAC,KAAD,CAAOD,KAAMzN,GAAKkN,aAAcQ,OAAQ,kBAAM,eAAC,GAAD,OAC9C,eAAC,KAAD,CAAOD,KAAMzN,GAAKmN,gBAAiBO,OAAQ,kBAAM,eAAC,GAAD,OACjD,eAAC,KAAD,CAAOD,KAAMzN,GAAKoN,eAAgBM,OAAQ,kBAAM,eAAC,GAAD,OAChD,eAAC,KAAD,CAAOD,KAAMzN,GAAKqN,iBAAkBK,OAAQ,kBAAM,eAAC,GAAD,OAClD,eAAC,KAAD,CAAOD,KAAMzN,GAAKsN,aACXI,OAAQ,kBAAM,eAAC,GAAD,OAXzB,WC3BZC,IAASD,OACP,eAAC,IAAME,WAAP,UACE,eAAC,IAAD,UACE,eAAC,IAAD,CAAU3Q,MAAOA,GAAjB,SACE,eAAC,GAAD,UAIN4Q,SAASC,eAAe,SAM1B7X,K,mBCxBA8X,EAAOC,QAAU,CAAC,kBAAoB,qCAAqC,KAAO,wBAAwB,KAAO,wBAAwB,WAAa,8BAA8B,iBAAmB,oCAAoC,OAAS,0BAA0B,SAAW,4BAA4B,UAAY,6BAA6B,YAAc,+BAA+B,UAAY,6BAA6B,eAAiB,kCAAkC,0BAA4B,6CAA6C,OAAS,0BAA0B,mBAAqB,sCAAsC,cAAgB,mC,mBCA9pBD,EAAOC,QAAU,CAAC,eAAiB,8BAA8B,KAAO,oBAAoB,MAAQ,qBAAqB,SAAW,wBAAwB,WAAa,0BAA0B,cAAgB,6BAA6B,eAAiB,8BAA8B,IAAM,mBAAmB,mBAAqB,kCAAkC,SAAW,wBAAwB,WAAa,0BAA0B,gBAAkB,+BAA+B,gBAAkB,+BAA+B,OAAS,sBAAsB,WAAa,0BAA0B,OAAS,wB,mBCA1mBD,EAAOC,QAAU,CAAC,sBAAwB,wCAAwC,KAAO,uBAAuB,MAAQ,wBAAwB,SAAW,2BAA2B,WAAa,6BAA6B,cAAgB,gCAAgC,eAAiB,iCAAiC,IAAM,sBAAsB,mBAAqB,qCAAqC,gBAAkB,kCAAkC,aAAe,+BAA+B,eAAiB,mC,mBCA3gBD,EAAOC,QAAU,CAAC,cAAgB,oCAAoC,KAAO,2BAA2B,MAAQ,4BAA4B,WAAa,iCAAiC,eAAiB,qCAAqC,oBAAsB,0CAA0C,gBAAkB,sCAAsC,aAAe,mCAAmC,eAAiB,uC,mBCA3aD,EAAOC,QAAU,CAAC,yBAA2B,kDAAkD,KAAO,8BAA8B,MAAQ,+BAA+B,SAAW,kCAAkC,eAAiB,wCAAwC,WAAa,oCAAoC,UAAY,mCAAmC,gBAAkB,yCAAyC,OAAS,gCAAgC,WAAa,oCAAoC,QAAU,mC,mBCAhhBD,EAAOC,QAAU,CAAC,gBAAkB,oCAAoC,QAAU,4BAA4B,KAAO,yBAAyB,eAAiB,mCAAmC,cAAgB,kCAAkC,OAAS,2BAA2B,gBAAkB,oCAAoC,UAAY,gC,mBCA1VD,EAAOC,QAAU,CAAC,qBAAuB,0CAA0C,KAAO,0BAA0B,MAAQ,2BAA2B,SAAW,8BAA8B,eAAiB,oCAAoC,IAAM,yBAAyB,cAAgB,mCAAmC,KAAO,0BAA0B,gBAAkB,qCAAqC,OAAS,8B,mBCAxaD,EAAOC,QAAU,CAAC,cAAgB,iCAAiC,UAAY,6BAA6B,aAAe,gCAAgC,KAAO,wBAAwB,KAAO,wBAAwB,KAAO,wBAAwB,cAAgB,iCAAiC,YAAc,iC,mBCAvTD,EAAOC,QAAU,CAAC,uBAAyB,8CAA8C,KAAO,4BAA4B,MAAQ,6BAA6B,aAAe,oCAAoC,SAAW,gCAAgC,UAAY,iCAAiC,WAAa,oC,mBCAzTD,EAAOC,QAAU,CAAC,SAAW,2BAA2B,SAAW,2BAA2B,mBAAqB,uC,mBCAnHD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,iBAAmB,oCAAoC,aAAe,kC,mBCAjID,EAAOC,QAAU,CAAC,WAAa,mCAAmC,MAAQ,gC,mBCA1ED,EAAOC,QAAU,CAAC,iBAAmB,kCAAkC,KAAO,sBAAsB,KAAO,wB,mBCA3GD,EAAOC,QAAU,CAAC,QAAU,6BAA6B,IAAM,2B,mBCA/DD,EAAOC,QAAU,CAAC,cAAgB,uC,mBCAlCD,EAAOC,QAAU,CAAC,wBAA0B,gDAAgD,oBAAsB,8C,mBCAlHD,EAAOC,QAAU,CAAC,SAAW,gCAAgC,cAAgB,uC,mBCA7ED,EAAOC,QAAU,CAAC,eAAiB,mCAAmC,YAAc,kC,mBCApFD,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,OAAS,0BAA0B,MAAQ,2B,wCCA7DD,EAAOC,QAAU,CAAC,YAAc,mC,mBCAhCD,EAAOC,QAAU,CAAC,eAAiB,oCAAoC,YAAc,mC","file":"static/js/main.b83a2dc8.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from 'axios'\r\nimport {DefaultResponseType} from \"./apiRestore\";\r\n\r\nconst instance = axios.create({\r\n    // baseURL: \"http://localhost:7542/2.0/\",\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0\",\r\n    withCredentials: true,\r\n});\r\n\r\nexport const authAPI = {\r\n    login(data: LoginParamsType) {\r\n        return instance.post<LoginResponseType>(\"auth/login\", data)\r\n    },\r\n    logout() {\r\n        return instance.delete<DefaultResponseType>(\"auth/me\")\r\n    },\r\n    isAuthorized () {\r\n        return instance.post<LoginResponseType>(\"auth/me\",{})\r\n    }\r\n}\r\n\r\n\r\nexport type LoginParamsType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\nexport type LoginResponseType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar: string\r\n    publicCardPacksCount: number\r\n    created: DateConstructor\r\n    updated: DateConstructor\r\n    isAdmin: boolean\r\n    verified: boolean\r\n    rememberMe: boolean\r\n    error?: string\r\n}\r\n","import axios from 'axios'\r\nimport {LoginResponseType} from \"./apiLogin\";\r\n\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    // baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true\r\n})\r\n\r\n//api types\r\n\r\nexport const profileApi = {\r\n    editUserNameAvatar(name: string, avatar: string) {\r\n        return axiosInstance.put<{updatedUser: LoginResponseType}>('/auth/me', {\r\n            name,\r\n            avatar\r\n        })\r\n    }\r\n\r\n}","import {LoginResponseType} from \"../m3-dal/apiLogin\";\r\nimport {AppThunkType} from \"./store\";\r\nimport {profileApi} from \"../m3-dal/apiProfile\";\r\nimport {setLoginLoading} from \"./authReducer\";\r\n\r\ntype InitialStateType = {\r\n    informationAboutUser: LoginResponseType\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    informationAboutUser: {\r\n        _id: \"\",\r\n        email: \"\",\r\n        name: \"\",\r\n        publicCardPacksCount: 0,\r\n        created: Date,\r\n        updated: Date,\r\n        isAdmin: false,\r\n        verified: false,\r\n        rememberMe: false,\r\n        avatar: \"\",\r\n        error: \"\"\r\n    }\r\n}\r\n\r\n/*export type LoginResponseType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar?: string\r\n    publicCardPacksCount: number\r\n    created: Date\r\n    updated: Date\r\n    isAdmin: boolean\r\n    verified: boolean\r\n    rememberMe: boolean\r\n    error?: string\r\n}*/\r\n\r\nexport const profileReducer = (state: InitialStateType = initialState, action: ProfileActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'profile/SET-INFORMATION-ABOUT-USER':\r\n            return {...state, informationAboutUser: action.data}\r\n        case \"profile/SET-UPDATED-USER\":\r\n            return {...state, informationAboutUser: action.updatedUser}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setInformationAboutUserAC = (data: LoginResponseType) =>\r\n    ({type: 'profile/SET-INFORMATION-ABOUT-USER', data} as const)\r\n\r\nexport const setUpdatedUserAC = (updatedUser: LoginResponseType) =>\r\n    ({type: 'profile/SET-UPDATED-USER', updatedUser} as const)\r\n\r\n\r\nexport const editUserProfileTC = (name: string, avatar: string): AppThunkType => (dispatch) => {\r\n    dispatch(setLoginLoading(true))\r\n    profileApi.editUserNameAvatar(name, avatar)\r\n        .then(res => {\r\n            dispatch(setUpdatedUserAC(res.data.updatedUser))\r\n        })\r\n        .catch(err => {\r\n            const error = err.response\r\n                ?\r\n                err.response.data.error\r\n                :\r\n                (err.message + ', more details in the console')\r\n            console.log(`error: ${error}`)\r\n        })\r\n        .finally(()=>{\r\n            dispatch(setLoginLoading(false))\r\n        })\r\n}\r\n\r\nexport type ProfileActionsType = ReturnType<typeof setInformationAboutUserAC | typeof setUpdatedUserAC>","import axios from 'axios'\r\n\r\nexport interface IRegisterData {\r\n  addedUser: {},\r\n  error?: string\r\n}\r\n\r\nconst instance = axios.create({\r\n  // baseURL: \"http://localhost:7542/2.0/\",\r\n  baseURL: 'https://neko-back.herokuapp.com/2.0',\r\n  withCredentials: true,\r\n\r\n})\r\n\r\nexport const ApiRegister = {\r\n  register(email: string, password: string) {\r\n    return instance.post<IRegisterData>(`auth/register`, {email, password})\r\n  },\r\n}\r\n","import { ApiRegister } from '../m3-dal/apiRegister'\r\nimport { AppThunkType } from './store'\r\n\r\nexport const REGISTER_LOADING = 'REGISTER/LOADING'\r\nexport const REGISTER_ERROR = 'REGISTER/ERROR'\r\nexport const REGISTER_SUCCESS = 'REGISTER/SUCCESS'\r\n\r\ntype InitialStateType = {\r\n  isRegistered: boolean,\r\n  error: string | null,\r\n  isFetching: boolean\r\n}\r\n\r\nexport const registerInitialState: InitialStateType = {\r\n  isRegistered: false,\r\n  error: null,\r\n  isFetching: false,\r\n}\r\n\r\n\r\nexport type RegisterActions = ReturnType<typeof setRegisterSuccess\r\n  | typeof setRegisterError\r\n  | typeof setRegisterLoading>;\r\n\r\nexport const setRegisterSuccess = (isRegistered: boolean) => {\r\n  return {\r\n    type: REGISTER_SUCCESS,\r\n    isRegistered,\r\n  } as const\r\n}\r\n\r\nexport const setRegisterError = (error: string | null) => {\r\n  return {\r\n    type: REGISTER_ERROR,\r\n    error,\r\n  } as const\r\n}\r\n\r\nexport const setRegisterLoading = (isFetching: boolean) => {\r\n  return {\r\n    type: REGISTER_LOADING,\r\n    isFetching,\r\n  } as const\r\n}\r\n\r\nexport const registerReducer = (state = registerInitialState, action: RegisterActions): InitialStateType => {\r\n  switch (action.type) {\r\n    case REGISTER_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        isRegistered: action.isRegistered,\r\n      }\r\n    }\r\n    case REGISTER_ERROR: {\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n      }\r\n    }\r\n    case REGISTER_LOADING: {\r\n      return {\r\n        ...state,\r\n        isFetching: action.isFetching,\r\n      }\r\n    }\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const register =\r\n  (email: string, password: string): AppThunkType => async (dispatch) => {\r\n    dispatch(setRegisterLoading(true))\r\n    try {\r\n      await ApiRegister.register(email, password)\r\n      dispatch(setRegisterSuccess(true))\r\n    } catch (e) {\r\n      const error = e.response.data.error\r\n      dispatch(setRegisterError(error))\r\n    }\r\n    finally {\r\n      dispatch(setRegisterLoading(false))\r\n    }\r\n  }","import {authAPI, LoginParamsType} from \"../m3-dal/apiLogin\";\r\nimport {setInformationAboutUserAC} from \"./profileReducer\";\r\nimport {AppThunkType} from \"./store\";\r\nimport {REGISTER_ERROR, REGISTER_LOADING} from \"./registerReducer\";\r\n\r\ntype InitialStateType = {\r\n    isFetching: boolean\r\n    isLoggedIn: boolean\r\n    error: string | null\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    isFetching: false,\r\n    isLoggedIn: false,\r\n    error: null\r\n}\r\n\r\n// actions\r\nexport const setIsLoggedInAC = (value: boolean) =>\r\n    ({type: 'login/SET-IS-LOGGED-IN', value} as const)\r\n\r\nexport const setIsLoggedOutAC = (value: boolean) =>\r\n    ({type: 'logout/SET-IS-LOGGED-OUT', value} as const)\r\n\r\nexport const setLoginError = (error: string | null) => {\r\n    return {\r\n        type: REGISTER_ERROR,\r\n        error,\r\n    } as const\r\n}\r\n\r\nexport const setLoginLoading = (isFetching: boolean) => {\r\n    return {\r\n        type: REGISTER_LOADING,\r\n        isFetching,\r\n    } as const\r\n}\r\n\r\n//reducer\r\n\r\nexport const authReducer = (state: InitialStateType = initialState, action: AuthActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'login/SET-IS-LOGGED-IN':\r\n        case 'logout/SET-IS-LOGGED-OUT':\r\n            return {...state, isLoggedIn: action.value}\r\n        case \"REGISTER/ERROR\":\r\n            return {...state, error: action.error}\r\n        case \"REGISTER/LOADING\":\r\n            return {...state, isFetching: action.isFetching}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// thunks\r\nexport const loginTC = (data: LoginParamsType): AppThunkType => (dispatch) => {\r\n    dispatch(setLoginLoading(true))\r\n    authAPI.login(data)\r\n        .then(res => {\r\n            dispatch(setInformationAboutUserAC(res.data))\r\n            dispatch(setIsLoggedInAC(true))\r\n        })\r\n        .catch((e) => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.messages + ', more details in the console')\r\n            dispatch(setLoginError(error))\r\n        })\r\n        .finally(() => {\r\n            dispatch(setLoginLoading(false))\r\n        })\r\n}\r\n\r\nexport const logoutTC = (): AppThunkType => (dispatch) => {\r\n    dispatch(setLoginLoading(true))\r\n    authAPI.logout()\r\n        .then(res => {\r\n            dispatch(setIsLoggedOutAC(false))\r\n        })\r\n        .catch((e) => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.messages + ', more details in the console')\r\n        })\r\n        .finally(() => {\r\n            dispatch(setLoginLoading(false))\r\n        })\r\n}\r\n\r\nexport const isLoggedInApp = (): AppThunkType => (dispatch) => {\r\n    dispatch(setLoginLoading(true))\r\n    authAPI.isAuthorized()\r\n        .then(res => {\r\n            dispatch(setInformationAboutUserAC(res.data))\r\n            dispatch(setIsLoggedInAC(true))\r\n        })\r\n        .catch((e) => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.messages + ', more details in the console')\r\n            dispatch(setLoginError(error))\r\n        })\r\n        .finally(() => {\r\n            dispatch(setLoginLoading(false))\r\n        })\r\n}\r\n\r\nexport type AuthActionsType = ReturnType<typeof setIsLoggedInAC\r\n    | typeof setInformationAboutUserAC\r\n    | typeof setIsLoggedOutAC\r\n    | typeof setLoginError\r\n    | typeof setLoginLoading\r\n    > // изменили запись в одну строчку !!","import axios from 'axios'\r\n\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    // baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true\r\n})\r\n\r\n//api types\r\n\r\nexport type DefaultResponseType = {\r\n    info: string\r\n    error: string | null\r\n}\r\n\r\nlet backGroundColor = \"linear-gradient(180deg, #E6D4DE 0%, #9890C7 100%)\"\r\n\r\nexport const authApi = {\r\n    restorePassword(email: string) {\r\n        return axiosInstance.post<DefaultResponseType>('/auth/forgot', {\r\n            email,\r\n            message: `<div style='background: ${backGroundColor}; padding: 15px'>\r\n                      <p>To restore your password, follow the link below</p>\r\n                      <a href='https://georgeusynin.github.io/cards-react-redux/#/new_password/$token$'>Restore link</a>\r\n                      </div>`\r\n        })\r\n    },\r\n    setNewPassword(password: string, resetPasswordToken: string) {\r\n        return axiosInstance.post<DefaultResponseType>('/auth/set-new-password', {\r\n            password,\r\n            resetPasswordToken\r\n        })\r\n    }\r\n}","//types\r\n\r\nimport {AppThunkType} from \"./store\";\r\nimport {authApi} from \"../m3-dal/apiRestore\";\r\n\r\ntype InitialStateType = {\r\n    showEmailCheck: boolean\r\n    error: string | null\r\n    isNewPasswordCreated: boolean\r\n    isFetching: boolean\r\n}\r\n\r\nexport type RestorePasswordActionsType =\r\n\r\n    | ReturnType<typeof setShowEmailCheck>\r\n    | ReturnType<typeof setRestorePasswordError>\r\n    | ReturnType<typeof setIsNewPasswordCreated>\r\n    | ReturnType<typeof setRestorePasswordLoading>\r\n\r\n//actions\r\n\r\nexport const setShowEmailCheck = (showEmailCheck: boolean) => {\r\n    return {\r\n        type: 'cards/restorePassword/setShowEmailCheck',\r\n        payload: {\r\n            showEmailCheck\r\n        }\r\n    } as const\r\n}\r\n\r\nexport const setRestorePasswordError = (error: string | null) => {\r\n    return {\r\n        type: 'cards/restorePassword/setError',\r\n        payload: {\r\n            error\r\n        }\r\n    } as const\r\n}\r\nconst setIsNewPasswordCreated = (isNewPasswordCreated: boolean) => {\r\n    return {\r\n        type: 'cards/restorePassword/setIsNewPasswordCreated',\r\n        payload: {\r\n            isNewPasswordCreated\r\n        }\r\n    } as const\r\n}\r\n\r\nexport const setRestorePasswordLoading = (isFetching: boolean) => {\r\n    return {\r\n        type: 'cards/restorePassword/setRestorePasswordLoading',\r\n        payload: {\r\n            isFetching\r\n        }\r\n    } as const\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    showEmailCheck: false,\r\n    error: null,\r\n    isNewPasswordCreated: false,\r\n    isFetching: false\r\n}\r\n\r\nexport const restorePasswordReducer = (state: InitialStateType = initialState, action: RestorePasswordActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"cards/restorePassword/setShowEmailCheck\":\r\n        case \"cards/restorePassword/setError\":\r\n        case \"cards/restorePassword/setIsNewPasswordCreated\":\r\n        case 'cards/restorePassword/setRestorePasswordLoading':\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\n//thunk\r\n\r\nexport const restorePassword = (email: string): AppThunkType => (dispatch) => {\r\n    dispatch(setRestorePasswordLoading(true))\r\n    authApi.restorePassword(email)\r\n        .then(res => {\r\n            dispatch(setShowEmailCheck(true))\r\n        })\r\n        .catch(err => {\r\n            const error = err.response\r\n                ?\r\n                err.response.data.error\r\n                :\r\n                (err.message + ', more details in the console')\r\n            dispatch(setRestorePasswordError(error))\r\n        })\r\n        .finally(()=>{\r\n            dispatch(setRestorePasswordLoading(false))\r\n        })\r\n}\r\n\r\nexport const setNewPassword = (password: string, resetPasswordToken: string): AppThunkType => (dispatch) => {\r\n    dispatch(setRestorePasswordLoading(true))\r\n    authApi.setNewPassword(password, resetPasswordToken)\r\n        .then(res => {\r\n            debugger\r\n            dispatch(setIsNewPasswordCreated(true))\r\n        })\r\n        .catch(err => {\r\n            const error = err.response\r\n                ?\r\n                err.response.data.error\r\n                :\r\n                (err.message + ', more details in the console')\r\n            dispatch(setRestorePasswordError(error))\r\n        })\r\n        .finally(()=>{\r\n            dispatch(setRestorePasswordLoading(false))\r\n        })\r\n}","import axios from 'axios'\r\nimport {CardPackType} from \"../m2-bll/packsReducer\";\r\n\r\n\r\nexport type PacksResponseType = {\r\n    cardPacks: Array<CardPackType>\r\n    cardPacksTotalCount: number\r\n    maxCardsCount: number\r\n    minCardsCount: number\r\n    page: number\r\n    pageCount: number\r\n    token: string\r\n    tokenDeathTime: number\r\n}\r\n\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    // baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true\r\n})\r\n\r\nexport const packsApi = {\r\n    getPacks(packName?: string, min?: number, max?: number, sortPacks?: string, page?: number, pageCount?: number, user_id?: string) {\r\n        return axiosInstance.get<PacksResponseType>(\"/cards/pack\", {\r\n            params: {\r\n                packName,\r\n                min,\r\n                max,\r\n                sortPacks,\r\n                page,\r\n                pageCount,\r\n                user_id\r\n            }\r\n        }).then(res => res.data)\r\n    },\r\n    createNewPack(name: string, isPrivate: boolean = false) {\r\n        return axiosInstance.post<CardPackType>(\"cards/pack\", {\r\n            cardsPack: {\r\n                name,\r\n                isPrivate\r\n            }\r\n        })\r\n    },\r\n    deletePack(packId: string) {\r\n        return axiosInstance.delete<CardPackType>(`cards/pack?id=${packId}`)\r\n    }\r\n}","import {AppThunkType} from \"./store\";\r\nimport {packsApi, PacksResponseType} from \"../m3-dal/apiPacks\";\r\nimport {UpdatedDirectionType} from \"../m1-ui/PacksList/TablePacks/TableHeader/TableHeader\";\r\n\r\nexport type CardPackType = {\r\n    _id: string\r\n    user_id: string\r\n    name: string\r\n    cardsCount: number\r\n    created: string\r\n    updated: string\r\n}\r\n\r\ntype PackRequestParameters = {\r\n    packName: string\r\n    maxCardsCount: number\r\n    minCardsCount: number\r\n    sortPacks: UpdatedDirectionType\r\n    pageCount: number\r\n    page: number\r\n    user_id: string\r\n}\r\n\r\ntype InitialStateType = {\r\n    cardPacks: Array<CardPackType>\r\n    cardPacksRequestParameters: PackRequestParameters\r\n    cardPacksTotalCount: number\r\n    isFetching: boolean\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    cardPacks: [],\r\n    cardPacksRequestParameters: {\r\n        page: 1,\r\n        pageCount: 6,\r\n        maxCardsCount: 0,\r\n        minCardsCount: 0,\r\n        sortPacks: \"0updated\",\r\n        packName: \"\",\r\n        user_id: \"\"\r\n    },\r\n    cardPacksTotalCount: 0,\r\n    isFetching: false\r\n}\r\n\r\n//actions\r\n\r\nexport const setSearchName = (requestedName: string) =>\r\n    ({type: 'packs/SET-SEARCH-NAME', requestedName} as const)\r\n\r\nexport const setCurrentPage = (requestedPage: number) =>\r\n    ({type: 'packs/SET-CURRENT-PAGE', requestedPage} as const)\r\n\r\nexport const setUpdatedDirection = (direction: UpdatedDirectionType) =>\r\n    ({type: 'packs/SET-UPDATED-DIRECTION', direction} as const)\r\n\r\nconst setDataPacks = (dataPacks: PacksResponseType) =>\r\n    ({type: 'packs/SET-PACKS', dataPacks} as const)\r\n\r\nconst setLoadingPacks = (isFetching: boolean) =>\r\n    ({type: 'packs/SET-LOADING-PACKS', isFetching} as const)\r\n\r\nexport const setUserId = (userId: string) =>\r\n    ({type: 'packs/SET-USER-ID', userId} as const)\r\n\r\nexport const setPageCount = (count: number) =>\r\n    ({type: 'packs/SET-PAGE-COUNT', count} as const)\r\n\r\nexport const setRangeSort = (range: number[]) =>\r\n    ({type: 'packs/SET-RANGE-SORT', range} as const)\r\n\r\n\r\nexport const packsReducer = (state: InitialStateType = initialState, action: PacksActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"packs/SET-PACKS\":\r\n            return {...state, ...action.dataPacks}\r\n        case \"packs/SET-USER-ID\":\r\n            return {...state, cardPacksRequestParameters: {...state.cardPacksRequestParameters, user_id: action.userId}}\r\n        case \"packs/SET-SEARCH-NAME\":\r\n            return {\r\n                ...state,\r\n                cardPacksRequestParameters: {...state.cardPacksRequestParameters, packName: action.requestedName}\r\n            }\r\n        case \"packs/SET-CURRENT-PAGE\":\r\n            return {\r\n                ...state,\r\n                cardPacksRequestParameters: {...state.cardPacksRequestParameters, page: action.requestedPage}\r\n            }\r\n        case \"packs/SET-UPDATED-DIRECTION\":\r\n            return {\r\n                ...state,\r\n                cardPacksRequestParameters: {...state.cardPacksRequestParameters, sortPacks: action.direction}\r\n            }\r\n        case \"packs/SET-PAGE-COUNT\":\r\n            return {\r\n                ...state,\r\n                cardPacksRequestParameters: {...state.cardPacksRequestParameters, pageCount: action.count}\r\n            }\r\n        case \"packs/SET-RANGE-SORT\":\r\n            return {\r\n                ...state,\r\n                cardPacksRequestParameters: {\r\n                    ...state.cardPacksRequestParameters,\r\n                    minCardsCount: action.range[0],\r\n                    maxCardsCount: action.range[1]\r\n                }\r\n            }\r\n        case \"packs/SET-LOADING-PACKS\":\r\n            return {...state, isFetching: action.isFetching}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//thunks\r\n\r\nexport const getDataPacks = (): AppThunkType => async (dispatch, getState) => {\r\n    try {\r\n\r\n        const {\r\n            packName,\r\n            minCardsCount,\r\n            maxCardsCount,\r\n            sortPacks,\r\n            page,\r\n            pageCount,\r\n            user_id\r\n        } = getState().packs.cardPacksRequestParameters\r\n        dispatch(setLoadingPacks(true))\r\n        const packs = await packsApi.getPacks(packName, minCardsCount, maxCardsCount, sortPacks, page, pageCount, user_id)\r\n        dispatch(setDataPacks(packs))\r\n    } catch (e) {\r\n        console.log(e)\r\n    } finally {\r\n        dispatch(setLoadingPacks(false))\r\n    }\r\n}\r\n\r\nexport const createNewPack = (name: string, isPrivate?: boolean): AppThunkType => async (dispatch) => {\r\n    try {\r\n        dispatch(setLoadingPacks(true))\r\n        await packsApi.createNewPack(name, isPrivate)\r\n        dispatch(getDataPacks())\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const deletePack = (packId: string): AppThunkType => async (dispatch) => {\r\n    try {\r\n        dispatch(setLoadingPacks(true))\r\n        await packsApi.deletePack(packId)\r\n        dispatch(getDataPacks())\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\n\r\nexport type PacksActionType = ReturnType<typeof setSearchName\r\n    | typeof setDataPacks\r\n    | typeof setLoadingPacks\r\n    | typeof setCurrentPage\r\n    | typeof setUserId\r\n    | typeof setUpdatedDirection\r\n    | typeof setPageCount\r\n    | typeof setRangeSort>","import {applyMiddleware} from \"redux\";\r\nimport {combineReducers, createStore} from \"redux\";\r\nimport thunk, {ThunkAction} from \"redux-thunk\";\r\nimport {AuthActionsType, authReducer} from \"./authReducer\";\r\nimport {ProfileActionsType, profileReducer} from \"./profileReducer\";\r\nimport {RegisterActions, registerReducer} from './registerReducer'\r\nimport {RestorePasswordActionsType, restorePasswordReducer} from \"./restorePasswordReducer\";\r\nimport {PacksActionType, packsReducer} from \"./packsReducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    profile: profileReducer,\r\n    restorePassword: restorePasswordReducer,\r\n    register: registerReducer,\r\n    packs: packsReducer\r\n})\r\n\r\nexport type AppActionsType = RestorePasswordActionsType | RegisterActions | AuthActionsType | ProfileActionsType | PacksActionType\r\n\r\nexport type AppThunkType<ReturnType = void> = ThunkAction<ReturnType, AppRootStateType, unknown, AppActionsType>\r\n\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n\r\n//@ts-ignore\r\nwindow.store = store","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport cls from './Header.module.scss'\r\n\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div className={cls.header}>\r\n            <NavLink to={'/login'}>Login</NavLink>\r\n            <NavLink to={'/registration'}>Registration</NavLink>\r\n            <NavLink replace to={'/profile'}>Profile</NavLink>\r\n            <NavLink to={'/404'}>404</NavLink>\r\n            <NavLink to={'/restore_password'}>Restore password</NavLink>\r\n            <NavLink to={'/new_password'}>New password</NavLink>\r\n            <NavLink to={'/test_components'}>Test components</NavLink>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.scss'\r\nimport {debuglog} from \"util\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: (e: KeyboardEvent<HTMLInputElement>) => void\r\n    error?: Array<string | null>\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    },\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e)\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter(e) // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={type}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && error.map(err => {\r\n                return <div className={finalSpanClassName}>{err}</div>\r\n            })}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red,\r\n        className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","export default __webpack_public_path__ + \"static/media/eye.109a1739.svg\";","export default __webpack_public_path__ + \"static/media/closedEye.41390b0c.svg\";","import React from \"react\";\r\nimport cls from \"./Preloader.module.scss\"\r\n\r\nexport const Preloader = () => {\r\n    return (\r\n        <div className={cls.loader}></div>\r\n    )\r\n}","import React, {useState} from 'react'\r\nimport cls from './Login.module.scss'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../m2-bll/store\";\r\nimport {NavLink, Redirect} from 'react-router-dom';\r\nimport SuperInputText from \"../common/SuperInput/SuperInputText\";\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport eye from '../../../assets/images/eye.svg'\r\nimport {InputTypeType} from \"../NewPassword/NewPassword\";\r\nimport closedEye from \"../../../assets/images/closedEye.svg\";\r\nimport {PATH} from \"../../App\";\r\nimport {useFormik} from \"formik\";\r\nimport {loginTC, setLoginError} from \"../../m2-bll/authReducer\";\r\nimport {Preloader} from \"../common/preloader/Preloader\";\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    rememberMe?: boolean\r\n}\r\n\r\nexport const Login = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const error = useSelector<AppRootStateType, string | null>(state => state.auth.error)\r\n\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn)\r\n\r\n    const isFetching = useSelector<AppRootStateType, boolean>(state => state.auth.isFetching)\r\n\r\n    const [type, setType] = useState<InputTypeType>(\"password\")\r\n\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {}\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            if (!values.password) {\r\n                errors.password = 'Required';\r\n            } else if (values.password.length < 8) {\r\n                errors.password = 'Password must contain from 8 to 15 characters';\r\n            } else if (values.password.length > 15) {\r\n                errors.password = 'Password must contain from 8 to 15 characters';\r\n            }\r\n            return errors\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(loginTC(values))\r\n        }\r\n    })\r\n\r\n    const changeTypeHandler = () => {\r\n        type === 'text' ? setType('password') : setType('text')\r\n    }\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to={PATH.PROFILE}/>\r\n    }\r\n\r\n    return (\r\n        <div className={cls.loginContainer}>\r\n            {\r\n                isFetching\r\n                    ?\r\n                    <Preloader/>\r\n                    :\r\n                    <div className={cls.card}>\r\n                        <h2 className={cls.title}>It-incubator</h2>\r\n                        <h3 className={cls.subtitle}>Sign In</h3>\r\n                        <form onSubmit={formik.handleSubmit}>\r\n                            <label>\r\n                                <p className={cls.titleEmail}>Email</p>\r\n                                <div className={cls.inputContainer}>\r\n                                    <SuperInputText\r\n                                        {...formik.getFieldProps('email')}\r\n                                        className={cls.inputEmailPassword}\r\n                                        type={\"text\"}\r\n                                        onClick={() => dispatch(setLoginError(null))}\r\n                                        // name={'email'}\r\n                                        // onChange={formik.handleChange}\r\n                                        // onBlur={formik.handleBlur}\r\n                                        // value={formik.values.email}\r\n                                    />\r\n                                    {\r\n                                        formik.touched.email &&\r\n                                        formik.errors.email ? <div style={{color: 'red'}}>{formik.errors.email}</div> :\r\n                                            <div style={{color: 'red'}}>{error?.match(/user/) ? error : ''}</div>\r\n                                    }\r\n                                </div>\r\n                            </label>\r\n                            <label>\r\n                                <p className={cls.titlePassword}>Password</p>\r\n                                <div className={cls.inputContainer}>\r\n                                    <div className={cls.eye} onClick={changeTypeHandler}><img\r\n                                        src={type === 'password' ? closedEye : eye} alt=\"eye\"/></div>\r\n                                    <SuperInputText\r\n                                        {...formik.getFieldProps('password')}\r\n                                        className={cls.inputEmailPassword}\r\n                                        onClick={() => dispatch(setLoginError(null))}\r\n                                        type={type}\r\n                                        // name={'password'}\r\n                                        // onBlur={formik.handleBlur}\r\n                                        // onChange={formik.handleChange}\r\n                                        // value={formik.values.password}\r\n                                    />\r\n                                    {formik.touched.password && formik.errors.password ?\r\n                                        <div style={{color: 'red'}}>{formik.errors.password}</div> :\r\n                                        <div style={{color: 'red'}}>{error?.match(/password/) ? error : ''}</div>\r\n                                    }\r\n                                </div>\r\n                            </label>\r\n                            <div className={cls.checkbox}>\r\n                                <label>\r\n                                    <SuperInputText\r\n                                        {...formik.getFieldProps('rememberMe')}\r\n                                        type={'checkbox'}\r\n                                        // name={'rememberMe'}\r\n                                        // onChange={formik.handleChange}\r\n                                        // checked={formik.values.rememberMe}\r\n                                    />\r\n                                    <span className={cls.rememberMe}>Remember me</span>\r\n                                </label>\r\n                            </div>\r\n                            <NavLink to={'/restore_password'} className={cls.restorePassword}>Forgot Password</NavLink>\r\n                            <div className={cls.buttonContainer}>\r\n                                <SuperButton className={cls.button} type={'submit'}><span>Login</span></SuperButton>\r\n                            </div>\r\n                        </form>\r\n                        <p className={cls.newAccount}>Don't have an account</p>\r\n                        <div className={cls.signUp}>\r\n                            <NavLink to={'/registration'}>Sign Up</NavLink>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/avatar.e5117e8e.png\";","import React from \"react\";\r\nimport cls from \"./UserInfo.module.scss\"\r\nimport defaultAvatar from \"../../../../assets/images/avatar.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\ntype UserInfoType = {\r\n    avatar?: string\r\n    name: string\r\n}\r\n\r\nexport const UserInfo: React.FC<UserInfoType> = ({avatar, name}) => {\r\n    return (\r\n        <div className={cls.infoUser}>\r\n            <img className={cls.userPhoto} src={avatar ? avatar : defaultAvatar} alt={\"\"}/>\r\n            <p className={cls.userName}>{name}</p>\r\n            <div className={cls.editProfileWrapper}>\r\n                <NavLink to={'/information_about_user'}>Edit\r\n                    profile</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport cls from \"./UserInfoCards.module.scss\";\r\n\r\ntype UserInfoCardsType = {\r\n    publicCardPacksCount: number\r\n}\r\n\r\nexport const UserInfoCards: React.FC<UserInfoCardsType> = ({publicCardPacksCount}) => {\r\n    return (\r\n        <div className={cls.infoUserCards}>\r\n            <p className={cls.userCards}>Number of cards: {publicCardPacksCount}</p>\r\n        </div>\r\n    )\r\n}","import React, {useEffect} from 'react'\r\nimport cls from './Profile.module.scss'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../m2-bll/store\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport {isLoggedInApp} from \"../../m2-bll/authReducer\";\r\nimport {UserInfo} from \"./UserInfo/UserInfo\";\r\nimport {UserInfoCards} from \"./UserInfoCards/UserInfoCards\";\r\nimport {Preloader} from \"../common/preloader/Preloader\";\r\nimport {PATH} from \"../../App\";\r\n\r\n\r\nexport const Profile = () => {\r\n\r\n    debugger\r\n    const dispatch = useDispatch()\r\n\r\n    const isFetching = useSelector<AppRootStateType, boolean>(state => state.auth.isFetching) //isFetching from AUTH reducer!!!\r\n    const error = useSelector<AppRootStateType, string | null>(state => state.auth.error)\r\n\r\n    const avatar = useSelector<AppRootStateType, string>(state => state.profile.informationAboutUser.avatar)\r\n    const name = useSelector<AppRootStateType, string>(state => state.profile.informationAboutUser.name)\r\n    const publicCardPacksCount = useSelector<AppRootStateType, number>(state => state.profile.informationAboutUser.publicCardPacksCount)\r\n    const id = useSelector<AppRootStateType, string>(state => state.profile.informationAboutUser._id)\r\n\r\n    useEffect(() => {\r\n        if (!id) {\r\n            dispatch(isLoggedInApp())\r\n        }\r\n    }, [id, dispatch])\r\n\r\n    if (error) {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n\r\n    return (\r\n        isFetching\r\n            ?\r\n            <Preloader/>\r\n            :\r\n            <div className={cls.profileContainer}>\r\n                <div className={cls.card}>\r\n                    <div className={cls.info}>\r\n                        <UserInfo avatar={avatar} name={name}/>\r\n                        <UserInfoCards publicCardPacksCount={publicCardPacksCount}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    )\r\n}","import React from 'react'\r\nimport cls from './PageNotFound.module.css'\r\n\r\n\r\nexport const PageNotFound = () => {\r\n    return (\r\n        <div className={cls.pageNotFoundContainer}>\r\n            <h1>PageNotFound</h1>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/letter.bc3a4042.svg\";","import React from 'react'\r\nimport cls from './CheckPassword.module.scss'\r\nimport letter from '../../../assets/images/letter.svg'\r\nimport { NavLink } from 'react-router-dom'\r\nimport {PATH} from \"../../App\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setShowEmailCheck} from \"../../m2-bll/restorePasswordReducer\";\r\n\r\ntype CheckPasswordType = {\r\n    email: string\r\n}\r\n\r\nexport const CheckPassword: React.FC<CheckPasswordType> = ({email}) => {\r\n\r\n   const dispatch = useDispatch()\r\n\r\n    return (\r\n        <div className={cls.checkPasswordContainer}>\r\n            <div className={cls.card}>\r\n                <h2 className={cls.title}>It-incubator</h2>\r\n\r\n                <div className={cls.imgContainer}>\r\n                    <img src={letter} alt=\"\"/>\r\n                </div>\r\n\r\n                <h3 className={cls.subtitle}>Check email</h3>\r\n\r\n                <p className={cls.firstNote}>{`We've sent an Email with instructions to `}<span>{email}</span></p>\r\n                <p className={cls.secondNote}><NavLink to={PATH.LOGIN} onClick={()=>dispatch(setShowEmailCheck(false))}>Try logging in</NavLink> again when you change your password</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport cls from './RestorePassword.module.scss'\r\nimport SuperInputText from \"../common/SuperInput/SuperInputText\";\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../m2-bll/store\";\r\nimport {CheckPassword} from \"../CheckPassword/CheckPassword\";\r\nimport {restorePassword, setRestorePasswordError} from \"../../m2-bll/restorePasswordReducer\";\r\nimport {useFormik} from \"formik\";\r\nimport {Preloader} from \"../common/preloader/Preloader\";\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n}\r\n\r\nexport const RestorePassword = () => {\r\n\r\n    const showEmailCheck = useSelector<AppRootStateType, boolean>(state => state.restorePassword.showEmailCheck)\r\n\r\n    const error = useSelector<AppRootStateType, null | string>(state => state.restorePassword.error)\r\n\r\n    const isFetching = useSelector<AppRootStateType, boolean>(state => state.restorePassword.isFetching)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: ''\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {}\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            return errors\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(restorePassword(values.email))\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className={cls.restorePasswordContainer}>\r\n            {\r\n                isFetching\r\n                    ?\r\n                    <Preloader/>\r\n                    :\r\n                    showEmailCheck\r\n                        ?\r\n                        <CheckPassword email={formik.values.email}/>\r\n                        :\r\n                        <div className={cls.card}>\r\n                            <h2 className={cls.title}>It-incubator</h2>\r\n                            <h3 className={cls.subtitle}>Forgot your password?</h3>\r\n                            <form onSubmit={formik.handleSubmit}>\r\n                                <div className={cls.inputContainer}>\r\n                                    <SuperInputText\r\n                                        {...formik.getFieldProps('email')}\r\n                                        className={cls.inputEmail}\r\n                                        type={\"text\"}\r\n                                        placeholder={'Email'}\r\n                                        onClick={() => dispatch(setRestorePasswordError(null))}\r\n                                        // name={'email'}\r\n                                        // onChange={formik.handleChange}\r\n                                        // onBlur={formik.handleBlur}\r\n                                        // value={formik.values.email}\r\n                                    />\r\n                                    {\r\n                                        formik.touched.email &&\r\n                                        formik.errors.email ? <div style={{color: 'red'}}>{formik.errors.email}</div> :\r\n                                            <div style={{color: 'red'}}>{error}</div>\r\n                                    }\r\n                                </div>\r\n                                <p className={cls.firstNote}>Enter your email address and we will send\r\n                                    you further\r\n                                    instructions</p>\r\n                                <div className={cls.buttonContainer}>\r\n                                    <SuperButton className={cls.button}\r\n                                                 type={'submit'}><span>Send Instructions</span></SuperButton>\r\n                                </div>\r\n                            </form>\r\n                            <p className={cls.secondNote}>Did you remember your password?</p>\r\n                            <div className={cls.reLogin}>\r\n                                <NavLink to={'/login'}>Try logging in</NavLink>\r\n                            </div>\r\n                        </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport {Redirect, useParams} from 'react-router-dom'\r\nimport cls from './NewPassword.module.scss'\r\nimport SuperInputText from \"../common/SuperInput/SuperInputText\";\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../m2-bll/store\";\r\nimport {restorePassword, setNewPassword, setRestorePasswordError} from \"../../m2-bll/restorePasswordReducer\";\r\nimport eye from \"../../../assets/images/eye.svg\";\r\nimport closedEye from \"../../../assets/images/closedEye.svg\";\r\nimport {PATH} from \"../../App\";\r\nimport {useFormik} from \"formik\";\r\nimport {setLoginError} from \"../../m2-bll/authReducer\";\r\nimport {Preloader} from \"../common/preloader/Preloader\";\r\n\r\nexport type InputTypeType = \"password\" | \"text\" | \"checkbox\"\r\n\r\n\r\ntype FormikErrorType = {\r\n    password?: string\r\n}\r\n\r\nexport const NewPassword = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [type, setType] = useState<InputTypeType>(\"password\")\r\n\r\n    const isNewPasswordCreated = useSelector<AppRootStateType, boolean>(state => state.restorePassword.isNewPasswordCreated)\r\n\r\n    const isFetching = useSelector<AppRootStateType, boolean>(state => state.restorePassword.isFetching)\r\n\r\n    const error = useSelector<AppRootStateType,string | null>(state=>state.restorePassword.error)\r\n\r\n    const {token} = useParams<{ token: string }>();\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            password: ''\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {}\r\n            if (!values.password) {\r\n                errors.password = 'Required';\r\n            } else if (values.password.length < 8) {\r\n                errors.password = 'Password must contain from 8 to 15 characters';\r\n            } else if (values.password.length > 15) {\r\n                errors.password = 'Password must contain from 8 to 15 characters';\r\n            }\r\n            return errors\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(setNewPassword(values.password, token))\r\n        }\r\n    })\r\n\r\n    const changeTypeHandler = () => {\r\n        type === 'text' ? setType('password') : setType('text')\r\n    }\r\n\r\n    if (isNewPasswordCreated) {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n\r\n    return (\r\n        <div className={cls.newPasswordContainer}>\r\n            {\r\n                isFetching\r\n                    ?\r\n                    <Preloader/>\r\n                    :\r\n                    <div className={cls.card}>\r\n                        <h2 className={cls.title}>It-incubator</h2>\r\n                        <h3 className={cls.subtitle}>Create new Password</h3>\r\n                        <form onSubmit={formik.handleSubmit}>\r\n                            <div className={cls.inputContainer}>\r\n                                <div className={cls.eye} onClick={changeTypeHandler}><img\r\n                                    src={type === 'password' ? closedEye : eye} alt=\"eye\"/></div>\r\n                                <SuperInputText\r\n                                    {...formik.getFieldProps('password')}\r\n                                    className={cls.inputPassword}\r\n                                    onClick={() => dispatch(setRestorePasswordError(null))}\r\n                                    type={type}\r\n                                    placeholder={'Password'}\r\n                                    // name={'password'}\r\n                                    // onBlur={formik.handleBlur}\r\n                                    // onChange={formik.handleChange}\r\n                                    // value={formik.values.password}\r\n                                />\r\n                                {formik.touched.password && formik.errors.password ?\r\n                                    <div style={{color: 'red'}}>{formik.errors.password}</div> : <div style={{color: 'red', margin:'0px 30px'}}>{error}</div>\r\n                                }\r\n                            </div>\r\n                            <p className={cls.note}>Create new password and press the button below</p>\r\n\r\n                            <div className={cls.buttonContainer}>\r\n                                <SuperButton\r\n                                    className={cls.button}\r\n                                    type={'submit'}\r\n                                >\r\n                                    <span>Create</span>\r\n                                </SuperButton>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React from \"react\";\r\nimport cls from './TestComponents.module.css'\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport SuperInputText from \"../common/SuperInput/SuperInputText\";\r\nimport SuperCheckbox from \"../common/SuperCheckbox/SuperCheckbox\";\r\n\r\nexport const TestComponents = () => {\r\n    return (\r\n        <div className={cls.testComponentsContainer}>\r\n            <h1>Common components</h1>\r\n            <div className={cls.componentsContainer}>\r\n                <div>\r\n                    <h2>Button</h2>\r\n                    <SuperButton>\r\n                        Button\r\n                    </SuperButton>\r\n                </div>\r\n                <div>\r\n                    <h2>Input Text</h2>\r\n                    <SuperInputText/>\r\n                </div>\r\n                <div>\r\n                    <h2>CheckBox</h2>\r\n                    <SuperCheckbox/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useEffect, useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport cls from './PersonalInfo.module.scss'\r\nimport {editUserProfileTC} from \"../../../m2-bll/profileReducer\";\r\nimport {PATH} from \"../../../App\";\r\nimport {AppRootStateType} from \"../../../m2-bll/store\";\r\nimport defaultAvatar from '../../../../assets/images/avatar.png'\r\nimport SuperInputText from \"../../common/SuperInput/SuperInputText\";\r\nimport {isLoggedInApp} from \"../../../m2-bll/authReducer\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport {Preloader} from \"../../common/preloader/Preloader\";\r\n\r\n\r\nexport const PersonalInfo: React.FC = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const id = useSelector<AppRootStateType, string>(state => state.profile.informationAboutUser._id)\r\n    const name = useSelector<AppRootStateType, string>(state => state.profile.informationAboutUser.name)\r\n    const avatar = useSelector<AppRootStateType, string>(state => state.profile.informationAboutUser.avatar)\r\n\r\n    const error = useSelector<AppRootStateType, string | null>(state => state.auth.error)\r\n    const isFetching = useSelector<AppRootStateType, boolean>(state => state.auth.isFetching)\r\n\r\n    useEffect(() => {\r\n        if (!id) {\r\n            dispatch(isLoggedInApp())\r\n        }\r\n    }, [id])\r\n\r\n    let [ava, setAva] = useState<string>('')\r\n    let [nickname, setNickname] = useState<string>(name)\r\n\r\n    const cancelHandler = () => {\r\n        debugger\r\n        return <Redirect to={PATH.PROFILE}/>\r\n    }\r\n    const saveHandler = () => {\r\n        dispatch(editUserProfileTC(nickname, ava))\r\n        return <Redirect to={PATH.PROFILE}/>\r\n    }\r\n\r\n    if (error) {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n\r\n    return (\r\n        isFetching\r\n            ?\r\n            <Preloader/>\r\n            :\r\n            <div className={cls.infoContainer}>\r\n                <div className={cls.card}>\r\n                    <h2 className={cls.title}>Personal Inforamtion</h2>\r\n                    <div className={cls.imgWrapper}>\r\n                        <img src={avatar ? avatar : defaultAvatar} alt='profile_photo'/>\r\n                    </div>\r\n                    <label>\r\n                        <p className={cls.titleEmail}>Nickname</p>\r\n                        <div className={cls.inputContainer}>\r\n                            <SuperInputText\r\n                                className={cls.inputNicknameAvatar}\r\n                                value={nickname}\r\n                                type={\"text\"}\r\n                                onChangeText={setNickname}\r\n                                // error={errorEmail}\r\n                            />\r\n                        </div>\r\n                    </label>\r\n                    <label>\r\n                        <p className={cls.titleEmail}>Avatar</p>\r\n                        <div className={cls.inputContainer}>\r\n                            <SuperInputText\r\n                                className={cls.inputNicknameAvatar}\r\n                                value={ava}\r\n                                type={\"text\"}\r\n                                onChangeText={setAva}\r\n                                // error={errorEmail}\r\n                            />\r\n                        </div>\r\n                    </label>\r\n                    <div className={cls.buttonContainer}>\r\n                        <button\r\n                            className={cls.cancelButton}\r\n                            onClick={cancelHandler}>\r\n                            <span>Cancel</span>\r\n                        </button>\r\n                        <button\r\n                            className={cls.registerButton}\r\n                            onClick={saveHandler}\r\n                        >\r\n                            <span>Save</span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    )\r\n}","import React, {useState} from 'react'\r\nimport cls from './Register.module.scss'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {register, setRegisterError} from '../../m2-bll/registerReducer'\r\nimport {AppRootStateType} from '../../m2-bll/store'\r\nimport SuperInputText from '../common/SuperInput/SuperInputText'\r\nimport {Redirect} from \"react-router\";\r\nimport eye from \"../../../assets/images/eye.svg\";\r\nimport {InputTypeType} from \"../NewPassword/NewPassword\";\r\nimport closedEye from \"../../../assets/images/closedEye.svg\";\r\nimport {PATH} from \"../../App\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {useFormik} from \"formik\";\r\nimport {Preloader} from \"../common/preloader/Preloader\";\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    confirmPassword?: string\r\n}\r\n\r\nexport const Register: React.FC = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: ''\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            if (!values.password) {\r\n                errors.password = 'Required';\r\n            } else if (values.password.length < 8) {\r\n                errors.password = 'Password must contain from 8 to 15 characters';\r\n            } else if (values.password.length > 15) {\r\n                errors.password = 'Password must contain from 8 to 15 characters';\r\n            }\r\n            if (!values.confirmPassword) {\r\n                errors.confirmPassword = 'Required';\r\n            } else if (values.password.length !== values.confirmPassword.length) {\r\n                errors.confirmPassword = \"Passwords don't match\";\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(register(values.email, values.password))\r\n        }\r\n    })\r\n\r\n    const error = useSelector<AppRootStateType, string | null>(state => state.register.error)\r\n    const isFetching = useSelector<AppRootStateType, boolean>(state => state.register.isFetching)\r\n    const isRegistered = useSelector<AppRootStateType, boolean>(state => state.register.isRegistered)\r\n\r\n    const history = useHistory()\r\n\r\n    const [type, setType] = useState<InputTypeType>(\"password\")\r\n\r\n    const cancelHandler = () => {\r\n        history.push(PATH.LOGIN)\r\n    }\r\n\r\n    const changeTypeHandler = () => {\r\n        type === 'text' ? setType('password') : setType('text')\r\n    }\r\n\r\n\r\n    // redirect logic\r\n    if (isRegistered) return <Redirect to={PATH.LOGIN}/>\r\n\r\n    return (\r\n        <div className={cls.registrationContainer}>\r\n            {\r\n                isFetching\r\n                    ?\r\n                    <Preloader/>\r\n                    :\r\n                    <div className={cls.card}>\r\n                        <h2 className={cls.title}>IT-Incubator</h2>\r\n                        <h3 className={cls.subtitle}>Sign Up</h3>\r\n                        <form onSubmit={formik.handleSubmit}>\r\n                            <label>\r\n                                <p className={cls.titleEmail}>Email</p>\r\n                                <div className={cls.inputContainer}>\r\n                                    <SuperInputText\r\n                                        {...formik.getFieldProps('email')}\r\n                                        className={cls.inputEmailPassword}\r\n                                        type={\"text\"}\r\n                                        onClick={() => dispatch(setRegisterError(null))}\r\n                                        // name={'email'}\r\n                                        // onChange={formik.handleChange}\r\n                                        // onBlur={formik.handleBlur}\r\n                                        // value={formik.values.email}\r\n                                    />\r\n                                    {\r\n                                        formik.touched.email &&\r\n                                        formik.errors.email ? <div style={{color: 'red'}}>{formik.errors.email}</div> :\r\n                                            <div style={{color: 'red'}}>{error}</div>\r\n                                    }\r\n                                </div>\r\n                            </label>\r\n                            <label>\r\n                                <p className={cls.titlePassword}>Password</p>\r\n                                <div className={cls.inputContainer}>\r\n                                    <div className={cls.eye} onClick={changeTypeHandler}><img\r\n                                        src={type === 'password' ? closedEye : eye} alt=\"eye\"/></div>\r\n                                    <SuperInputText\r\n                                        {...formik.getFieldProps('password')}\r\n                                        className={cls.inputEmailPassword}\r\n                                        type={type}\r\n                                        // name={'password'}\r\n                                        // onBlur={formik.handleBlur}\r\n                                        // onChange={formik.handleChange}\r\n                                        // value={formik.values.password}\r\n                                    />\r\n                                    {formik.touched.password && formik.errors.password ?\r\n                                        <div style={{color: 'red'}}>{formik.errors.password}</div> : null\r\n                                    }\r\n                                </div>\r\n                            </label>\r\n                            <label>\r\n                                <p className={cls.titlePassword}>Confirm Password</p>\r\n                                <div className={cls.inputContainer}>\r\n                                    <div className={cls.eye} onClick={changeTypeHandler}><img\r\n                                        src={type === 'password' ? closedEye : eye} alt=\"eye\"/></div>\r\n                                    <SuperInputText\r\n                                        {...formik.getFieldProps('confirmPassword')}\r\n                                        className={cls.inputEmailPassword}\r\n                                        type={type}\r\n                                        // name={'confirmPassword'}\r\n                                        // onBlur={formik.handleBlur}\r\n                                        // onChange={formik.handleChange}\r\n                                        // value={formik.values.confirmPassword}\r\n                                    />\r\n                                    {formik.touched.confirmPassword && formik.errors.confirmPassword ?\r\n                                        <div style={{color: 'red'}}>{formik.errors.confirmPassword}</div> : null}\r\n                                </div>\r\n                            </label>\r\n\r\n                            <div className={cls.buttonContainer}>\r\n                                <button\r\n                                    className={cls.cancelButton}\r\n                                    onClick={cancelHandler}>\r\n                                    <span>Cancel</span>\r\n                                </button>\r\n                                <button type={\"submit\"}\r\n                                        className={cls.registerButton}\r\n                                >\r\n                                    <span>Register</span>\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}","import React, {useState} from \"react\";\r\nimport {NavLink, useLocation} from \"react-router-dom\";\r\nimport cls from \"./HeaderMain.module.scss\"\r\nimport {PATH} from \"../../App\";\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport {logoutTC} from \"../../m2-bll/authReducer\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\n\r\nexport const HeaderMain = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [finalClass, setFinalClass] = useState(cls.active)\r\n\r\n    let location = useLocation()\r\n\r\n    const onClickHandler = () => {\r\n        dispatch(logoutTC())\r\n    }\r\n\r\n    return (\r\n        <div className={cls.headerContainer}>\r\n            <div className={cls.wrapper}>\r\n                <h1 className={cls.logo}>It-incubator</h1>\r\n                <div className={cls.linksContainer}>\r\n                    <div className={cls.linkContainer}>\r\n                        <NavLink to={PATH.PACKS_LIST}\r\n                                 className={location.pathname === PATH.PACKS_LIST ? finalClass : \"\"}\r\n                                 onMouseEnter={() => setFinalClass(\"\")}\r\n                                 onMouseOut={() => setFinalClass(cls.active)}\r\n                                 tabIndex={1}>Packs\r\n                            list</NavLink>\r\n                    </div>\r\n                    <div className={cls.linkContainer}>\r\n                        <NavLink to={PATH.PROFILE} tabIndex={2}\r\n                                 className={location.pathname === PATH.PROFILE ? finalClass : \"\"}\r\n                                 onMouseEnter={() => setFinalClass(\"\")}\r\n                                 onMouseOut={() => setFinalClass(cls.active)}\r\n                        >Profile</NavLink>\r\n                    </div>\r\n                </div>\r\n                <div className={cls.buttonContainer}>\r\n                    <SuperButton onClick={onClickHandler} className={cls.logoutBtn}><span>Logout</span></SuperButton>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/DownSort.f30a3c93.svg\";","export default __webpack_public_path__ + \"static/media/UpSort.f8b45093.svg\";","import React, {useState} from \"react\";\r\nimport cls from \"./TableHeader.module.scss\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setUpdatedDirection} from \"../../../../m2-bll/packsReducer\";\r\nimport {AppRootStateType} from \"../../../../m2-bll/store\";\r\nimport downArrow from \"../../../../../assets/images/DownSort.svg\"\r\nimport upArrow from \"../../../../../assets/images/UpSort.svg\"\r\n\r\n\r\ntype TableHeaderType = {\r\n    className: string\r\n}\r\ntype ArrowType = \"down\" | \"up\"\r\n\r\n\r\nexport type UpdatedDirectionType = \"0updated\" | \"1updated\"\r\n\r\nexport const TableHeader: React.FC<TableHeaderType> = ({className}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const updatedDirection = useSelector<AppRootStateType, UpdatedDirectionType>(state => state.packs.cardPacksRequestParameters.sortPacks)\r\n\r\n    const [arrow, setArrow] = useState<ArrowType>('down')\r\n\r\n    const changeUpdatedDirection = () => {\r\n        setArrow(arrow === \"down\" ? \"up\" : \"down\")\r\n        switch (updatedDirection) {\r\n            case \"0updated\":\r\n                dispatch(setUpdatedDirection(\"1updated\"))\r\n                break\r\n            case \"1updated\":\r\n                dispatch(setUpdatedDirection(\"0updated\"))\r\n                break\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={`${className} ${cls.tableHeader}`}>\r\n            <div>Name</div>\r\n            <div>Cards</div>\r\n            <div>Last Updated <span onClick={changeUpdatedDirection}>\r\n                <img src={arrow === \"down\" ? downArrow : upArrow} alt=\"\"/>\r\n            </span></div>\r\n            <div>Last Created</div>\r\n            <div>Actions</div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport cls from \"./TableData.module.scss\"\r\nimport SuperButton from \"../../../common/SuperButton/SuperButton\";\r\n\r\ntype TableDataPropsType = {\r\n    _id: string\r\n    user_id: string\r\n    name: string\r\n    cardsCount: number\r\n    created: string\r\n    updatedDate: string\r\n    updatedTime: string\r\n    createdDate: string\r\n    createdTime: string\r\n    removePack: (packId: string) => void\r\n    appUserId: string\r\n}\r\n\r\n\r\nexport const TableData: React.FC<TableDataPropsType> = ({\r\n                                                            name,\r\n                                                            _id,\r\n                                                            cardsCount,\r\n                                                            updatedDate,\r\n                                                            updatedTime,\r\n                                                            createdDate,\r\n                                                            createdTime,\r\n                                                            removePack,\r\n                                                            appUserId,\r\n                                                            user_id,\r\n                                                            children\r\n                                                        }) => {\r\n\r\n    return (\r\n        <div className={cls.tableData}>\r\n            <div className={cls.red}>{name}</div>\r\n            <div>{cardsCount}</div>\r\n            <div>\r\n                <p>Date: {updatedDate}</p>\r\n                <p>Time: {updatedTime}</p>\r\n            </div>\r\n            <div>\r\n                <p>Date: {createdDate}</p>\r\n                <p>Time: {createdTime}</p>\r\n            </div>\r\n            <div className={cls.buttonsContainer}>\r\n                <SuperButton className={cls.deleteButton}\r\n                             onClick={() => removePack(_id)}\r\n                             disabled={user_id !== appUserId}\r\n                ><span>Delete</span></SuperButton>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport cls from \"./TablePacks.module.scss\"\r\nimport {TableHeader} from \"./TableHeader/TableHeader\";\r\nimport {TableData} from \"./TableData/TableData\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../m2-bll/store\";\r\nimport {CardPackType} from \"../../../m2-bll/packsReducer\";\r\nimport Paginator from \"../../common/Paginator/Paginator\";\r\nimport {Preloader} from \"../../common/preloader/Preloader\";\r\n\r\ntype TablePacksProspType = {\r\n    removePack: (packId: string) => void\r\n    pageCount: number\r\n}\r\n\r\nexport const TablePacks: React.FC<TablePacksProspType> = ({removePack, pageCount}) => {\r\n\r\n\r\n    const packsData = useSelector<AppRootStateType, Array<CardPackType>>(state => state.packs.cardPacks)\r\n    const appUserId = useSelector<AppRootStateType, string>(state => state.profile.informationAboutUser._id)\r\n    const isFetchingPacks = useSelector<AppRootStateType, boolean>(state => state.packs.isFetching)\r\n\r\n\r\n    return (\r\n        <div className={cls.tableContainer}>\r\n            <TableHeader className={cls.tableHeader}/>\r\n            {\r\n                isFetchingPacks\r\n                    ?\r\n                    <Preloader/>\r\n                    :\r\n                    packsData.map(pack => {\r\n\r\n                        const updatedDate = pack.updated.slice(0, 10)\r\n                        const updatedTime = pack.updated.slice(11, 19)\r\n                        const createdDate = pack.created.slice(0, 10)\r\n                        const createdTime = pack.created.slice(11, 19)\r\n\r\n                        return (\r\n                            <TableData\r\n                                name={pack.name}\r\n                                _id={pack._id}\r\n                                cardsCount={pack.cardsCount}\r\n                                created={pack.created}\r\n                                updatedDate={updatedDate}\r\n                                updatedTime={updatedTime}\r\n                                createdDate={createdDate}\r\n                                createdTime={createdTime}\r\n                                user_id={pack.user_id}\r\n                                key={pack._id}\r\n                                removePack={removePack}\r\n                                appUserId={appUserId}\r\n                            />\r\n                        )\r\n                    })\r\n            }\r\n        </div>\r\n    )\r\n}","import React, {useState, KeyboardEvent} from 'react'\r\nimport SuperInputText from \"../SuperInput/SuperInputText\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setSearchName} from \"../../../m2-bll/packsReducer\";\r\n\r\ntype SearchPropsType = {\r\n    className: string\r\n}\r\n\r\nconst Search: React.FC<SearchPropsType> = ({className}) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const [request, setRequest] = useState<string>(\"\")\r\n\r\n    const handlePress = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        dispatch(setSearchName(request))\r\n        e.currentTarget.blur()\r\n    }\r\n\r\n    return (\r\n        <SuperInputText\r\n            value={request}\r\n            type={\"text\"}\r\n            onChangeText={setRequest}\r\n            onEnter={handlePress}\r\n            placeholder={\"Search...\"}\r\n            className={className}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React from 'react'\r\nimport 'rc-slider/assets/index.css'\r\n\r\nconst Slider = require('rc-slider')\r\nconst createSliderWithTooltip = Slider.createSliderWithTooltip\r\nconst Range = createSliderWithTooltip(Slider.Range)\r\n\r\ntype SuperDoubleRangePropsType = {\r\n  onChangeRange?: (value: [number, number]) => void\r\n  onAfterChange?: () => void\r\n  value?: [number, number]\r\n  min: number\r\n  max: number\r\n  step: number | null\r\n  included?: boolean\r\n  handleStyle?: Object[]\r\n  trackStyle?: Object[]\r\n  railStyle?: Object\r\n  dotStyle?: Object\r\n  activeDotStyle?: Object\r\n}\r\n\r\nconst SuperDoubleRange: React.FC<SuperDoubleRangePropsType> = (\r\n  {\r\n    onChangeRange,\r\n    onAfterChange,\r\n    value,\r\n    min,\r\n    max,\r\n    step,\r\n    included,\r\n    handleStyle,\r\n    trackStyle,\r\n    railStyle,\r\n    dotStyle,\r\n    activeDotStyle,\r\n  }) => {\r\n  \r\n  return (\r\n    <>\r\n      <Range\r\n        onChange={onChangeRange}\r\n        onAfterChange={onAfterChange}\r\n        value={value}\r\n        min={min}\r\n        max={max}\r\n        step={step}\r\n        included={included}\r\n        handleStyle={handleStyle}\r\n        trackStyle={trackStyle}\r\n        railStyle={railStyle}\r\n        dotStyle={dotStyle}\r\n        activeDotStyle={activeDotStyle}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SuperDoubleRange\r\n","import React, { useState } from 'react'\r\nimport SuperDoubleRange from '../../common/SuperDoubleRange/SuperDoubleRange'\r\nimport styles from './DoubleRange.module.scss'\r\nimport { useDispatch } from 'react-redux'\r\nimport { setRangeSort } from '../../../m2-bll/packsReducer'\r\n\r\nexport const DoubleRange = () => {\r\n  const dispatch = useDispatch()\r\n  const [min, setMin] = useState(0)\r\n  const [max, setMax] = useState(100)\r\n  \r\n  const onChangeRange = (value: [number, number]) => {\r\n    if (min <= max) setMin(value[0])\r\n    if (max >= min) setMax(value[1])\r\n  }\r\n  const handleRange = () => {\r\n    dispatch(setRangeSort([min, max]))\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <SuperDoubleRange\r\n        value={[min, max]}\r\n        min={0}\r\n        max={100}\r\n        step={1}\r\n        included={true}\r\n        onChangeRange={onChangeRange}\r\n        onAfterChange={handleRange}\r\n        handleStyle={[{borderColor: '#21268F', backgroundColor: '#21268F'}]}\r\n        trackStyle={[{width: '20px', backgroundColor: '#21268F'}]}\r\n        railStyle={{backgroundColor: 'grey'}}\r\n        dotStyle={{backgroundColor: 'red'}}\r\n        activeDotStyle={{borderColor: 'green'}}\r\n      />\r\n      <div className={styles.rangeContainer}>\r\n        <span>{min}</span>\r\n        <span>{max}</span>\r\n      </div>\r\n    </>\r\n  )\r\n}","import React, { SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent } from 'react'\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n  options?: any[]\r\n  onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n  {\r\n    options,\r\n    onChange, onChangeOption,\r\n    ...restProps\r\n  }\r\n) => {\r\n  const mappedOptions: any[] = options ? options.map((o,i) =>\r\n    <option key={o + '-' + i}>{o}</option>) : [] // map options with key\r\n  \r\n  const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n    onChangeOption && onChangeOption(e.currentTarget.value)\r\n    onChange && onChange(e)\r\n  }\r\n  \r\n  return (\r\n    <select onChange={onChangeCallback} {...restProps}>\r\n      {mappedOptions}\r\n    </select>\r\n  )\r\n}\r\n\r\nexport default SuperSelect\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { AppRootStateType } from '../../../m2-bll/store'\r\nimport styles from './Paginator.module.scss'\r\nimport ReactPaginate from 'react-paginate'\r\nimport SuperSelect from '../SuperSelect/SuperSelect'\r\nimport {setCurrentPage, setPageCount} from \"../../../m2-bll/packsReducer\";\r\n\r\ntype PaginatorPropsType = {\r\n  pageCount: number\r\n}\r\n\r\n\r\nconst Paginator = ({pageCount}:PaginatorPropsType) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const cardPacksTotalCount = useSelector<AppRootStateType, number>(state => state.packs.cardPacksTotalCount)\r\n\r\n  const onPageChanges = (page: number) => {\r\n    dispatch(setCurrentPage(page+1))\r\n  }\r\n  const changePageCount = (count: number) => {\r\n    dispatch(setPageCount(count))\r\n  }\r\n\r\n\r\n  return <div className={styles.paginatorPage}>\r\n    <ReactPaginate\r\n      pageCount={Math.ceil(cardPacksTotalCount/pageCount)}\r\n      marginPagesDisplayed={1}\r\n      pageRangeDisplayed={5}\r\n      previousLabel={'<'}\r\n      previousClassName={styles.prev}\r\n      nextLabel={'>'}\r\n      nextClassName={styles.next}\r\n      activeClassName={styles.selectedPage}\r\n      onPageChange={(page) => onPageChanges(page.selected)}\r\n      containerClassName={styles.container}\r\n      pageClassName={styles.page}\r\n    />\r\n    <div className={styles.sortContainer}>\r\n      Show<SuperSelect\r\n        className={styles.superSelect}\r\n        options={[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]}\r\n        value={pageCount}\r\n        onChange={(e) => changePageCount(+e.currentTarget.value)}\r\n      /> Cards per Page\r\n    </div>\r\n  </div>\r\n}\r\n\r\nexport default Paginator","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport cls from \"./PacksList.module.scss\"\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport {TablePacks} from \"./TablePacks/TablePacks\";\r\nimport Search from \"../common/Search/Search\";\r\n\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {createNewPack, deletePack, getDataPacks, setUserId} from \"../../m2-bll/packsReducer\";\r\nimport {AppRootStateType} from \"../../m2-bll/store\";\r\nimport {isLoggedInApp} from \"../../m2-bll/authReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../App\";\r\nimport {DoubleRange} from \"./DoubleRange/DoubleRange\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport {Preloader} from \"../common/preloader/Preloader\";\r\n\r\ntype ButtonNameType = 'my' | 'all'\r\n\r\nexport const PacksList = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const id = useSelector<AppRootStateType, string>(state => state.profile.informationAboutUser._id)\r\n\r\n    const isFetching = useSelector<AppRootStateType, boolean>(state => state.auth.isFetching)\r\n    const error = useSelector<AppRootStateType, string | null>(state => state.auth.error)\r\n\r\n    const page = useSelector<AppRootStateType, number>(state => state.packs.cardPacksRequestParameters.page)\r\n    const pageCount = useSelector<AppRootStateType, number>(state => state.packs.cardPacksRequestParameters.pageCount)\r\n    const packName = useSelector<AppRootStateType, string>(state => state.packs.cardPacksRequestParameters.packName)\r\n    const updatedDirection = useSelector<AppRootStateType, string>(state => state.packs.cardPacksRequestParameters.sortPacks)\r\n    const currentUserId = useSelector<AppRootStateType, string>(state => state.packs.cardPacksRequestParameters.user_id)\r\n    const minCards = useSelector<AppRootStateType, number>(state => state.packs.cardPacksRequestParameters.minCardsCount)\r\n    const maxCards = useSelector<AppRootStateType, number>(state => state.packs.cardPacksRequestParameters.maxCardsCount)\r\n\r\n    const [activeClass, setActiveClass] = useState(cls.active)\r\n    const [buttonName, setButtonName] = useState<ButtonNameType>('all')\r\n\r\n    useEffect(() => {\r\n        if (!id) {\r\n            dispatch(isLoggedInApp())\r\n        } else {\r\n            dispatch(getDataPacks())\r\n        }\r\n    }, [id, dispatch, page, pageCount, packName, currentUserId, updatedDirection, minCards, maxCards])\r\n\r\n\r\n    const addPack = useCallback(() => {\r\n        const newPackName = prompt('Enter the name of the new pack: ')\r\n        if (newPackName)\r\n            dispatch(createNewPack(newPackName))\r\n    }, [dispatch])\r\n\r\n\r\n    const removePack = useCallback((packId: string) => {\r\n        dispatch(deletePack(packId))\r\n    }, [dispatch])\r\n\r\n\r\n    const getMyPacksList = useCallback(() => {\r\n        setButtonName('my')\r\n        dispatch(setUserId(id))\r\n    }, [id, dispatch])\r\n\r\n    const getAllPacksList = useCallback(() => {\r\n        setButtonName('all')\r\n        dispatch(setUserId(\"\"))\r\n    }, [dispatch])\r\n\r\n\r\n    if (error) {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n\r\n    return (\r\n        isFetching\r\n            ?\r\n            <Preloader/>\r\n            :\r\n            <div className={cls.packlistContainer}>\r\n                <div className={cls.card}>\r\n                    <div className={cls.info}>\r\n                        <p className={cls.ownerTitle}>Show packs cards</p>\r\n                        <div className={cls.buttonsContainer}>\r\n                            <SuperButton\r\n                                className={buttonName === 'my' ? `${cls.myButton} ${activeClass}` : cls.myButton}\r\n                                onClick={getMyPacksList}\r\n                                onMouseEnter={() => setActiveClass(\"\")}\r\n                                onMouseOut={() => setActiveClass(cls.active)}\r\n                            >My</SuperButton>\r\n                            <SuperButton\r\n                                className={buttonName === \"all\" ? `${cls.allButton} ${activeClass}` : cls.allButton}\r\n                                onClick={getAllPacksList}\r\n                                onMouseEnter={() => setActiveClass(\"\")}\r\n                                onMouseOut={() => setActiveClass(cls.active)}\r\n                            >All</SuperButton>\r\n                        </div>\r\n                        <p className={cls.numberTitle}>Number of cards</p>\r\n                        <DoubleRange/>\r\n                    </div>\r\n                    <div className={cls.packslist}>\r\n                        <h2 className={cls.packslistTitle}>Packs list</h2>\r\n                        <div className={cls.search_AddButtonContainer}>\r\n                            <Search className={cls.search}/>\r\n                            <div className={cls.addButtonContainer}>\r\n                                <SuperButton className={cls.addPackButton}\r\n                                             onClick={addPack}><span>Add new pack</span></SuperButton>\r\n                            </div>\r\n                        </div>\r\n                        <TablePacks removePack={removePack} pageCount={pageCount}/>\r\n                        <Paginator pageCount={pageCount}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    )\r\n}","import React from 'react';\r\nimport {Route} from 'react-router-dom';\r\nimport './App.scss';\r\nimport {Header} from './m1-ui/Header/Header';\r\nimport {Login} from \"./m1-ui/Login/Login\";\r\nimport {Profile} from \"./m1-ui/Profile/Profile\";\r\nimport {PageNotFound} from \"./m1-ui/PageNotFound/PageNotFound\";\r\nimport {RestorePassword} from \"./m1-ui/RestorePassword/RestorePassword\";\r\nimport {NewPassword} from \"./m1-ui/NewPassword/NewPassword\";\r\nimport {TestComponents} from \"./m1-ui/TestComponents/TestComponents\";\r\nimport {PersonalInfo} from \"./m1-ui/Profile/PersonalInfo/PersonalInfo\";\r\nimport {Register} from \"./m1-ui/Registration/Register\";\r\nimport {HeaderMain} from \"./m1-ui/HeaderMain/HeaderMain\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"./m2-bll/store\";\r\nimport {PacksList} from \"./m1-ui/PacksList/PacksList\";\r\nimport {Redirect} from \"react-router\";\r\n\r\nexport const PATH = {\r\n    PROFILE: '/profile',\r\n    PACKS_LIST: '/packslist',\r\n    USER_INFO: '/information_about_user',\r\n    LOGIN: '/login',\r\n    REGISTRATION: '/registration',\r\n    TEST_COMPONENTS: '/test_components',\r\n    PAGE_NOT_FOUND: '/404',\r\n    RESTORE_PASSWORD: '/restore_password',\r\n    NEW_PASSWORD: \"/new_password/:token?\"\r\n}\r\n\r\nconst App = () => {\r\n\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn)\r\n\r\n    return (\r\n        <div className='app-wrapper'>\r\n            <Header/>\r\n            {isLoggedIn && <HeaderMain/>}\r\n            <div className='app-wrapper-content'>\r\n                <Route exact path={'/'} render={() => <Redirect to={PATH.PROFILE}/>}/>\r\n                <Route exact path={PATH.LOGIN} render={() => <Login/>}/>\r\n                <Route path={PATH.PROFILE} render={() => <Profile/>}/>\r\n                <Route path={PATH.PACKS_LIST} render={() => <PacksList/>}/>\r\n                <Route path={PATH.USER_INFO} render={() => <PersonalInfo/>}/>\r\n                <Route path={PATH.REGISTRATION} render={() => <Register/>}/>\r\n                <Route path={PATH.TEST_COMPONENTS} render={() => <TestComponents/>}/>\r\n                <Route path={PATH.PAGE_NOT_FOUND} render={() => <PageNotFound/>}/>\r\n                <Route path={PATH.RESTORE_PASSWORD} render={() => <RestorePassword/>}/>\r\n                <Route path={PATH.NEW_PASSWORD}\r\n                       render={() => <NewPassword/>}/> {/* для отображения <NewPassword/> после token стоит \"?\" */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport reportWebVitals from './reportWebVitals'\r\nimport { HashRouter } from 'react-router-dom'\r\nimport { Provider } from 'react-redux'\r\nimport {store} from \"./n1-main/m2-bll/store\";\r\nimport App from \"./n1-main/App\";\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <Provider store={store}>\r\n        <App/>\r\n      </Provider>\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"packlistContainer\":\"PacksList_packlistContainer__203H9\",\"card\":\"PacksList_card__4iZ9t\",\"info\":\"PacksList_info__1gH48\",\"ownerTitle\":\"PacksList_ownerTitle__G6PSA\",\"buttonsContainer\":\"PacksList_buttonsContainer__cNOXd\",\"active\":\"PacksList_active__2VHiG\",\"myButton\":\"PacksList_myButton__35CDO\",\"allButton\":\"PacksList_allButton__2ktB-\",\"numberTitle\":\"PacksList_numberTitle__1p9tV\",\"packslist\":\"PacksList_packslist__3okA6\",\"packslistTitle\":\"PacksList_packslistTitle__1aQ_O\",\"search_AddButtonContainer\":\"PacksList_search_AddButtonContainer__P3a5F\",\"search\":\"PacksList_search__uEFwQ\",\"addButtonContainer\":\"PacksList_addButtonContainer__2L2UU\",\"addPackButton\":\"PacksList_addPackButton__37DlD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginContainer\":\"Login_loginContainer__1SVOg\",\"card\":\"Login_card__2mLHC\",\"title\":\"Login_title__2UUgW\",\"subtitle\":\"Login_subtitle__DbChu\",\"titleEmail\":\"Login_titleEmail__1iUd3\",\"titlePassword\":\"Login_titlePassword__3ZnqY\",\"inputContainer\":\"Login_inputContainer__JcY_7\",\"eye\":\"Login_eye__1spUq\",\"inputEmailPassword\":\"Login_inputEmailPassword__20Vs6\",\"checkbox\":\"Login_checkbox__2J4mn\",\"rememberMe\":\"Login_rememberMe__3YBcc\",\"restorePassword\":\"Login_restorePassword__PgDBI\",\"buttonContainer\":\"Login_buttonContainer__1lcN7\",\"button\":\"Login_button__2_yDM\",\"newAccount\":\"Login_newAccount__3CJO5\",\"signUp\":\"Login_signUp__2tk-n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registrationContainer\":\"Register_registrationContainer__UmmAC\",\"card\":\"Register_card___EsZn\",\"title\":\"Register_title__27VHU\",\"subtitle\":\"Register_subtitle__3mACY\",\"titleEmail\":\"Register_titleEmail__2SneJ\",\"titlePassword\":\"Register_titlePassword__eIshG\",\"inputContainer\":\"Register_inputContainer__1dcrn\",\"eye\":\"Register_eye__JXYXU\",\"inputEmailPassword\":\"Register_inputEmailPassword__1lV5L\",\"buttonContainer\":\"Register_buttonContainer__37yYJ\",\"cancelButton\":\"Register_cancelButton__Kmh2o\",\"registerButton\":\"Register_registerButton__EbWTP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoContainer\":\"PersonalInfo_infoContainer__2OKjr\",\"card\":\"PersonalInfo_card__3lzkm\",\"title\":\"PersonalInfo_title__1HxQO\",\"imgWrapper\":\"PersonalInfo_imgWrapper__1_NOT\",\"inputContainer\":\"PersonalInfo_inputContainer__20Xds\",\"inputNicknameAvatar\":\"PersonalInfo_inputNicknameAvatar__3kz6z\",\"buttonContainer\":\"PersonalInfo_buttonContainer__2JFke\",\"cancelButton\":\"PersonalInfo_cancelButton__1Goa2\",\"registerButton\":\"PersonalInfo_registerButton__2k6O8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"restorePasswordContainer\":\"RestorePassword_restorePasswordContainer__3wwbJ\",\"card\":\"RestorePassword_card__13eXp\",\"title\":\"RestorePassword_title__7T_Sc\",\"subtitle\":\"RestorePassword_subtitle__6udjQ\",\"inputContainer\":\"RestorePassword_inputContainer__25m67\",\"inputEmail\":\"RestorePassword_inputEmail__2h3fP\",\"firstNote\":\"RestorePassword_firstNote__dHJA8\",\"buttonContainer\":\"RestorePassword_buttonContainer__6b9Rc\",\"button\":\"RestorePassword_button__3OtoL\",\"secondNote\":\"RestorePassword_secondNote__u33ED\",\"reLogin\":\"RestorePassword_reLogin__115Di\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"HeaderMain_headerContainer__1t0Yy\",\"wrapper\":\"HeaderMain_wrapper__x0UjY\",\"logo\":\"HeaderMain_logo__2dm-D\",\"linksContainer\":\"HeaderMain_linksContainer__2Nnya\",\"linkContainer\":\"HeaderMain_linkContainer__25SoB\",\"active\":\"HeaderMain_active__3RSCn\",\"buttonContainer\":\"HeaderMain_buttonContainer__2FGST\",\"logoutBtn\":\"HeaderMain_logoutBtn__3iDpb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPasswordContainer\":\"NewPassword_newPasswordContainer__2W262\",\"card\":\"NewPassword_card__2STyj\",\"title\":\"NewPassword_title__3MrsO\",\"subtitle\":\"NewPassword_subtitle__xymY6\",\"inputContainer\":\"NewPassword_inputContainer__aG24R\",\"eye\":\"NewPassword_eye__3Nt59\",\"inputPassword\":\"NewPassword_inputPassword__1jwIk\",\"note\":\"NewPassword_note__3Are5\",\"buttonContainer\":\"NewPassword_buttonContainer__3DPdQ\",\"button\":\"NewPassword_button__3-ZIq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginatorPage\":\"Paginator_paginatorPage__29P5R\",\"container\":\"Paginator_container__3WYVr\",\"selectedPage\":\"Paginator_selectedPage__1_Qpu\",\"page\":\"Paginator_page__nOPpU\",\"prev\":\"Paginator_prev__2zF4J\",\"next\":\"Paginator_next__3k4_a\",\"sortContainer\":\"Paginator_sortContainer__1n5To\",\"superSelect\":\"Paginator_superSelect__1apV2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkPasswordContainer\":\"CheckPassword_checkPasswordContainer__1ni7O\",\"card\":\"CheckPassword_card__rQtwW\",\"title\":\"CheckPassword_title__3hHul\",\"imgContainer\":\"CheckPassword_imgContainer__tY4ua\",\"subtitle\":\"CheckPassword_subtitle__1yJNt\",\"firstNote\":\"CheckPassword_firstNote__2Ezf9\",\"secondNote\":\"CheckPassword_secondNote__1FTG7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoUser\":\"UserInfo_infoUser__2-Ur5\",\"userName\":\"UserInfo_userName__20AlV\",\"editProfileWrapper\":\"UserInfo_editProfileWrapper__Sm275\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableData\":\"TableData_tableData__3vXs_\",\"buttonsContainer\":\"TableData_buttonsContainer__S3WNq\",\"deleteButton\":\"TableData_deleteButton__kAEZu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorInput\":\"SuperInputText_errorInput__1s9vg\",\"error\":\"SuperInputText_error__1BK8m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileContainer\":\"Profile_profileContainer__17JgP\",\"card\":\"Profile_card__1gvrl\",\"info\":\"Profile_info__2n02S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2WNQ6\",\"red\":\"SuperButton_red__1si2j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoUserCards\":\"UserInfoCards_infoUserCards__1JTR6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"testComponentsContainer\":\"TestComponents_testComponentsContainer__2JwAI\",\"componentsContainer\":\"TestComponents_componentsContainer__1m_9P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2drz_\",\"spanClassName\":\"SuperCheckbox_spanClassName__3LAnk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableContainer\":\"TablePacks_tableContainer__TurzH\",\"tableHeader\":\"TablePacks_tableHeader__1CXws\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__LWinR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Preloader_loader__6QB1q\",\"load7\":\"Preloader_load7__2zpZX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableHeader\":\"TableHeader_tableHeader__1vH1Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rangeContainer\":\"DoubleRange_rangeContainer__F34VD\",\"numberTitle\":\"DoubleRange_numberTitle__jl1cZ\"};"],"sourceRoot":""}