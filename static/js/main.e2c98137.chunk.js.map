{"version":3,"sources":["n1-main/m1-ui/common/preloader/Preloader.module.scss","n1-main/m1-ui/PacksList/DoubleRange/DoubleRange.module.scss","n1-main/m1-ui/PacksList/PacksList.module.scss","n1-main/m1-ui/Login/Login.module.scss","n1-main/m1-ui/Registration/Register.module.scss","n1-main/m1-ui/Learn/Learn.module.scss","reportWebVitals.ts","n1-main/m3-dal/apiLogin.ts","n1-main/m3-dal/apiProfile.ts","n1-main/m2-bll/profileReducer.ts","n1-main/m2-bll/authReducer.ts","n1-main/m3-dal/apiRegister.ts","n1-main/m2-bll/registerReducer.ts","n1-main/m3-dal/apiRestore.ts","n1-main/m2-bll/restorePasswordReducer.ts","n1-main/m3-dal/apiPacks.ts","n1-main/m2-bll/packsReducer.ts","n1-main/m3-dal/apiCards.ts","n1-main/m2-bll/cardsReducer.ts","n1-main/m3-dal/apiLearn.ts","n1-main/m2-bll/learnReducer.ts","n1-main/m2-bll/store.ts","n1-main/m1-ui/common/SuperInput/SuperInputText.tsx","n1-main/m1-ui/common/SuperButton/SuperButton.tsx","assets/images/eye.svg","assets/images/closedEye.svg","n1-main/m1-ui/common/preloader/Preloader.tsx","n1-main/m1-ui/Login/Login.tsx","assets/images/avatar.png","n1-main/m1-ui/Profile/UserInfo/UserInfo.tsx","n1-main/m1-ui/common/SuperDoubleRange/SuperDoubleRange.tsx","n1-main/m1-ui/PacksList/DoubleRange/DoubleRange.tsx","n1-main/m1-ui/Profile/UserInfoCards/UserInfoCards.tsx","n1-main/m1-ui/common/Search/Search.tsx","assets/images/DownSort.svg","assets/images/UpSort.svg","n1-main/m1-ui/PacksList/TablePacks/TableHeaderPacks/TableHeaderPacks.tsx","n1-main/m1-ui/common/Modal/Modal.tsx","n1-main/m1-ui/PacksList/TablePacks/TableDataPacks/DeletePackForm/DeletePackForm.tsx","n1-main/m1-ui/PacksList/TablePacks/TableDataPacks/EditPackform/EditPackForm.tsx","n1-main/m1-ui/PacksList/TablePacks/TableDataPacks/TableDataPacks.tsx","n1-main/m1-ui/PacksList/TablePacks/TablePacks.tsx","n1-main/m1-ui/common/SuperSelect/SuperSelect.tsx","n1-main/m1-ui/common/Paginator/Paginator.tsx","n1-main/m1-ui/PacksList/AddPackForm/AddPackForm.tsx","n1-main/m1-ui/Profile/Profile.tsx","n1-main/m1-ui/PageNotFound/PageNotFound.tsx","assets/images/letter.svg","n1-main/m1-ui/CheckPassword/CheckPassword.tsx","n1-main/m1-ui/RestorePassword/RestorePassword.tsx","n1-main/m1-ui/NewPassword/NewPassword.tsx","n1-main/m1-ui/common/SuperCheckbox/SuperCheckbox.tsx","n1-main/m1-ui/TestComponents/TestComponents.tsx","n1-main/m1-ui/Profile/PersonalInfo/PersonalInfo.tsx","n1-main/m1-ui/Registration/Register.tsx","n1-main/m1-ui/HeaderMain/HeaderMain.tsx","n1-main/m1-ui/PacksList/PacksList.tsx","n1-main/m1-ui/CardsList/TableCards/TableHeaderCards/TableHeaderCards.tsx","n1-main/m1-ui/CardsList/TableCards/TableDataCards/EditCardForm/EditCardForm.tsx","n1-main/m1-ui/CardsList/TableCards/TableDataCards/DeleteCardForm/DeleteCardForm.tsx","n1-main/m1-ui/CardsList/TableCards/TableDataCards/TableDataCards.tsx","n1-main/m1-ui/CardsList/TableCards/TableCards.tsx","assets/images/LeftArrow.svg","n1-main/m1-ui/CardsList/AddCardForm/AddCardForm.tsx","n1-main/m1-ui/CardsList/CardsList.tsx","n1-main/m1-ui/Learn/Learn.tsx","n1-main/m1-ui/Chat/Chat.tsx","n1-main/App.tsx","index.tsx","n1-main/m1-ui/CardsList/AddCardForm/AddCardForm.module.scss","n1-main/m1-ui/Profile/PersonalInfo/PersonalInfo.module.scss","n1-main/m1-ui/HeaderMain/HeaderMain.module.scss","n1-main/m1-ui/CardsList/TableCards/TableDataCards/EditCardForm/EditCardForm.module.scss","n1-main/m1-ui/RestorePassword/RestorePassword.module.scss","n1-main/m1-ui/PacksList/AddPackForm/AddPackForm.module.scss","n1-main/m1-ui/NewPassword/NewPassword.module.scss","n1-main/m1-ui/CardsList/CardsList.module.scss","n1-main/m1-ui/Profile/Profile.module.scss","n1-main/m1-ui/Chat/Chat.module.scss","n1-main/m1-ui/PacksList/TablePacks/TableDataPacks/EditPackform/EditPackForm.module.scss","n1-main/m1-ui/common/Paginator/Paginator.module.scss","n1-main/m1-ui/PacksList/TablePacks/TableDataPacks/TableDataPacks.module.scss","n1-main/m1-ui/common/Modal/Modal.module.scss","n1-main/m1-ui/CheckPassword/CheckPassword.module.scss","n1-main/m1-ui/CardsList/TableCards/TableDataCards/TableDataCards.module.scss","n1-main/m1-ui/PacksList/TablePacks/TableDataPacks/DeletePackForm/DeletePackForm.module.scss","n1-main/m1-ui/CardsList/TableCards/TableDataCards/DeleteCardForm/DeleteCardForm.module.scss","n1-main/m1-ui/Profile/UserInfo/UserInfo.module.scss","n1-main/m1-ui/CardsList/TableCards/TableCards.module.scss","n1-main/m1-ui/common/SuperInput/SuperInputText.module.scss","n1-main/m1-ui/Profile/UserInfoCards/UserInfoCards.module.scss","n1-main/m1-ui/PacksList/TablePacks/TablePacks.module.scss","n1-main/m1-ui/PacksList/TablePacks/TableHeaderPacks/TableHeaderPacks.module.scss","n1-main/App.module.scss","n1-main/m1-ui/common/SuperButton/SuperButton.module.css","n1-main/m1-ui/TestComponents/TestComponents.module.css","n1-main/m1-ui/common/SuperCheckbox/SuperCheckbox.module.css","n1-main/m1-ui/CardsList/TableCards/TableHeaderCards/TableHeaderCards.module.scss"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","create","baseURL","withCredentials","authAPI","data","post","delete","axiosInstance","profileApi","name","avatar","put","initialState","informationAboutUser","_id","email","publicCardPacksCount","created","Date","toString","updated","isAdmin","verified","rememberMe","error","setInformationAboutUserAC","type","loginTC","createAsyncThunk","param","thunkAPI","a","dispatch","setLoginLoading","res","isLoggedIn","response","messages","rejectWithValue","logoutTC","arg","slice","createSlice","isFetching","reducers","setIsLoggedIn","state","action","payload","setLoginError","extraReducers","builder","addCase","fulfilled","rejected","authReducer","reducer","actions","isLoggedInApp","catch","e","finally","ApiRegister","password","isRegistered","setRegisterSuccess","setRegisterError","setRegisterLoading","registerReducer","authApi","message","resetPasswordToken","setShowEmailCheck","showEmailCheck","setRestorePasswordError","setRestorePasswordLoading","isNewPasswordCreated","packsApi","packName","min","max","sortPacks","page","pageCount","user_id","get","params","isPrivate","cardsPack","packId","cardPacks","cardPacksRequestParameters","maxCardsCount","minCardsCount","cardPacksTotalCount","setSearchName","requestedName","setCurrentPage","requestedPage","setUpdatedDirection","direction","setCardsCountDirection","setLoadingPacks","setUserId","userId","setPageCount","count","setRangeSort","range","getDataPacks","getState","packs","dataPacks","console","log","createNewPack","editPack","cardsApi","cardsPack_id","cardQuestion","sortCards","question","answer","card","cardId","cards","cardsRequestParameters","cardsTotalCount","cardPackName","packUserId","setLoadingCards","getDataCards","dataCards","createNewCard","editCard","learnApi","grade","card_id","changeCard","setIsFetching","setChangeCard","isChanged","setCards","rootReducer","combineReducers","auth","profile","updatedUser","restorePassword","register","learn","store","configureStore","window","SuperInputText","onChange","onChangeText","onKeyPress","onEnter","className","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","errorInput","superInput","currentTarget","value","key","map","err","SuperButton","red","finalClassName","default","Preloader","cls","loader","Login","useDispatch","useSelector","useState","setType","formik","useFormik","initialValues","validate","values","test","length","onSubmit","formikHelpers","to","PATH","PROFILE","loginContainer","title","subtitle","handleSubmit","titleEmail","inputContainer","getFieldProps","inputEmailPassword","onClick","touched","errors","style","color","match","titlePassword","eye","src","closedEye","alt","checkbox","buttonContainer","button","newAccount","signUp","UserInfo","infoUser","userPhoto","defaultAvatar","userName","editProfileWrapper","Slider","require","Range","createSliderWithTooltip","SuperDoubleRange","onChangeRange","onAfterChange","step","included","handleStyle","trackStyle","railStyle","dotStyle","activeDotStyle","DoubleRange","maxCount","setMin","setMax","useEffect","borderColor","backgroundColor","width","styles","rangeContainer","UserInfoCards","infoUserCards","numberTitle","doubleRangeContainer","Search","handlePressSearch","request","setRequest","placeholder","TableHeaderPacks","cardsArrow","setCardsArrow","updatedArrow","setUpdatedArrow","tableHeader","cardsTitle","downArrow","upArrow","updatedTitle","Modal","active","setActive","children","modalContainer","modalContent","stopPropagation","buttonModal","DeletePackForm","formContainer","cancelButton","deletePack","deleteButton","EditPackForm","onReset","resetForm","htmlFor","label","inputForm","handleChange","errorContainer","buttonWrapper","updateButton","TableDataPacks","cardsCount","updatedDate","updatedTime","appUserId","createdBy","activeDeleteModal","setActiveDeleteModal","activeEditModal","setActiveEditModal","tableData","buttonsContainer","disabled","editLearnButton","localStorage","setItem","TablePacks","packsData","isFetchingPacks","tableContainer","pack","user_name","noPacksTitle","SuperSelect","options","onChangeOption","mappedOptions","o","i","Paginator","itemsTotalCount","changePageCount","onPageChanges","paginatorPage","Math","ceil","marginPagesDisplayed","pageRangeDisplayed","previousLabel","previousClassName","prev","nextLabel","nextClassName","next","activeClassName","selectedPage","onPageChange","selected","containerClassName","container","pageClassName","sortContainer","superSelect","AddPackForm","form","formWrapper","saveButton","Profile","activeModal","setActiveModal","id","minCards","maxCards","updatedDirection","useCallback","blur","onPacksPageChanges","newPackName","prompt","changePacksPageCount","LOGIN","profileContainer","info","packslist","packslistTitle","search_AddButtonContainer","search","addButtonContainer","addPackButton","PageNotFound","pageNotFoundContainer","CheckPassword","checkPasswordContainer","imgContainer","letter","firstNote","secondNote","RestorePassword","restorePasswordContainer","inputEmail","reLogin","NewPassword","token","useParams","newPasswordContainer","inputPassword","margin","note","SuperCheckbox","onChangeChecked","checked","TestComponents","testComponentsContainer","componentsContainer","PersonalInfo","history","useHistory","ava","setAva","nickname","setNickname","infoContainer","imgWrapper","inputNicknameAvatar","push","registerButton","result","editUserProfileTC","Register","confirmPassword","changeTypeHandler","registrationContainer","HeaderMain","finalClass","setFinalClass","location","useLocation","clickPackListProfileHandler","headerContainer","wrapper","logo","linksContainer","linkContainer","PACKS_LIST","pathname","onMouseEnter","onMouseOut","tabIndex","CHAT","logoutBtn","PacksList","currentUserId","activeClass","setActiveClass","buttonName","setButtonName","getMyPacksList","getAllPacksList","packlistContainer","ownerTitle","myButton","allButton","TableHeaderCards","gridChangeClass","EditCardForm","DeleteCardForm","deleteCard","TableDataCards","currentPackUserId","size","edit","color2","rating","editButton","TableCards","cardsData","isFetchingCards","noCardsTitle","AddCardForm","CardsList","searchQuestion","setPackId","onCardsPageChanges","changeCardsPageCount","cardslistContainer","cardslist","arrowTitleContainer","arrow","cardslistTitle","grades","Learn","showAnswer","setShowAnswer","currentGrade","setCurrentGrade","getItem","cancelHandler","goBack","setGradeHandler","target","defaultValue","addCard","sum","reduce","acc","rand","random","newSum","getCard","learnContainer","answerTitle","index","answers","buttonsContainerAnswer","cancelAnswerButton","nextButton","noCards","showAnswerButton","Chat","setMessages","anchor","useRef","setMessage","io","socket","emit","on","disconnect","current","scrollIntoView","behavior","mappedMessages","messageContainer","nickName","user","chatContainer","chatScreenContainer","chatScreen","ref","bar","text","preventDefault","CARDS_LIST","LEARN","USER_INFO","REGISTRATION","TEST_COMPONENTS","PAGE_NOT_FOUND","RESTORE_PASSWORD","NEW_PASSWORD","App","mainStyles","appWrapper","appWrapperContent","exact","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e2c98137.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Preloader_loader__6QB1q\",\"load7\":\"Preloader_load7__2zpZX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rangeContainer\":\"DoubleRange_rangeContainer__F34VD\",\"numberTitle\":\"DoubleRange_numberTitle__jl1cZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"packlistContainer\":\"PacksList_packlistContainer__203H9\",\"card\":\"PacksList_card__4iZ9t\",\"info\":\"PacksList_info__1gH48\",\"ownerTitle\":\"PacksList_ownerTitle__G6PSA\",\"buttonsContainer\":\"PacksList_buttonsContainer__cNOXd\",\"active\":\"PacksList_active__2VHiG\",\"myButton\":\"PacksList_myButton__35CDO\",\"allButton\":\"PacksList_allButton__2ktB-\",\"numberTitle\":\"PacksList_numberTitle__1p9tV\",\"packslist\":\"PacksList_packslist__3okA6\",\"packslistTitle\":\"PacksList_packslistTitle__1aQ_O\",\"search_AddButtonContainer\":\"PacksList_search_AddButtonContainer__P3a5F\",\"search\":\"PacksList_search__uEFwQ\",\"addButtonContainer\":\"PacksList_addButtonContainer__2L2UU\",\"addPackButton\":\"PacksList_addPackButton__37DlD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginContainer\":\"Login_loginContainer__1SVOg\",\"card\":\"Login_card__2mLHC\",\"title\":\"Login_title__2UUgW\",\"subtitle\":\"Login_subtitle__DbChu\",\"titleEmail\":\"Login_titleEmail__1iUd3\",\"titlePassword\":\"Login_titlePassword__3ZnqY\",\"inputContainer\":\"Login_inputContainer__JcY_7\",\"eye\":\"Login_eye__1spUq\",\"inputEmailPassword\":\"Login_inputEmailPassword__20Vs6\",\"checkbox\":\"Login_checkbox__2J4mn\",\"rememberMe\":\"Login_rememberMe__3YBcc\",\"restorePassword\":\"Login_restorePassword__PgDBI\",\"buttonContainer\":\"Login_buttonContainer__1lcN7\",\"button\":\"Login_button__2_yDM\",\"newAccount\":\"Login_newAccount__3CJO5\",\"signUp\":\"Login_signUp__2tk-n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registrationContainer\":\"Register_registrationContainer__UmmAC\",\"card\":\"Register_card___EsZn\",\"title\":\"Register_title__27VHU\",\"subtitle\":\"Register_subtitle__3mACY\",\"titleEmail\":\"Register_titleEmail__2SneJ\",\"titlePassword\":\"Register_titlePassword__eIshG\",\"inputContainer\":\"Register_inputContainer__1dcrn\",\"eye\":\"Register_eye__JXYXU\",\"inputEmailPassword\":\"Register_inputEmailPassword__1lV5L\",\"buttonContainer\":\"Register_buttonContainer__37yYJ\",\"cancelButton\":\"Register_cancelButton__Kmh2o\",\"registerButton\":\"Register_registerButton__EbWTP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"learnContainer\":\"Learn_learnContainer__31nqL\",\"card\":\"Learn_card__lYbnu\",\"title\":\"Learn_title__3UJdH\",\"answerTitle\":\"Learn_answerTitle__1JvsM\",\"answers\":\"Learn_answers__3RsWr\",\"label\":\"Learn_label__2sZWu\",\"buttonsContainer\":\"Learn_buttonsContainer__MYfTw\",\"cancelButton\":\"Learn_cancelButton__3L1vc\",\"showAnswerButton\":\"Learn_showAnswerButton__1dlpG\",\"buttonsContainerAnswer\":\"Learn_buttonsContainerAnswer__g--OK\",\"cancelAnswerButton\":\"Learn_cancelAnswerButton__1V-Ny\",\"nextButton\":\"Learn_nextButton__2pU6x\",\"noCards\":\"Learn_noCards__3D1ZM\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from 'axios'\r\nimport {DefaultResponseType} from \"./apiRestore\";\r\n\r\nconst instance = axios.create({\r\n    // baseURL: \"http://localhost:7542/2.0/\",\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0\",\r\n    withCredentials: true,\r\n});\r\n\r\nexport const authAPI = {\r\n    login(data: LoginParamsType) {\r\n        return instance.post<LoginResponseType>(\"auth/login\", data)\r\n    },\r\n    logout() {\r\n        return instance.delete<DefaultResponseType>(\"auth/me\")\r\n    },\r\n    isAuthorized () {\r\n        return instance.post<LoginResponseType>(\"auth/me\",{})\r\n    }\r\n}\r\n\r\n\r\nexport type LoginParamsType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\nexport type LoginResponseType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar: string\r\n    publicCardPacksCount: number\r\n    created: string\r\n    updated: string\r\n    isAdmin: boolean\r\n    verified: boolean\r\n    rememberMe: boolean\r\n    error?: string\r\n}\r\n","import axios from 'axios'\r\nimport {LoginResponseType} from \"./apiLogin\";\r\n\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    // baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true\r\n})\r\n\r\n//api types\r\n\r\nexport const profileApi = {\r\n    editUserNameAvatar(name: string, avatar: string) {\r\n        return axiosInstance.put<{updatedUser: LoginResponseType}>('/auth/me', {\r\n            name,\r\n            avatar\r\n        })\r\n    }\r\n\r\n}","import {LoginResponseType} from '../m3-dal/apiLogin';\r\nimport {AppThunkType} from './store';\r\nimport {profileApi} from '../m3-dal/apiProfile';\r\nimport {setLoginLoading} from './authReducer';\r\n\r\ntype InitialStateType = {\r\n    informationAboutUser: LoginResponseType\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    informationAboutUser: {\r\n        _id: '',\r\n        email: '',\r\n        name: '',\r\n        publicCardPacksCount: 0,\r\n        created: Date.toString(),\r\n        updated: Date.toString(),\r\n        isAdmin: false,\r\n        verified: false,\r\n        rememberMe: false,\r\n        avatar: '',\r\n        error: ''\r\n    }\r\n}\r\n\r\n/*export type LoginResponseType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar?: string\r\n    publicCardPacksCount: number\r\n    created: Date\r\n    updated: Date\r\n    isAdmin: boolean\r\n    verified: boolean\r\n    rememberMe: boolean\r\n    error?: string\r\n}*/\r\n\r\nexport const profileReducer = (state: InitialStateType = initialState, action: ProfileActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'profile/SET-INFORMATION-ABOUT-USER':\r\n            return {...state, informationAboutUser: action.data}\r\n        case 'profile/SET-UPDATED-USER':\r\n            return {...state, informationAboutUser: action.updatedUser}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setInformationAboutUserAC = (data: LoginResponseType) =>\r\n    ({type: 'profile/SET-INFORMATION-ABOUT-USER', data} as const)\r\n\r\nexport const setUpdatedUserAC = (updatedUser: LoginResponseType) =>\r\n    ({type: 'profile/SET-UPDATED-USER', updatedUser} as const)\r\n\r\n\r\nexport const editUserProfileTC = (name: string, avatar: string): AppThunkType => async (dispatch) => {\r\n    dispatch(setLoginLoading(true))\r\n    try {\r\n        let result = await profileApi.editUserNameAvatar(name, avatar)\r\n        dispatch(setUpdatedUserAC(result.data.updatedUser))\r\n    } catch (err) {\r\n        const error = err.response\r\n            ?\r\n            err.response.data.error\r\n            :\r\n            (err.message + ', more details in the console')\r\n        console.log(`error: ${error}`)\r\n    } finally {\r\n        dispatch(setLoginLoading(false))\r\n    }\r\n    console.log('yes')\r\n}\r\n\r\nexport type ProfileActionsType = ReturnType<typeof setInformationAboutUserAC | typeof setUpdatedUserAC>\r\n","import {authAPI, LoginParamsType} from '../m3-dal/apiLogin';\r\nimport {setInformationAboutUserAC} from './profileReducer';\r\nimport {AppRootDispatch, AppThunkType} from './store';\r\nimport {createAsyncThunk, createSlice, PayloadAction} from '@reduxjs/toolkit';\r\n\r\ntype InitialStateType = {\r\n    isFetching: boolean\r\n    isLoggedIn: boolean\r\n    error: string | null\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    isFetching: false,\r\n    isLoggedIn: false,\r\n    error: null\r\n}\r\n\r\nexport const loginTC = createAsyncThunk<{ isLoggedIn: boolean }, LoginParamsType, {\r\n    dispatch: AppRootDispatch, rejectValue: { error: string }\r\n}>('auth/login', async (param: LoginParamsType, thunkAPI) => {\r\n    thunkAPI.dispatch(setLoginLoading(true))\r\n    try {\r\n        const res = (await authAPI.login(param)).data\r\n        thunkAPI.dispatch(setInformationAboutUserAC(res))\r\n        return {isLoggedIn: true}\r\n    } catch (e) {\r\n        const error: string = e.response\r\n            ? e.response.data.error\r\n            : (e.messages + ', more details in the console')\r\n        return thunkAPI.rejectWithValue({error})\r\n    } finally {\r\n        thunkAPI.dispatch(setLoginLoading(false))\r\n    }\r\n})\r\n\r\nexport const logoutTC = createAsyncThunk<{ isLoggedIn: false }>('auth/logout', async (arg, thunkAPI) => {\r\n    thunkAPI.dispatch(setLoginLoading(true))\r\n    try {\r\n        await authAPI.logout()\r\n        return {isLoggedIn: false}\r\n    } catch (e) {\r\n        const error: string = e.response\r\n            ? e.response.data.error\r\n            : (e.messages + ', more details in the console')\r\n        return thunkAPI.rejectWithValue({error})\r\n    } finally {\r\n        // thunkAPI.dispatch(setLoginLoading(false))\r\n    }\r\n})\r\n\r\n// export const loginTC_ = (data: LoginParamsType): AppThunkType => (dispatch) => {\r\n//     dispatch(setLoginLoading(true))\r\n//     authAPI.login(data)\r\n//         .then(res => {\r\n//             dispatch(setInformationAboutUserAC(res.data))\r\n//             dispatch(setIsLoggedIn(true))\r\n//         })\r\n//         .catch((e) => {\r\n//             const error = e.response\r\n//                 ? e.response.data.error\r\n//                 : (e.messages + ', more details in the console')\r\n//             dispatch(setLoginError(error))\r\n//         })\r\n//         .finally(() => {\r\n//             dispatch(setLoginLoading(false))\r\n//         })\r\n// }\r\n\r\nconst slice = createSlice({\r\n    name: 'auth',\r\n    initialState: initialState,\r\n    reducers: {\r\n        setIsLoggedIn(state, action: PayloadAction<boolean>) {\r\n            state.isLoggedIn = action.payload\r\n        },\r\n        setLoginError(state, action: PayloadAction<string | null>) {\r\n            state.error = action.payload\r\n        },\r\n        setLoginLoading(state, action: PayloadAction<boolean>) {\r\n            state.isFetching = action.payload\r\n        }\r\n    },\r\n    extraReducers: builder => {\r\n        builder.addCase(loginTC.fulfilled, (state, action) => {\r\n            state.isLoggedIn = action.payload.isLoggedIn\r\n        })\r\n        builder.addCase(loginTC.rejected, (state, action) => {\r\n            if(action.payload?.error){\r\n                state.error = action.payload.error\r\n            }\r\n        })\r\n        builder.addCase(logoutTC.fulfilled, (state, action) => {\r\n            state.isLoggedIn = action.payload.isLoggedIn\r\n            state.isFetching = false\r\n        })\r\n    }\r\n})\r\n\r\n//reducer\r\nexport const authReducer = slice.reducer\r\n\r\n//actions\r\nexport const {setIsLoggedIn, setLoginError, setLoginLoading} = slice.actions\r\n\r\n// thunks\r\n\r\n\r\nexport const isLoggedInApp = (): AppThunkType => (dispatch) => {\r\n    dispatch(setLoginLoading(true))\r\n    authAPI.isAuthorized()\r\n        .then(res => {\r\n            dispatch(setInformationAboutUserAC(res.data))\r\n            dispatch(setIsLoggedIn(true))\r\n        })\r\n        .catch((e) => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.messages + ', more details in the console')\r\n            dispatch(setLoginError(error))\r\n        })\r\n        .finally(() => {\r\n            dispatch(setLoginLoading(false))\r\n        })\r\n}\r\n\r\nexport type AuthActionsType = ReturnType<| typeof setIsLoggedIn\r\n    | typeof setLoginError\r\n    | typeof setLoginLoading> // изменили запись в одну строчку !!","import axios from 'axios'\r\n\r\nexport interface IRegisterData {\r\n  addedUser: {},\r\n  error?: string\r\n}\r\n\r\nconst instance = axios.create({\r\n  // baseURL: \"http://localhost:7542/2.0/\",\r\n  baseURL: 'https://neko-back.herokuapp.com/2.0',\r\n  withCredentials: true,\r\n\r\n})\r\n\r\nexport const ApiRegister = {\r\n  register(email: string, password: string) {\r\n    return instance.post<IRegisterData>(`auth/register`, {email, password})\r\n  },\r\n}\r\n","import {ApiRegister} from '../m3-dal/apiRegister'\r\nimport {AppThunkType} from './store'\r\nimport {createSlice, PayloadAction} from '@reduxjs/toolkit';\r\n\r\ntype InitialStateType = {\r\n    isRegistered: boolean,\r\n    error: string | null,\r\n    isFetching: boolean\r\n}\r\n\r\nexport const initialState: InitialStateType = {\r\n    isRegistered: false,\r\n    error: null,\r\n    isFetching: false,\r\n}\r\n\r\nconst slice = createSlice({\r\n    name: 'register',\r\n    initialState: initialState,\r\n    reducers: {\r\n        setRegisterSuccess(state, action: PayloadAction<boolean>) {\r\n            state.isRegistered = action.payload\r\n        },\r\n        setRegisterError(state, action: PayloadAction<string | null>) {\r\n            state.error = action.payload\r\n        },\r\n        setRegisterLoading(state, action: PayloadAction<boolean>) {\r\n            state.isFetching = action.payload\r\n        }\r\n    }\r\n\r\n})\r\n\r\n//reducer\r\nexport const registerReducer = slice.reducer\r\n\r\n//actions\r\nexport const {setRegisterError, setRegisterLoading, setRegisterSuccess} = slice.actions\r\n\r\n\r\nexport const register = (email: string, password: string): AppThunkType => async (dispatch) => {\r\n    dispatch(setRegisterLoading(true))\r\n    try {\r\n        await ApiRegister.register(email, password)\r\n        dispatch(setRegisterSuccess(true))\r\n    } catch (e) {\r\n        const error = e.response.data.error\r\n        dispatch(setRegisterError(error))\r\n    } finally {\r\n        dispatch(setRegisterLoading(false))\r\n    }\r\n}\r\n\r\nexport type RegisterActions = ReturnType<typeof setRegisterSuccess\r\n    | typeof setRegisterError\r\n    | typeof setRegisterLoading>;\r\n","import axios from 'axios'\r\n\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    // baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true\r\n})\r\n\r\n//api types\r\n\r\nexport type DefaultResponseType = {\r\n    info: string\r\n    error: string | null\r\n}\r\n\r\nlet backGroundColor = \"linear-gradient(180deg, #E6D4DE 0%, #9890C7 100%)\"\r\n\r\nexport const authApi = {\r\n    restorePassword(email: string) {\r\n        return axiosInstance.post<DefaultResponseType>('/auth/forgot', {\r\n            email,\r\n            message: `<div style='background: ${backGroundColor}; padding: 15px'>\r\n                      <p>To restore your password, follow the link below</p>\r\n                      <a href='https://georgeusynin.github.io/cards-react-redux/#/new_password/$token$'>Restore link</a>\r\n                      </div>`\r\n        })\r\n    },\r\n    setNewPassword(password: string, resetPasswordToken: string) {\r\n        return axiosInstance.post<DefaultResponseType>('/auth/set-new-password', {\r\n            password,\r\n            resetPasswordToken\r\n        })\r\n    }\r\n}","//types\r\n\r\nimport {AppThunkType} from \"./store\";\r\nimport {authApi} from \"../m3-dal/apiRestore\";\r\n\r\ntype InitialStateType = {\r\n    showEmailCheck: boolean\r\n    error: string | null\r\n    isNewPasswordCreated: boolean\r\n    isFetching: boolean\r\n}\r\n\r\nexport type RestorePasswordActionsType =\r\n\r\n    | ReturnType<typeof setShowEmailCheck>\r\n    | ReturnType<typeof setRestorePasswordError>\r\n    | ReturnType<typeof setIsNewPasswordCreated>\r\n    | ReturnType<typeof setRestorePasswordLoading>\r\n\r\n//actions\r\n\r\nexport const setShowEmailCheck = (showEmailCheck: boolean) => {\r\n    return {\r\n        type: 'cards/restorePassword/setShowEmailCheck',\r\n        payload: {\r\n            showEmailCheck\r\n        }\r\n    } as const\r\n}\r\n\r\nexport const setRestorePasswordError = (error: string | null) => {\r\n    return {\r\n        type: 'cards/restorePassword/setError',\r\n        payload: {\r\n            error\r\n        }\r\n    } as const\r\n}\r\nconst setIsNewPasswordCreated = (isNewPasswordCreated: boolean) => {\r\n    return {\r\n        type: 'cards/restorePassword/setIsNewPasswordCreated',\r\n        payload: {\r\n            isNewPasswordCreated\r\n        }\r\n    } as const\r\n}\r\n\r\nexport const setRestorePasswordLoading = (isFetching: boolean) => {\r\n    return {\r\n        type: 'cards/restorePassword/setRestorePasswordLoading',\r\n        payload: {\r\n            isFetching\r\n        }\r\n    } as const\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    showEmailCheck: false,\r\n    error: null,\r\n    isNewPasswordCreated: false,\r\n    isFetching: false\r\n}\r\n\r\nexport const restorePasswordReducer = (state: InitialStateType = initialState, action: RestorePasswordActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"cards/restorePassword/setShowEmailCheck\":\r\n        case \"cards/restorePassword/setError\":\r\n        case \"cards/restorePassword/setIsNewPasswordCreated\":\r\n        case 'cards/restorePassword/setRestorePasswordLoading':\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\n//thunk\r\n\r\nexport const restorePassword = (email: string): AppThunkType => (dispatch) => {\r\n    dispatch(setRestorePasswordLoading(true))\r\n    authApi.restorePassword(email)\r\n        .then(res => {\r\n            dispatch(setShowEmailCheck(true))\r\n        })\r\n        .catch(err => {\r\n            const error = err.response\r\n                ?\r\n                err.response.data.error\r\n                :\r\n                (err.message + ', more details in the console')\r\n            dispatch(setRestorePasswordError(error))\r\n        })\r\n        .finally(()=>{\r\n            dispatch(setRestorePasswordLoading(false))\r\n        })\r\n}\r\n\r\nexport const setNewPassword = (password: string, resetPasswordToken: string): AppThunkType => (dispatch) => {\r\n    dispatch(setRestorePasswordLoading(true))\r\n    authApi.setNewPassword(password, resetPasswordToken)\r\n        .then(res => {\r\n            debugger\r\n            dispatch(setIsNewPasswordCreated(true))\r\n        })\r\n        .catch(err => {\r\n            const error = err.response\r\n                ?\r\n                err.response.data.error\r\n                :\r\n                (err.message + ', more details in the console')\r\n            dispatch(setRestorePasswordError(error))\r\n        })\r\n        .finally(()=>{\r\n            dispatch(setRestorePasswordLoading(false))\r\n        })\r\n}","import axios from 'axios'\r\nimport {CardPackType} from \"../m2-bll/packsReducer\";\r\n\r\n\r\nexport type PacksResponseType = {\r\n    cardPacks: Array<CardPackType>\r\n    cardPacksTotalCount: number\r\n    maxCardsCount: number\r\n    minCardsCount: number\r\n    page: number\r\n    pageCount: number\r\n    token: string\r\n    tokenDeathTime: number\r\n}\r\n\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    // baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true\r\n})\r\n\r\nexport const packsApi = {\r\n    getPacks(packName?: string, min?: number, max?: number, sortPacks?: string, page?: number, pageCount?: number, user_id?: string) {\r\n        return axiosInstance.get<PacksResponseType>(\"/cards/pack\", {\r\n            params: {\r\n                packName,\r\n                min,\r\n                max,\r\n                sortPacks,\r\n                page,\r\n                pageCount,\r\n                user_id\r\n            }\r\n        }).then(res => res.data)\r\n    },\r\n    createNewPack(name: string, isPrivate: boolean = false) {\r\n        return axiosInstance.post<CardPackType>(\"cards/pack\", {\r\n            cardsPack: {\r\n                name,\r\n                isPrivate\r\n            }\r\n        })\r\n    },\r\n    deletePack(packId: string) {\r\n        return axiosInstance.delete<CardPackType>(`cards/pack?id=${packId}`)\r\n    },\r\n    editPack(_id: string, name: string) {\r\n        return axiosInstance.put<CardPackType>(`cards/pack`, {\r\n            cardsPack: {\r\n                _id,\r\n                name\r\n            }\r\n        })\r\n    }\r\n}","import {AppThunkType} from \"./store\";\r\nimport {packsApi, PacksResponseType} from \"../m3-dal/apiPacks\";\r\nimport {\r\n    CardsCountDirectionType,\r\n    UpdatedDirectionType\r\n} from \"../m1-ui/PacksList/TablePacks/TableHeaderPacks/TableHeaderPacks\";\r\n\r\nexport type CardPackType = {\r\n    _id: string\r\n    user_id: string\r\n    name: string\r\n    cardsCount: number\r\n    created: string\r\n    updated: string\r\n    user_name: string\r\n}\r\n\r\ntype PackRequestParameters = {\r\n    packName: string\r\n    maxCardsCount: number\r\n    minCardsCount: number\r\n    sortPacks: UpdatedDirectionType | CardsCountDirectionType\r\n    pageCount: number\r\n    page: number\r\n    user_id: string\r\n}\r\n\r\ntype InitialStateType = {\r\n    cardPacks: Array<CardPackType>\r\n    cardPacksRequestParameters: PackRequestParameters\r\n    cardPacksTotalCount: number\r\n    maxCardsCount: number\r\n    minCardsCount: number\r\n    isFetching: boolean\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    cardPacks: [],\r\n    cardPacksRequestParameters: {\r\n        page: 1,\r\n        pageCount: 6,\r\n        maxCardsCount: 0,\r\n        minCardsCount: 0,\r\n        sortPacks: \"0updated\",\r\n        packName: \"\",\r\n        user_id: \"\"\r\n    },\r\n    maxCardsCount: 0,\r\n    minCardsCount: 0,\r\n    cardPacksTotalCount: 0,\r\n    isFetching: false\r\n}\r\n\r\n//actions\r\n\r\nexport const setSearchName = (requestedName: string) =>\r\n    ({type: 'packs/SET-SEARCH-NAME', requestedName} as const)\r\n\r\nexport const setCurrentPage = (requestedPage: number) =>\r\n    ({type: 'packs/SET-CURRENT-PAGE', requestedPage} as const)\r\n\r\nexport const setUpdatedDirection = (direction: UpdatedDirectionType) =>\r\n    ({type: 'packs/SET-UPDATED-DIRECTION', direction} as const)\r\n\r\nexport const setCardsCountDirection = (direction: CardsCountDirectionType) =>\r\n    ({type: 'packs/SET-CARDS-COUNT-DIRECTION', direction} as const)\r\n\r\nconst setDataPacks = (dataPacks: PacksResponseType) =>\r\n    ({type: 'packs/SET-PACKS', dataPacks} as const)\r\n\r\nexport const setLoadingPacks = (isFetching: boolean) =>\r\n    ({type: 'packs/SET-LOADING-PACKS', isFetching} as const)\r\n\r\nexport const setUserId = (userId: string) =>\r\n    ({type: 'packs/SET-USER-ID', userId} as const)\r\n\r\nexport const setPageCount = (count: number) =>\r\n    ({type: 'packs/SET-PAGE-COUNT', count} as const)\r\n\r\nexport const setRangeSort = (range: number[]) =>\r\n    ({type: 'packs/SET-RANGE-SORT', range} as const)\r\n\r\n\r\nexport const packsReducer = (state: InitialStateType = initialState, action: PacksActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"packs/SET-PACKS\":\r\n            return {...state, ...action.dataPacks}\r\n        case \"packs/SET-USER-ID\":\r\n            return {...state, cardPacksRequestParameters: {...state.cardPacksRequestParameters, user_id: action.userId}}\r\n        case \"packs/SET-SEARCH-NAME\":\r\n            return {\r\n                ...state,\r\n                cardPacksRequestParameters: {...state.cardPacksRequestParameters, packName: action.requestedName}\r\n            }\r\n        case \"packs/SET-CURRENT-PAGE\":\r\n            return {\r\n                ...state,\r\n                cardPacksRequestParameters: {...state.cardPacksRequestParameters, page: action.requestedPage}\r\n            }\r\n        case \"packs/SET-UPDATED-DIRECTION\":\r\n        case \"packs/SET-CARDS-COUNT-DIRECTION\":\r\n            return {\r\n                ...state,\r\n                cardPacksRequestParameters: {...state.cardPacksRequestParameters, sortPacks: action.direction}\r\n            }\r\n        case \"packs/SET-PAGE-COUNT\":\r\n            return {\r\n                ...state,\r\n                cardPacksRequestParameters: {...state.cardPacksRequestParameters, pageCount: action.count}\r\n            }\r\n        case \"packs/SET-RANGE-SORT\":\r\n            return {\r\n                ...state,\r\n                cardPacksRequestParameters: {\r\n                    ...state.cardPacksRequestParameters,\r\n                    minCardsCount: action.range[0],\r\n                    maxCardsCount: action.range[1]\r\n                }\r\n            }\r\n        case \"packs/SET-LOADING-PACKS\":\r\n            return {...state, isFetching: action.isFetching}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//thunks\r\n\r\nexport const getDataPacks = (): AppThunkType => async (dispatch, getState) => {\r\n    dispatch(setLoadingPacks(true))\r\n\r\n    try {\r\n\r\n        const {\r\n            packName,\r\n            minCardsCount,\r\n            maxCardsCount,\r\n            sortPacks,\r\n            page,\r\n            pageCount,\r\n            user_id\r\n        } = getState().packs.cardPacksRequestParameters\r\n        dispatch(setLoadingPacks(true))\r\n        const packs = await packsApi.getPacks(packName, minCardsCount, maxCardsCount, sortPacks, page, pageCount, user_id)\r\n        dispatch(setDataPacks(packs))\r\n    } catch (e) {\r\n        console.log(e)\r\n    } finally {\r\n        dispatch(setLoadingPacks(false))\r\n    }\r\n}\r\n\r\nexport const createNewPack = (name: string, isPrivate?: boolean): AppThunkType => async (dispatch) => {\r\n    dispatch(setLoadingPacks(true))\r\n    try {\r\n        dispatch(setLoadingPacks(true))\r\n        await packsApi.createNewPack(name, isPrivate)\r\n        dispatch(getDataPacks())\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const deletePack = (packId: string): AppThunkType => async (dispatch) => {\r\n    dispatch(setLoadingPacks(true))\r\n    try {\r\n        dispatch(setLoadingPacks(true))\r\n        await packsApi.deletePack(packId)\r\n        dispatch(getDataPacks())\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const editPack = (packId: string, name: string): AppThunkType => async (dispatch) => {\r\n    dispatch(setLoadingPacks(true))\r\n    try {\r\n        await packsApi.editPack(packId, name)\r\n        dispatch(getDataPacks())\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\n\r\nexport type PacksActionType = ReturnType<typeof setSearchName\r\n    | typeof setDataPacks\r\n    | typeof setLoadingPacks\r\n    | typeof setCurrentPage\r\n    | typeof setUserId\r\n    | typeof setUpdatedDirection\r\n    | typeof setPageCount\r\n    | typeof setRangeSort\r\n    | typeof setCardsCountDirection>\r\n","import axios from 'axios'\r\n\r\nexport type CardResponseType = {\r\n    answer: string\r\n    answerImg: string\r\n    answerVideo: string\r\n    cardsPack_id: string\r\n    comments: string\r\n    created: string\r\n    grade: number\r\n    more_id: string\r\n    question: string\r\n    questionImg: string\r\n    questionVideo: string\r\n    rating: number\r\n    shots: number\r\n    type: string\r\n    updated: string\r\n    user_id: string\r\n    __v: number\r\n    _id: string\r\n}\r\n\r\nexport type CardsResponseType = {\r\n    cards: Array<CardResponseType>\r\n    cardsTotalCount: number\r\n    maxGrade: number\r\n    minGrade: number\r\n    packUserId: string\r\n    page: number\r\n    pageCount: number\r\n    token: string\r\n    tokenDeathTime: number\r\n}\r\n\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    // baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true\r\n})\r\n\r\nexport const cardsApi = {\r\n    getCards(cardsPack_id?: string, cardQuestion?: string, sortCards?: string, page?: number, pageCount?: number) {\r\n        return axiosInstance.get<CardsResponseType>(\"/cards/card\", {\r\n            params: {\r\n                cardQuestion,\r\n                cardsPack_id,\r\n                sortCards,\r\n                page,\r\n                pageCount,\r\n            }\r\n        }).then(res => res.data)\r\n    },\r\n    createNewCard(cardsPack_id: string, question: string, answer: string) {\r\n        return axiosInstance.post<CardResponseType>(\"cards/card\", {\r\n            card: {\r\n                cardsPack_id,\r\n                question,\r\n                answer\r\n            }\r\n        })\r\n    },\r\n    deleteCard(cardId: string) {\r\n        return axiosInstance.delete<CardResponseType>(`cards/card?id=${cardId}`)\r\n    },\r\n    editCard(_id: string, question: string, answer: string){\r\n        return axiosInstance.put<CardResponseType>(`cards/card`,{\r\n            card: {\r\n                _id,\r\n                question,\r\n                answer\r\n            }\r\n        })\r\n    }\r\n}","import {AppThunkType} from \"./store\";\r\nimport {CardResponseType, cardsApi, CardsResponseType} from \"../m3-dal/apiCards\";\r\n\r\n\r\ntype InitialStateType = {\r\n    cards: Array<CardResponseType>\r\n    cardsTotalCount: number\r\n    cardsRequestParameters: {\r\n        cardQuestion: string\r\n        sortCards: string\r\n        page: number\r\n        pageCount: number\r\n    }\r\n    cardsPack_id: string\r\n    cardPackName: string\r\n    packUserId: string\r\n    isFetching: boolean\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    cards: [],\r\n    cardsRequestParameters: {\r\n        cardQuestion: \"\",\r\n        sortCards: \"\",\r\n        page: 1,\r\n        pageCount: 6\r\n    },\r\n    cardsTotalCount: 0,\r\n    cardsPack_id: \"\",\r\n    cardPackName: \"\",\r\n    packUserId: \"\",\r\n    isFetching: false\r\n}\r\n\r\n\r\nexport const setSearchName = (requestedName: string) =>\r\n    ({type: 'cards/SET-SEARCH-NAME', requestedName} as const)\r\n\r\nexport const setDataCards = (dataCards: CardsResponseType) =>\r\n    ({type: 'cards/SET-CARDS', dataCards} as const)\r\n\r\nexport const setPackId = (packId: string) =>\r\n    ({type: 'cards/SET-PACK-ID', packId} as const)\r\n\r\nexport const setCardPackName = (packName: string) =>\r\n    ({type: 'cards/SET-PACK-NAME', packName} as const)\r\n\r\nexport const setCurrentPackId = (packId: string) =>\r\n    ({type: 'cards/SET-CURRENT-PACK-ID', packId} as const)\r\n\r\nexport const setCurrentPage = (requestedPage: number) =>\r\n    ({type: 'cards/SET-CURRENT-PAGE', requestedPage} as const)\r\n\r\nexport const setPageCount = (count: number) =>\r\n    ({type: 'cards/SET-PAGE-COUNT', count} as const)\r\n\r\nexport const setLoadingCards = (isFetching: boolean) =>\r\n    ({type: 'cards/SET-LOADING-CARDS', isFetching} as const)\r\n\r\n\r\nexport const cardsReducer = (state: InitialStateType = initialState, action: CardsActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"cards/SET-CARDS\":\r\n            return {...state, ...action.dataCards}\r\n        case \"cards/SET-PACK-ID\":\r\n            return {...state, cardsPack_id: action.packId}\r\n        case \"cards/SET-PACK-NAME\":\r\n            return {...state, cardPackName: action.packName}\r\n        case \"cards/SET-CURRENT-PAGE\":\r\n            return {...state, cardsRequestParameters: {...state.cardsRequestParameters, page: action.requestedPage}}\r\n        case \"cards/SET-PAGE-COUNT\":\r\n            return {...state, cardsRequestParameters: {...state.cardsRequestParameters, pageCount: action.count}}\r\n        case \"cards/SET-CURRENT-PACK-ID\":\r\n            return {...state, cardsPack_id: action.packId}\r\n        case \"cards/SET-SEARCH-NAME\":\r\n            return {\r\n                ...state,\r\n                cardsRequestParameters: {...state.cardsRequestParameters, cardQuestion: action.requestedName}\r\n            }\r\n        case \"cards/SET-LOADING-CARDS\":\r\n            return {...state, isFetching: action.isFetching}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//thunks\r\n\r\nexport const getDataCards = (): AppThunkType => async (dispatch, getState) => {\r\n    dispatch(setLoadingCards(true))\r\n    try {\r\n        const {\r\n            cardQuestion,\r\n            sortCards,\r\n            page,\r\n            pageCount\r\n        } = getState().cards.cardsRequestParameters\r\n        const cardsPack_id = getState().cards.cardsPack_id\r\n        const cards = await cardsApi.getCards(cardsPack_id, cardQuestion, sortCards, page, pageCount)\r\n        dispatch(setDataCards(cards))\r\n    } catch (e) {\r\n        console.log(e)\r\n    } finally {\r\n        dispatch(setLoadingCards(false))\r\n    }\r\n}\r\n\r\nexport const createNewCard = (question: string, answer: string): AppThunkType => async (dispatch, getState) => {\r\n    dispatch(setLoadingCards(true))\r\n    const cardsPack_id = getState().cards.cardsPack_id\r\n    try {\r\n        await cardsApi.createNewCard(cardsPack_id, question, answer)\r\n        dispatch(getDataCards())\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const deleteCard = (cardId: string): AppThunkType => async (dispatch) => {\r\n    dispatch(setLoadingCards(true))\r\n    try {\r\n        await cardsApi.deleteCard(cardId)\r\n        dispatch(getDataCards())\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const editCard = (cardId: string, question: string, answer: string): AppThunkType => async (dispatch) => {\r\n    dispatch(setLoadingCards(true))\r\n    try {\r\n        await cardsApi.editCard(cardId, question, answer)\r\n        dispatch(getDataCards())\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\n//\r\nexport type CardsActionType = ReturnType<typeof setDataCards\r\n    | typeof setPackId\r\n    | typeof setCardPackName\r\n    | typeof setCurrentPage\r\n    | typeof setPageCount\r\n    | typeof setSearchName\r\n    | typeof setLoadingCards\r\n    | typeof setCurrentPackId>","import axios from \"axios\";\r\nimport {CardsResponseType} from \"./apiCards\";\r\n\r\nexport type GradeResponseType = {\r\n    token: string\r\n    tokenDeathTime: number\r\n    updatedGrade:{\r\n        card_id: string\r\n        cardsPack_id: string\r\n        created: string\r\n        grade: 2\r\n        more_id: string\r\n        shots: 1\r\n        updated: string\r\n        user_id: string\r\n        __v: number\r\n        _id: string\r\n    }\r\n}\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    // baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true\r\n})\r\n\r\nexport const learnApi = {\r\n    getCards(cardsPack_id: string, pageCount: number) {\r\n        return axiosInstance.get<CardsResponseType>(\"/cards/card\", {\r\n            params: {\r\n                cardsPack_id,\r\n                pageCount\r\n            }\r\n        }).then(res => res.data)\r\n    },\r\n    sendGrade(grade: number, card_id?: string) {\r\n        return axiosInstance.put<GradeResponseType>(\"/cards/grade\", {\r\n            grade,\r\n            card_id\r\n        }).then(res => res.data)\r\n    },\r\n\r\n}","import {CardResponseType, CardsResponseType} from \"../m3-dal/apiCards\";\r\nimport {AppThunkType} from \"./store\";\r\nimport {learnApi} from \"../m3-dal/apiLearn\";\r\n\r\ntype InitialStateType = {\r\n    cards: Array<CardResponseType>\r\n    packName: string\r\n    packId: string\r\n    isFetching: boolean\r\n    changeCard: boolean\r\n    card: CardResponseType | null\r\n}\r\n\r\nconst initialState = {\r\n    cards: [],\r\n    packId: \"\",\r\n    packName: \"\",\r\n    isFetching: false,\r\n    changeCard: false,\r\n    card: null\r\n}\r\n\r\n\r\nexport const setPackName = (packName: string) => {\r\n    return {\r\n        type: \"learn/SET-PACK-NAME\",\r\n        packName\r\n    } as const\r\n}\r\nexport const setIsFetching = (isFetching: boolean) => {\r\n    return {\r\n        type: \"learn/SET-IS-FETCHING\",\r\n        isFetching\r\n    } as const\r\n}\r\n\r\nexport const setPackId = (packId: string) => {\r\n    return {\r\n        type: \"learn/SET-PACK-ID\",\r\n        packId\r\n    } as const\r\n}\r\nexport const setChangeCard = (isChanged: boolean) => {\r\n    return {\r\n        type: \"learn/CHANGE-CARD\",\r\n        isChanged\r\n    } as const\r\n}\r\nexport const addCard = (card: CardResponseType) => {\r\n    return {\r\n        type: \"learn/ADD-CARD\",\r\n        card\r\n    } as const\r\n}\r\n\r\nexport const setCards = (cards: CardsResponseType) => {\r\n    return {\r\n        type: \"learn/SET-CARDS\",\r\n        cards\r\n    } as const\r\n}\r\n\r\n\r\nexport const learnReducer = (state: InitialStateType = initialState, action: LearnActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"learn/SET-PACK-NAME\":\r\n            return {...state, packName: action.packName}\r\n        case \"learn/SET-IS-FETCHING\":\r\n            return {...state, isFetching: action.isFetching}\r\n        case \"learn/SET-PACK-ID\":\r\n            return {...state, packId: action.packId}\r\n        case \"learn/SET-CARDS\":\r\n            return {...state, ...action.cards}\r\n        case \"learn/CHANGE-CARD\":\r\n            return {...state, changeCard: action.isChanged}\r\n        case \"learn/ADD-CARD\":\r\n            return {...state, card: action.card}\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\n\r\nexport const getCardsToLearn = (): AppThunkType => async (dispatch, getState) => {\r\n    dispatch(setIsFetching(true))\r\n    try {\r\n        const packId = getState().learn.packId\r\n        const cards = await learnApi.getCards(packId, 10000)\r\n        dispatch(setCards(cards))\r\n        dispatch(setChangeCard(true))\r\n    } catch (e) {\r\n        console.log(e)\r\n    } finally {\r\n        dispatch(setIsFetching(false))\r\n    }\r\n}\r\nexport const sendCardGrade = (grade: number): AppThunkType => async (dispatch, getState) => {\r\n    try {\r\n        const card_id = getState().learn.card?._id\r\n        await learnApi.sendGrade(grade, card_id)\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\n\r\nexport type LearnActionsType = ReturnType<typeof setPackName\r\n    | typeof setIsFetching\r\n    | typeof setPackId\r\n    | typeof setCards\r\n    | typeof setChangeCard\r\n    | typeof addCard>","import {applyMiddleware} from \"redux\";\r\nimport {combineReducers, createStore} from \"redux\";\r\nimport thunk, {ThunkAction} from \"redux-thunk\";\r\nimport {AuthActionsType, authReducer} from \"./authReducer\";\r\nimport {ProfileActionsType, profileReducer} from \"./profileReducer\";\r\nimport {RegisterActions, registerReducer} from './registerReducer'\r\nimport {RestorePasswordActionsType, restorePasswordReducer} from \"./restorePasswordReducer\";\r\nimport {PacksActionType, packsReducer} from \"./packsReducer\";\r\nimport {CardsActionType, cardsReducer} from \"./cardsReducer\";\r\nimport {LearnActionsType, learnReducer} from \"./learnReducer\";\r\nimport {configureStore} from \"@reduxjs/toolkit\";\r\nimport {useDispatch} from 'react-redux';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    profile: profileReducer,\r\n    restorePassword: restorePasswordReducer,\r\n    register: registerReducer,\r\n    packs: packsReducer,\r\n    cards: cardsReducer,\r\n    learn: learnReducer\r\n})\r\n\r\nexport type AppActionsType = RestorePasswordActionsType | RegisterActions | AuthActionsType | ProfileActionsType | PacksActionType | CardsActionType | LearnActionsType\r\n\r\nexport type AppThunkType<ReturnType = void> = ThunkAction<ReturnType, AppRootStateType, unknown, AppActionsType>\r\n\r\n\r\nexport const store = configureStore({\r\n    reducer: rootReducer\r\n})\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\nexport type AppRootDispatch = typeof store.dispatch\r\n\r\nexport const useAppDispatch = () => useDispatch<AppRootDispatch>()\r\n\r\n//@ts-ignore\r\nwindow.store = store","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.scss'\r\nimport {debuglog} from \"util\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: (e: KeyboardEvent<HTMLInputElement>) => void\r\n    error?: Array<string | null>\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    },\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e)\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter(e) // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={type}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && error.map(err => {\r\n                return <div className={finalSpanClassName}>{err}</div>\r\n            })}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red,\r\n        className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","export default __webpack_public_path__ + \"static/media/eye.109a1739.svg\";","export default __webpack_public_path__ + \"static/media/closedEye.41390b0c.svg\";","import React from \"react\";\r\nimport cls from \"./Preloader.module.scss\"\r\n\r\nexport const Preloader = () => {\r\n    return (\r\n        <div className={cls.loader}></div>\r\n    )\r\n}","import React, {useState} from 'react'\r\nimport cls from './Login.module.scss'\r\nimport {useSelector} from 'react-redux';\r\nimport {AppRootStateType, useAppDispatch} from '../../m2-bll/store';\r\nimport {NavLink, Redirect} from 'react-router-dom';\r\nimport SuperInputText from '../common/SuperInput/SuperInputText';\r\nimport SuperButton from '../common/SuperButton/SuperButton';\r\nimport eye from '../../../assets/images/eye.svg'\r\nimport {InputTypeType} from '../NewPassword/NewPassword';\r\nimport closedEye from '../../../assets/images/closedEye.svg';\r\nimport {PATH} from '../../App';\r\nimport {FormikHelpers, useFormik} from 'formik';\r\nimport {loginTC, setLoginError} from '../../m2-bll/authReducer';\r\nimport {Preloader} from '../common/preloader/Preloader';\r\n\r\ntype FormValuesType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\nexport const Login = () => {\r\n\r\n    const dispatch = useAppDispatch()\r\n\r\n    const error = useSelector<AppRootStateType, string | null>(state => state.auth.error)\r\n\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn)\r\n\r\n    const isFetching = useSelector<AppRootStateType, boolean>(state => state.auth.isFetching)\r\n\r\n    const [type, setType] = useState<InputTypeType>('password')\r\n\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false\r\n        },\r\n        validate: (values) => {\r\n            if (!values.email) {\r\n                return {email: 'Required'}\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                return {email: 'Invalid email address'}\r\n            }\r\n            if (!values.password) {\r\n                return {password: 'Required'}\r\n            } else if (values.password.length < 8) {\r\n                return {password: 'Password must contain from 8 to 15 characters'}\r\n            } else if (values.password.length > 15) {\r\n                return {password: 'Password must contain from 8 to 15 characters'}\r\n            }\r\n        },\r\n        onSubmit: async (values, formikHelpers: FormikHelpers<FormValuesType>) => {\r\n            dispatch(loginTC(values))\r\n            // const action = await dispatch(loginTC(values))\r\n            // if (loginTC.rejected.match(action)) {\r\n            //     if (action.payload?.error.match(/user/)) {\r\n            //         debugger\r\n            //         formikHelpers.setFieldError('email', action.payload?.error)\r\n            //     } else if (action.payload?.error.match(/password/)) {\r\n            //         formikHelpers.setFieldError('password', action.payload?.error)\r\n            //     }\r\n            // }\r\n        }\r\n    })\r\n\r\n    const changeTypeHandler = () => {\r\n        type === 'text' ? setType('password') : setType('text')\r\n    }\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to={PATH.PROFILE}/>\r\n    }\r\n\r\n    return (\r\n        <div className={cls.loginContainer}>\r\n            {\r\n                isFetching\r\n                    ?\r\n                    <Preloader/>\r\n                    :\r\n                    <div className={cls.card}>\r\n                        <h2 className={cls.title}>It-incubator</h2>\r\n                        <h3 className={cls.subtitle}>Sign In</h3>\r\n                        <form onSubmit={formik.handleSubmit}>\r\n                            <label>\r\n                                <p className={cls.titleEmail}>Email</p>\r\n                                <div className={cls.inputContainer}>\r\n                                    <SuperInputText\r\n                                        {...formik.getFieldProps('email')}\r\n                                        className={cls.inputEmailPassword}\r\n                                        type={'text'}\r\n                                        onClick={() => dispatch(setLoginError(null))}\r\n                                        // name={'email'}\r\n                                        // onChange={formik.handleChange}\r\n                                        // onBlur={formik.handleBlur}\r\n                                        // value={formik.values.email}\r\n                                    />\r\n                                    {\r\n                                        formik.touched.email &&\r\n                                        formik.errors.email ? <div style={{color: 'red'}}>{formik.errors.email}</div> :\r\n                                            <div style={{color: 'red'}}>{error?.match(/user/) ? error : ''}</div>\r\n                                    }\r\n                                </div>\r\n                            </label>\r\n                            <label>\r\n                                <p className={cls.titlePassword}>Password</p>\r\n                                <div className={cls.inputContainer}>\r\n                                    <div className={cls.eye} onClick={changeTypeHandler}><img\r\n                                        src={type === 'password' ? closedEye : eye} alt=\"eye\"/></div>\r\n                                    <SuperInputText\r\n                                        {...formik.getFieldProps('password')}\r\n                                        className={cls.inputEmailPassword}\r\n                                        onClick={() => dispatch(setLoginError(null))}\r\n                                        type={type}\r\n                                        // name={'password'}\r\n                                        // onBlur={formik.handleBlur}\r\n                                        // onChange={formik.handleChange}\r\n                                        // value={formik.values.password}\r\n                                    />\r\n                                    {formik.touched.password && formik.errors.password ?\r\n                                        <div style={{color: 'red'}}>{formik.errors.password}</div> :\r\n                                        <div style={{color: 'red'}}>{error?.match(/password/) ? error : ''}</div>\r\n                                    }\r\n                                </div>\r\n                            </label>\r\n                            <div className={cls.checkbox}>\r\n                                <label>\r\n                                    <SuperInputText\r\n                                        {...formik.getFieldProps('rememberMe')}\r\n                                        type={'checkbox'}\r\n                                        // name={'rememberMe'}\r\n                                        // onChange={formik.handleChange}\r\n                                        // checked={formik.values.rememberMe}\r\n                                    />\r\n                                    <span className={cls.rememberMe}>Remember me</span>\r\n                                </label>\r\n                            </div>\r\n                            <NavLink to={'/restore_password'} className={cls.restorePassword}>Forgot Password</NavLink>\r\n                            <div className={cls.buttonContainer}>\r\n                                <SuperButton className={cls.button} type={'submit'}><span>Login</span></SuperButton>\r\n                            </div>\r\n                        </form>\r\n                        <p className={cls.newAccount}>Don't have an account</p>\r\n                        <div className={cls.signUp}>\r\n                            <NavLink to={'/registration'}>Sign Up</NavLink>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/avatar.e5117e8e.png\";","import React from \"react\";\r\nimport cls from \"./UserInfo.module.scss\"\r\nimport defaultAvatar from \"../../../../assets/images/avatar.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\ntype UserInfoType = {\r\n    avatar?: string\r\n    name: string\r\n}\r\n\r\nexport const UserInfo: React.FC<UserInfoType> = ({avatar, name}) => {\r\n    return (\r\n        <div className={cls.infoUser}>\r\n            <img className={cls.userPhoto} src={avatar ? avatar : defaultAvatar} alt={\"\"}/>\r\n            <p className={cls.userName}>{name}</p>\r\n            <div className={cls.editProfileWrapper}>\r\n                <NavLink to={'/information_about_user'}>Edit\r\n                    profile</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport 'rc-slider/assets/index.css'\r\n\r\nconst Slider = require('rc-slider')\r\nconst createSliderWithTooltip = Slider.createSliderWithTooltip\r\nconst Range = createSliderWithTooltip(Slider.Range)\r\n\r\ntype SuperDoubleRangePropsType = {\r\n  onChangeRange?: (value: [number, number]) => void\r\n  onAfterChange?: () => void\r\n  value?: [number, number]\r\n  min: number\r\n  max: number\r\n  step: number | null\r\n  included?: boolean\r\n  handleStyle?: Object[]\r\n  trackStyle?: Object[]\r\n  railStyle?: Object\r\n  dotStyle?: Object\r\n  activeDotStyle?: Object\r\n}\r\n\r\nconst SuperDoubleRange: React.FC<SuperDoubleRangePropsType> = (\r\n  {\r\n    onChangeRange,\r\n    onAfterChange,\r\n    value,\r\n    min,\r\n    max,\r\n    step,\r\n    included,\r\n    handleStyle,\r\n    trackStyle,\r\n    railStyle,\r\n    dotStyle,\r\n    activeDotStyle,\r\n  }) => {\r\n  \r\n  return (\r\n    <>\r\n      <Range\r\n        onChange={onChangeRange}\r\n        onAfterChange={onAfterChange}\r\n        value={value}\r\n        min={min}\r\n        max={max}\r\n        step={step}\r\n        included={included}\r\n        handleStyle={handleStyle}\r\n        trackStyle={trackStyle}\r\n        railStyle={railStyle}\r\n        dotStyle={dotStyle}\r\n        activeDotStyle={activeDotStyle}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SuperDoubleRange\r\n","import React, {useEffect, useState} from 'react'\r\nimport SuperDoubleRange from '../../common/SuperDoubleRange/SuperDoubleRange'\r\nimport styles from './DoubleRange.module.scss'\r\nimport {useDispatch} from 'react-redux'\r\nimport {setRangeSort} from '../../../m2-bll/packsReducer'\r\n\r\ntype DoubleRangeType = {\r\n  maxCount: number\r\n}\r\n\r\nexport const DoubleRange: React.FC<DoubleRangeType> = ({maxCount}) => {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const [min, setMin] = useState<number>(0)\r\n  const [max, setMax] = useState<number>(maxCount)\r\n\r\n  useEffect(() => setMax(maxCount), [maxCount])\r\n\r\n  const onChangeRange = (value: [number, number]) => {\r\n    if (min <= max) setMin(value[0])\r\n    if (max >= min) setMax(value[1])\r\n  }\r\n  const handleRange = () => {\r\n    dispatch(setRangeSort([min, max]))\r\n  }\r\n\r\n  if (maxCount === 0) return null\r\n\r\n  return (\r\n    <>\r\n      <SuperDoubleRange\r\n        value={[min, max]}\r\n        min={0}\r\n        max={maxCount}\r\n        step={1}\r\n        included={true}\r\n        onChangeRange={onChangeRange}\r\n        onAfterChange={handleRange}\r\n        handleStyle={[{borderColor: '#21268F', backgroundColor: '#21268F'}]}\r\n        trackStyle={[{width: '20px', backgroundColor: '#21268F'}]}\r\n        railStyle={{backgroundColor: 'grey'}}\r\n        dotStyle={{backgroundColor: 'red'}}\r\n        activeDotStyle={{borderColor: 'green'}}\r\n      />\r\n      <div className={styles.rangeContainer}>\r\n        {<span>{min}</span>}\r\n        <span>{max}</span>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport cls from './UserInfoCards.module.scss';\r\nimport {DoubleRange} from '../../PacksList/DoubleRange/DoubleRange';\r\nimport {useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../../m2-bll/store';\r\n\r\ntype UserInfoCardsType = {\r\n    publicCardPacksCount: number\r\n}\r\n\r\nexport const UserInfoCards: React.FC<UserInfoCardsType> = ({publicCardPacksCount}) => {\r\n\r\n    const maxCount = useSelector<AppRootStateType, number>(state => state.packs.maxCardsCount)\r\n\r\n    return (\r\n        <div className={cls.infoUserCards}>\r\n            <p className={cls.numberTitle}>Number of cards</p>\r\n            <div className={cls.doubleRangeContainer}>\r\n                <DoubleRange\r\n                    maxCount={maxCount}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {KeyboardEvent, useState} from 'react'\r\nimport SuperInputText from \"../SuperInput/SuperInputText\";\r\n\r\ntype SearchPropsType = {\r\n    className: string\r\n    handlePressSearch: (e: KeyboardEvent<HTMLInputElement>) => void\r\n}\r\n\r\nconst Search: React.FC<SearchPropsType> = ({className, handlePressSearch}) => {\r\n\r\n    const [request, setRequest] = useState<string>(\"\")\r\n\r\n    return (\r\n        <SuperInputText\r\n            value={request}\r\n            type={\"text\"}\r\n            onChangeText={setRequest}\r\n            onEnter={handlePressSearch}\r\n            placeholder={\"Search...\"}\r\n            className={className}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Search\r\n","export default __webpack_public_path__ + \"static/media/DownSort.f30a3c93.svg\";","export default __webpack_public_path__ + \"static/media/UpSort.944c187f.svg\";","import React, {useState} from \"react\";\r\nimport cls from \"./TableHeaderPacks.module.scss\"\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setCardsCountDirection, setUpdatedDirection} from \"../../../../m2-bll/packsReducer\";\r\nimport downArrow from \"../../../../../assets/images/DownSort.svg\"\r\nimport upArrow from \"../../../../../assets/images/UpSort.svg\"\r\n\r\n\r\ntype TableHeaderType = {\r\n    className: string\r\n}\r\ntype ArrowType = \"down\" | \"up\"\r\n\r\nexport type UpdatedDirectionType = \"0updated\" | \"1updated\"\r\n\r\nexport type CardsCountDirectionType = \"0cardsCount\" | \"1cardsCount\"\r\n\r\nexport const TableHeaderPacks: React.FC<TableHeaderType> = ({className}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [cardsArrow, setCardsArrow] = useState<ArrowType>('down')\r\n    const [updatedArrow, setUpdatedArrow] = useState<ArrowType>('down')\r\n\r\n    const changeUpdatedDirection = () => {\r\n        setUpdatedArrow(updatedArrow === \"down\" ? \"up\" : \"down\")\r\n        switch (updatedArrow) {\r\n            case \"down\":\r\n                dispatch(setUpdatedDirection(\"1updated\"))\r\n                break\r\n            case \"up\":\r\n                dispatch(setUpdatedDirection(\"0updated\"))\r\n                break\r\n        }\r\n    }\r\n\r\n    const changeCardsCountDirection = () => {\r\n        setCardsArrow(cardsArrow === \"down\" ? \"up\" : \"down\")\r\n        switch (cardsArrow) {\r\n            case \"down\":\r\n                dispatch(setCardsCountDirection(\"1cardsCount\"))\r\n                break\r\n            case \"up\":\r\n                dispatch(setCardsCountDirection(\"0cardsCount\"))\r\n                break\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={`${className} ${cls.tableHeader}`}>\r\n            <div>Name</div>\r\n            <div onClick={changeCardsCountDirection} className={cls.cardsTitle}>Cards <span>\r\n                <img src={cardsArrow === \"down\" ? downArrow : upArrow} alt=\"\"/>\r\n            </span></div>\r\n            <div onClick={changeUpdatedDirection} className={cls.updatedTitle}>Last Updated <span>\r\n                <img src={updatedArrow === \"down\" ? downArrow : upArrow} alt=\"\"/>\r\n            </span></div>\r\n            <div>Created by</div>\r\n            <div>Actions</div>\r\n        </div>\r\n    )\r\n}","import React, {Dispatch, SetStateAction} from 'react';\r\nimport style from './Modal.module.scss'\r\n\r\n\r\nconst Modal = ({active, setActive, children}: { active: boolean, setActive: Dispatch<SetStateAction<boolean>>,\r\n   // children: ReactChild | ReactChildren;\r\n    children: any;\r\n}) => {\r\n\r\n    return (\r\n        <div className={`${active\r\n            ? style.modalContainer + ' ' + style.active\r\n            : style.modalContainer}`} onClick={() => setActive(false)}>\r\n            <div className={`${active\r\n                ? style.modalContent + ' ' + style.active\r\n                : style.modalContent}`} onClick={e => e.stopPropagation()}>\r\n\r\n                {children}\r\n\r\n                <button onClick={() => setActive(false)} className={style.buttonModal}>X</button>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Modal;","import React, { Dispatch, SetStateAction } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { deletePack } from '../../../../../m2-bll/packsReducer'\r\nimport SuperButton from '../../../../common/SuperButton/SuperButton'\r\nimport styles from './DeletePackForm.module.scss'\r\n\r\ntype DeletePackFormPropsType = {\r\n  packId: string\r\n  packName: string\r\n  setActive: Dispatch<SetStateAction<boolean>>\r\n}\r\n\r\nexport const DeletePackForm = ({packName, packId, setActive}: DeletePackFormPropsType) => {\r\n  const dispatch = useDispatch()\r\n  \r\n  const handleDeletePack = () => {\r\n    dispatch(deletePack(packId))\r\n    setActive(false)\r\n  }\r\n  const handleCancel = () => {\r\n    setActive(false)\r\n  }\r\n  \r\n  return (\r\n    <form className={styles.formContainer}>\r\n      <h2>Delete Pack</h2>\r\n      <div className={styles.question}>Do you really want to remove <b>Pack Name</b> - <b>{packName}</b>?\r\n        <div>\r\n          All cards will be excluded from this course\r\n        </div>\r\n      </div>\r\n      <div className={styles.buttonContainer}>\r\n        <SuperButton\r\n          onClick={handleCancel}\r\n          className={styles.cancelButton}\r\n        >\r\n          Cancel\r\n        </SuperButton>\r\n        <SuperButton\r\n          onClick={handleDeletePack}\r\n          className={styles.deleteButton}\r\n        >\r\n          Delete\r\n        </SuperButton>\r\n      </div>\r\n    </form>\r\n  )\r\n}","import { useFormik } from 'formik'\r\nimport React, { ChangeEvent, Dispatch, SetStateAction, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { deletePack, editPack } from '../../../../../m2-bll/packsReducer'\r\nimport { AppRootStateType } from '../../../../../m2-bll/store'\r\nimport SuperButton from '../../../../common/SuperButton/SuperButton'\r\nimport SuperInputText from '../../../../common/SuperInput/SuperInputText'\r\nimport styles from './EditPackForm.module.scss'\r\n\r\ntype EditPackFormPropsType = {\r\n  packId: string\r\n  packName: string\r\n  setActive: Dispatch<SetStateAction<boolean>>\r\n}\r\n\r\ntype FormValues = {\r\n  packName: string\r\n}\r\n\r\nexport const EditPackForm = ({packName, packId, setActive}: EditPackFormPropsType) => {\r\n  const dispatch = useDispatch()\r\n  const formik = useFormik({\r\n    validate: (packName) => {\r\n      \r\n      if (!packName.packName) {\r\n        return {\r\n          packName: 'Pack is required',\r\n        }\r\n      }\r\n    },\r\n    initialValues: {\r\n      packName: packName,\r\n    },\r\n    onSubmit: async (packName: FormValues) => {\r\n      setActive(false)\r\n      await dispatch(editPack(packId, packName.packName))\r\n      packName.packName = ''\r\n    },\r\n    onReset: (values, {resetForm}) => resetForm(),\r\n  })\r\n  \r\n  const handleCancel = () => {\r\n    setActive(false)\r\n  }\r\n  \r\n  return (\r\n    <form className={styles.formContainer} onSubmit={formik.handleSubmit}>\r\n      <h2>Edit Pack Name</h2>\r\n      <div>\r\n        <label htmlFor=\"packName\" className={styles.label}>new pack name</label>\r\n        <SuperInputText\r\n          name=\"packName\"\r\n          type=\"packName\"\r\n          className={styles.inputForm}\r\n          onChange={formik.handleChange}\r\n          value={formik.values.packName}\r\n        />\r\n        {/*{formik.touched.packName}*/}\r\n      </div>\r\n      <div className={styles.errorContainer}>\r\n        {formik.errors.packName ? (\r\n          <div className={styles.error}>{formik.errors.packName}</div>) : null}\r\n      </div>\r\n      \r\n      <div className={styles.buttonWrapper}>\r\n        <SuperButton\r\n          onClick={handleCancel}\r\n          className={styles.cancelButton}\r\n          type={'reset'}\r\n        >\r\n          Cancel\r\n        </SuperButton>\r\n        <SuperButton\r\n          className={styles.updateButton}\r\n          type={'submit'}\r\n        >\r\n          Update\r\n        </SuperButton>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n","import React, {useState} from 'react'\r\nimport cls from './TableDataPacks.module.scss'\r\nimport SuperButton from '../../../common/SuperButton/SuperButton'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {useDispatch} from 'react-redux'\r\nimport {setCardPackName, setCurrentPackId, setSearchName} from '../../../../m2-bll/cardsReducer'\r\nimport Modal from '../../../common/Modal/Modal'\r\nimport {DeletePackForm} from './DeletePackForm/DeletePackForm'\r\nimport {EditPackForm} from './EditPackform/EditPackForm'\r\nimport {setIsFetching} from \"../../../../m2-bll/learnReducer\";\r\n\r\ntype TableDataPropsType = {\r\n    _id: string\r\n    user_id: string\r\n    name: string\r\n    cardsCount: number\r\n    updatedDate: string\r\n    updatedTime: string\r\n    appUserId: string\r\n    createdBy: string\r\n}\r\n\r\n\r\nexport const TableDataPacks: React.FC<TableDataPropsType> = ({\r\n                                                                 name,\r\n                                                                 _id,\r\n                                                                 cardsCount,\r\n                                                                 updatedDate,\r\n                                                                 updatedTime,\r\n\r\n                                                                 appUserId,\r\n                                                                 user_id,\r\n                                                                 createdBy,\r\n\r\n                                                                 children\r\n                                                             }) => {\r\n\r\n    const [activeDeleteModal, setActiveDeleteModal] = useState<boolean>(false)\r\n    const [activeEditModal, setActiveEditModal] = useState<boolean>(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const openDeleteModal = () => {\r\n        setActiveDeleteModal(true)\r\n    }\r\n    const openEditModal = () => {\r\n        setActiveEditModal(true)\r\n    }\r\n    const onClickLearnButtonHandler = () => {\r\n        localStorage.setItem(\"packName\", name)\r\n        dispatch(setIsFetching(true))\r\n    }\r\n\r\n    const onPackClickHandler = () => {\r\n        dispatch(setCardPackName(name))\r\n        dispatch(setCurrentPackId(user_id))\r\n        dispatch(setSearchName(''))\r\n    }\r\n\r\n    return (\r\n        <div className={cls.tableData}>\r\n            <div className={cls.name}>\r\n                <NavLink to={`/cardslist/${_id}`}\r\n                         onClick={onPackClickHandler}\r\n                className={cls.name}\r\n                >\r\n                    {name}\r\n                </NavLink>\r\n            </div>\r\n            <div>{cardsCount}</div>\r\n            <div>\r\n                <p>Date: {updatedDate}</p>\r\n                <p>Time: {updatedTime}</p>\r\n            </div>\r\n            <div>{createdBy}</div>\r\n            <Modal active={activeDeleteModal} setActive={setActiveDeleteModal}>\r\n                <DeletePackForm packName={name} packId={_id} setActive={setActiveDeleteModal}/>\r\n            </Modal>\r\n            <div className={cls.buttonsContainer}>\r\n                <SuperButton\r\n                    className={cls.deleteButton}\r\n                    onClick={openDeleteModal}\r\n                    disabled={user_id !== appUserId}\r\n                >\r\n                    <span>Delete</span>\r\n                </SuperButton>\r\n                <Modal active={activeEditModal} setActive={setActiveEditModal}>\r\n                    <EditPackForm packName={name} packId={_id} setActive={setActiveEditModal}/>\r\n                </Modal>\r\n                <SuperButton\r\n                    className={cls.editLearnButton}\r\n                    onClick={openEditModal}\r\n                    disabled={user_id !== appUserId}\r\n                >\r\n                    <span>Edit</span>\r\n                </SuperButton>\r\n                <SuperButton className={cls.editLearnButton}\r\n                             onClick={onClickLearnButtonHandler}\r\n                             disabled={cardsCount === 0}\r\n                >\r\n                    {\r\n                        cardsCount === 0\r\n                            ?\r\n                            <span>Learn</span>\r\n                            :\r\n                            <NavLink to={`/learn/${_id}`}>Learn</NavLink>\r\n                    }\r\n\r\n                </SuperButton>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport cls from \"./TablePacks.module.scss\"\r\nimport {TableHeaderPacks} from \"./TableHeaderPacks/TableHeaderPacks\";\r\nimport {TableDataPacks} from \"./TableDataPacks/TableDataPacks\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../m2-bll/store\";\r\nimport {CardPackType} from \"../../../m2-bll/packsReducer\";\r\nimport {Preloader} from \"../../common/preloader/Preloader\";\r\n\r\nexport const TablePacks: React.FC = () => {\r\n    const packsData = useSelector<AppRootStateType, Array<CardPackType>>(state => state.packs.cardPacks)\r\n    const appUserId = useSelector<AppRootStateType, string>(state => state.profile.informationAboutUser._id)\r\n    const isFetchingPacks = useSelector<AppRootStateType, boolean>(state => state.packs.isFetching)\r\n    const cardPacksTotalCount = useSelector<AppRootStateType, number>(state => state.packs.cardPacksTotalCount)\r\n\r\n    return (\r\n        <div className={cls.tableContainer}>\r\n            <TableHeaderPacks className={cls.tableHeader}/>\r\n            {\r\n                isFetchingPacks\r\n                    ?\r\n                    <Preloader/>\r\n                    :\r\n                    cardPacksTotalCount !== 0\r\n                        ?\r\n                        packsData.map(pack => {\r\n\r\n                            const updatedDate = pack.updated.slice(0, 10)\r\n                            const updatedTime = pack.updated.slice(11, 19)\r\n\r\n                            return (\r\n                                <TableDataPacks\r\n                                    name={pack.name}\r\n                                    _id={pack._id}\r\n                                    cardsCount={pack.cardsCount}\r\n                                    createdBy={pack.user_name}\r\n                                    updatedDate={updatedDate}\r\n                                    updatedTime={updatedTime}\r\n                                    user_id={pack.user_id}\r\n                                    key={pack._id}\r\n                                    appUserId={appUserId}\r\n\r\n                                />\r\n                            )\r\n                        })\r\n                        :\r\n                        <p className={cls.noPacksTitle}>You don't have any packs. Please create a new one</p>\r\n            }\r\n        </div>\r\n    )\r\n}","import React, { SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent } from 'react'\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n  options?: any[]\r\n  onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n  {\r\n    options,\r\n    onChange, onChangeOption,\r\n    ...restProps\r\n  }\r\n) => {\r\n  const mappedOptions: any[] = options ? options.map((o,i) =>\r\n    <option key={o + '-' + i}>{o}</option>) : [] // map options with key\r\n  \r\n  const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n    onChangeOption && onChangeOption(e.currentTarget.value)\r\n    onChange && onChange(e)\r\n  }\r\n  \r\n  return (\r\n    <select onChange={onChangeCallback} {...restProps}>\r\n      {mappedOptions}\r\n    </select>\r\n  )\r\n}\r\n\r\nexport default SuperSelect\r\n","import React from 'react'\r\nimport styles from './Paginator.module.scss'\r\nimport ReactPaginate from 'react-paginate'\r\nimport SuperSelect from '../SuperSelect/SuperSelect'\r\n\r\ntype PaginatorPropsType = {\r\n    pageCount: number\r\n    itemsTotalCount: number\r\n    onPageChanges: (page: number) => void\r\n    changePageCount: (count: number) => void\r\n}\r\n\r\n\r\nconst Paginator = ({pageCount, itemsTotalCount, changePageCount, onPageChanges}: PaginatorPropsType) => {\r\n\r\n    return <div className={styles.paginatorPage}>\r\n        <ReactPaginate\r\n            pageCount={Math.ceil(itemsTotalCount / pageCount)}\r\n            marginPagesDisplayed={1}\r\n            pageRangeDisplayed={5}\r\n            previousLabel={'<'}\r\n            previousClassName={styles.prev}\r\n            nextLabel={'>'}\r\n            nextClassName={styles.next}\r\n            activeClassName={styles.selectedPage}\r\n            onPageChange={(page) => onPageChanges(page.selected)}\r\n            containerClassName={styles.container}\r\n            pageClassName={styles.page}\r\n        />\r\n        <div className={styles.sortContainer}>\r\n            Show<SuperSelect\r\n            className={styles.superSelect}\r\n            options={[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]}\r\n            value={pageCount}\r\n            onChange={(e) => changePageCount(+e.currentTarget.value)}\r\n        /> Cards per Page\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Paginator","import React, { Dispatch, SetStateAction } from 'react'\r\nimport styles from './AddPackForm.module.scss'\r\nimport { useFormik } from 'formik'\r\nimport { useDispatch } from 'react-redux'\r\nimport { createNewPack } from '../../../m2-bll/packsReducer'\r\nimport SuperInputText from '../../common/SuperInput/SuperInputText'\r\nimport SuperButton from '../../common/SuperButton/SuperButton'\r\n\r\ntype FormPropsType = {\r\n  active: boolean\r\n  setActive: Dispatch<SetStateAction<boolean>>\r\n}\r\n\r\ntype FormValues = {\r\n  packName: string\r\n}\r\n\r\nexport const AddPackForm = ({setActive}: FormPropsType) => {\r\n  const dispatch = useDispatch()\r\n  const formik = useFormik({\r\n    validate: (packName) => {\r\n      \r\n      if (!packName.packName) {\r\n        return {\r\n          packName: 'Pack is required',\r\n        }\r\n      }\r\n    },\r\n    initialValues: {\r\n      packName: '',\r\n    },\r\n    onSubmit: async (values: FormValues) => {\r\n      setActive(false)\r\n      await dispatch(createNewPack(values.packName))\r\n      values.packName = ''\r\n    },\r\n  })\r\n  \r\n  const handleCancel = () => {\r\n    setActive(false)\r\n    formik.resetForm()\r\n  }\r\n  \r\n  return (\r\n    <form onSubmit={formik.handleSubmit} className={styles.form}>\r\n      <div className={styles.formWrapper}>\r\n        <h2 className={styles.title}>Add new pack</h2>\r\n        <div>\r\n          <label htmlFor=\"packName\" className={styles.label}>Name pack</label>\r\n          <SuperInputText\r\n            name=\"packName\"\r\n            type=\"packName\"\r\n            className={styles.inputForm}\r\n            onChange={formik.handleChange}\r\n            value={formik.values.packName}\r\n          />\r\n        </div>\r\n        <div className={styles.errorContainer}>\r\n          {formik.errors.packName ? (\r\n            <div className={styles.error}>{formik.errors.packName}</div>) : null}\r\n        </div>\r\n        <div className={styles.buttonContainer}>\r\n          <SuperButton\r\n            className={styles.cancelButton}\r\n            onClick={handleCancel}\r\n            title={'Cancel'}\r\n            type={'reset'}\r\n          >\r\n            Cancel\r\n          </SuperButton>\r\n          <SuperButton\r\n            className={styles.saveButton}\r\n            title={'Save'}\r\n            type={'submit'}\r\n          >\r\n            Save\r\n          </SuperButton>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n","import React, {KeyboardEvent, useCallback, useEffect, useState} from 'react'\r\nimport cls from './Profile.module.scss'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../m2-bll/store';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {isLoggedInApp} from '../../m2-bll/authReducer';\r\nimport {UserInfo} from './UserInfo/UserInfo';\r\nimport {UserInfoCards} from './UserInfoCards/UserInfoCards';\r\nimport {PATH} from '../../App';\r\nimport Search from '../common/Search/Search';\r\nimport SuperButton from '../common/SuperButton/SuperButton';\r\nimport {TablePacks} from '../PacksList/TablePacks/TablePacks';\r\nimport Paginator from '../common/Paginator/Paginator';\r\nimport {\r\n    createNewPack,\r\n    deletePack,\r\n    editPack, getDataPacks,\r\n    setCurrentPage,\r\n    setPageCount,\r\n    setSearchName, setUserId\r\n} from '../../m2-bll/packsReducer';\r\nimport {CardsCountDirectionType, UpdatedDirectionType} from '../PacksList/TablePacks/TableHeaderPacks/TableHeaderPacks';\r\nimport {AddPackForm} from '../PacksList/AddPackForm/AddPackForm';\r\nimport Modal from '../common/Modal/Modal';\r\n\r\n\r\nexport const Profile = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const error = useSelector<AppRootStateType, string | null>(state => state.auth.error)\r\n\r\n    const [activeModal, setActiveModal] = useState<boolean>(false)\r\n\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn)\r\n    const isFetching = useSelector<AppRootStateType, boolean>(state => state.auth.isFetching)\r\n    const avatar = useSelector<AppRootStateType, string>(state => state.profile.informationAboutUser.avatar)\r\n    const name = useSelector<AppRootStateType, string>(state => state.profile.informationAboutUser.name)\r\n    const publicCardPacksCount = useSelector<AppRootStateType, number>(state => state.profile.informationAboutUser.publicCardPacksCount)\r\n    const id = useSelector<AppRootStateType, string>(state => state.profile.informationAboutUser._id)\r\n    const cardPacksTotalCount = useSelector<AppRootStateType, number>(state => state.packs.cardPacksTotalCount)\r\n    const pageCount = useSelector<AppRootStateType, number>(state => state.packs.cardPacksRequestParameters.pageCount)\r\n    const minCards = useSelector<AppRootStateType, number>(state => state.packs.cardPacksRequestParameters.minCardsCount)\r\n    const maxCards = useSelector<AppRootStateType, number>(state => state.packs.cardPacksRequestParameters.maxCardsCount)\r\n    const page = useSelector<AppRootStateType, number>(state => state.packs.cardPacksRequestParameters.page)\r\n    const packName = useSelector<AppRootStateType, string>(state => state.packs.cardPacksRequestParameters.packName)\r\n    const updatedDirection = useSelector<AppRootStateType, UpdatedDirectionType | CardsCountDirectionType>(state => state.packs.cardPacksRequestParameters.sortPacks)\r\n\r\n    useEffect(() => {\r\n\r\n        if (!id) {\r\n            dispatch(isLoggedInApp())\r\n        } else if (!error && isLoggedIn && !isFetching){\r\n            dispatch(setUserId(id))\r\n            dispatch(getDataPacks())\r\n            dispatch(setUserId(''))\r\n        }\r\n    }, [id, dispatch, page, pageCount, packName, updatedDirection, minCards, maxCards, isLoggedIn, error])\r\n\r\n    const openModal = () => {\r\n        setActiveModal(true)\r\n    }\r\n\r\n    const handlePressSearch = useCallback((e: KeyboardEvent<HTMLInputElement>) => {\r\n        dispatch(setSearchName(e.currentTarget.value))\r\n        e.currentTarget.blur()\r\n    }, [dispatch])\r\n\r\n    const addPack = useCallback(() => {\r\n        const newPackName = prompt('Enter the name of the new pack: ')\r\n        if (newPackName)\r\n            dispatch(createNewPack(newPackName))\r\n    }, [dispatch])\r\n\r\n\r\n    const onPacksPageChanges = useCallback((page: number) => {\r\n        dispatch(setCurrentPage(page + 1))\r\n    }, [dispatch])\r\n\r\n    const changePacksPageCount = useCallback((count: number) => {\r\n        dispatch(setPageCount(count))\r\n    }, [dispatch])\r\n\r\n\r\n    if (error || !isLoggedIn) {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n\r\n    return (\r\n        <div className={cls.profileContainer}>\r\n            <div className={cls.card}>\r\n                <div className={cls.info}>\r\n                    <UserInfo avatar={avatar} name={name}/>\r\n                    <UserInfoCards publicCardPacksCount={publicCardPacksCount}/>\r\n                </div>\r\n                <div className={cls.packslist}>\r\n                    <h2 className={cls.packslistTitle}>My packs list</h2>\r\n                    <div className={cls.search_AddButtonContainer}>\r\n                        <Search className={cls.search} handlePressSearch={handlePressSearch}/>\r\n                        <Modal active={activeModal} setActive={setActiveModal}>\r\n                            <AddPackForm active={activeModal} setActive={setActiveModal}/>\r\n                        </Modal>\r\n                        <div className={cls.addButtonContainer}>\r\n                            <SuperButton className={cls.addPackButton} onClick={openModal}>\r\n                                <span>Add new pack</span>\r\n                            </SuperButton>\r\n                        </div>\r\n                    </div>\r\n                    <TablePacks/>\r\n                    {!!cardPacksTotalCount && <Paginator\r\n                        pageCount={pageCount}\r\n                        itemsTotalCount={cardPacksTotalCount}\r\n                        onPageChanges={onPacksPageChanges}\r\n                        changePageCount={changePacksPageCount}\r\n                    />}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport cls from './PageNotFound.module.css'\r\n\r\n\r\nexport const PageNotFound = () => {\r\n    return (\r\n        <div className={cls.pageNotFoundContainer}>\r\n            <h1>PageNotFound</h1>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/letter.bc3a4042.svg\";","import React from 'react'\r\nimport cls from './CheckPassword.module.scss'\r\nimport letter from '../../../assets/images/letter.svg'\r\nimport { NavLink } from 'react-router-dom'\r\nimport {PATH} from \"../../App\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setShowEmailCheck} from \"../../m2-bll/restorePasswordReducer\";\r\n\r\ntype CheckPasswordType = {\r\n    email: string\r\n}\r\n\r\nexport const CheckPassword: React.FC<CheckPasswordType> = ({email}) => {\r\n\r\n   const dispatch = useDispatch()\r\n\r\n    return (\r\n        <div className={cls.checkPasswordContainer}>\r\n            <div className={cls.card}>\r\n                <h2 className={cls.title}>It-incubator</h2>\r\n\r\n                <div className={cls.imgContainer}>\r\n                    <img src={letter} alt=\"\"/>\r\n                </div>\r\n\r\n                <h3 className={cls.subtitle}>Check email</h3>\r\n\r\n                <p className={cls.firstNote}>{`We've sent an Email with instructions to `}<span>{email}</span></p>\r\n                <p className={cls.secondNote}><NavLink to={PATH.LOGIN} onClick={()=>dispatch(setShowEmailCheck(false))}>Try logging in</NavLink> again when you change your password</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport cls from './RestorePassword.module.scss'\r\nimport SuperInputText from \"../common/SuperInput/SuperInputText\";\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../m2-bll/store\";\r\nimport {CheckPassword} from \"../CheckPassword/CheckPassword\";\r\nimport {restorePassword, setRestorePasswordError} from \"../../m2-bll/restorePasswordReducer\";\r\nimport {useFormik} from \"formik\";\r\nimport {Preloader} from \"../common/preloader/Preloader\";\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n}\r\n\r\nexport const RestorePassword = () => {\r\n\r\n    const showEmailCheck = useSelector<AppRootStateType, boolean>(state => state.restorePassword.showEmailCheck)\r\n\r\n    const error = useSelector<AppRootStateType, null | string>(state => state.restorePassword.error)\r\n\r\n    const isFetching = useSelector<AppRootStateType, boolean>(state => state.restorePassword.isFetching)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: ''\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {}\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            return errors\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(restorePassword(values.email))\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className={cls.restorePasswordContainer}>\r\n            {\r\n                isFetching\r\n                    ?\r\n                    <Preloader/>\r\n                    :\r\n                    showEmailCheck\r\n                        ?\r\n                        <CheckPassword email={formik.values.email}/>\r\n                        :\r\n                        <div className={cls.card}>\r\n                            <h2 className={cls.title}>It-incubator</h2>\r\n                            <h3 className={cls.subtitle}>Forgot your password?</h3>\r\n                            <form onSubmit={formik.handleSubmit}>\r\n                                <div className={cls.inputContainer}>\r\n                                    <SuperInputText\r\n                                        {...formik.getFieldProps('email')}\r\n                                        className={cls.inputEmail}\r\n                                        type={\"text\"}\r\n                                        placeholder={'Email'}\r\n                                        onClick={() => dispatch(setRestorePasswordError(null))}\r\n                                        // name={'email'}\r\n                                        // onChange={formik.handleChange}\r\n                                        // onBlur={formik.handleBlur}\r\n                                        // value={formik.values.email}\r\n                                    />\r\n                                    {\r\n                                        formik.touched.email &&\r\n                                        formik.errors.email ? <div style={{color: 'red'}}>{formik.errors.email}</div> :\r\n                                            <div style={{color: 'red'}}>{error}</div>\r\n                                    }\r\n                                </div>\r\n                                <p className={cls.firstNote}>Enter your email address and we will send\r\n                                    you further\r\n                                    instructions</p>\r\n                                <div className={cls.buttonContainer}>\r\n                                    <SuperButton className={cls.button}\r\n                                                 type={'submit'}><span>Send Instructions</span></SuperButton>\r\n                                </div>\r\n                            </form>\r\n                            <p className={cls.secondNote}>Did you remember your password?</p>\r\n                            <div className={cls.reLogin}>\r\n                                <NavLink to={'/login'}>Try logging in</NavLink>\r\n                            </div>\r\n                        </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport {Redirect, useParams} from 'react-router-dom'\r\nimport cls from './NewPassword.module.scss'\r\nimport SuperInputText from \"../common/SuperInput/SuperInputText\";\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../m2-bll/store\";\r\nimport {restorePassword, setNewPassword, setRestorePasswordError} from \"../../m2-bll/restorePasswordReducer\";\r\nimport eye from \"../../../assets/images/eye.svg\";\r\nimport closedEye from \"../../../assets/images/closedEye.svg\";\r\nimport {PATH} from \"../../App\";\r\nimport {useFormik} from \"formik\";\r\nimport {setLoginError} from \"../../m2-bll/authReducer\";\r\nimport {Preloader} from \"../common/preloader/Preloader\";\r\n\r\nexport type InputTypeType = \"password\" | \"text\" | \"checkbox\"\r\n\r\n\r\ntype FormikErrorType = {\r\n    password?: string\r\n}\r\n\r\nexport const NewPassword = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [type, setType] = useState<InputTypeType>(\"password\")\r\n\r\n    const isNewPasswordCreated = useSelector<AppRootStateType, boolean>(state => state.restorePassword.isNewPasswordCreated)\r\n\r\n    const isFetching = useSelector<AppRootStateType, boolean>(state => state.restorePassword.isFetching)\r\n\r\n    const error = useSelector<AppRootStateType,string | null>(state=>state.restorePassword.error)\r\n\r\n    const {token} = useParams<{ token: string }>();\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            password: ''\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {}\r\n            if (!values.password) {\r\n                errors.password = 'Required';\r\n            } else if (values.password.length < 8) {\r\n                errors.password = 'Password must contain from 8 to 15 characters';\r\n            } else if (values.password.length > 15) {\r\n                errors.password = 'Password must contain from 8 to 15 characters';\r\n            }\r\n            return errors\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(setNewPassword(values.password, token))\r\n        }\r\n    })\r\n\r\n    const changeTypeHandler = () => {\r\n        type === 'text' ? setType('password') : setType('text')\r\n    }\r\n\r\n    if (isNewPasswordCreated) {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n\r\n    return (\r\n        <div className={cls.newPasswordContainer}>\r\n            {\r\n                isFetching\r\n                    ?\r\n                    <Preloader/>\r\n                    :\r\n                    <div className={cls.card}>\r\n                        <h2 className={cls.title}>It-incubator</h2>\r\n                        <h3 className={cls.subtitle}>Create new Password</h3>\r\n                        <form onSubmit={formik.handleSubmit}>\r\n                            <div className={cls.inputContainer}>\r\n                                <div className={cls.eye} onClick={changeTypeHandler}><img\r\n                                    src={type === 'password' ? closedEye : eye} alt=\"eye\"/></div>\r\n                                <SuperInputText\r\n                                    {...formik.getFieldProps('password')}\r\n                                    className={cls.inputPassword}\r\n                                    onClick={() => dispatch(setRestorePasswordError(null))}\r\n                                    type={type}\r\n                                    placeholder={'Password'}\r\n                                    // name={'password'}\r\n                                    // onBlur={formik.handleBlur}\r\n                                    // onChange={formik.handleChange}\r\n                                    // value={formik.values.password}\r\n                                />\r\n                                {formik.touched.password && formik.errors.password ?\r\n                                    <div style={{color: 'red'}}>{formik.errors.password}</div> : <div style={{color: 'red', margin:'0px 30px'}}>{error}</div>\r\n                                }\r\n                            </div>\r\n                            <p className={cls.note}>Create new password and press the button below</p>\r\n\r\n                            <div className={cls.buttonContainer}>\r\n                                <SuperButton\r\n                                    className={cls.button}\r\n                                    type={'submit'}\r\n                                >\r\n                                    <span>Create</span>\r\n                                </SuperButton>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React from \"react\";\r\nimport cls from './TestComponents.module.css'\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport SuperInputText from \"../common/SuperInput/SuperInputText\";\r\nimport SuperCheckbox from \"../common/SuperCheckbox/SuperCheckbox\";\r\n\r\nexport const TestComponents = () => {\r\n    return (\r\n        <div className={cls.testComponentsContainer}>\r\n            <h1>Common components</h1>\r\n            <div className={cls.componentsContainer}>\r\n                <div>\r\n                    <h2>Button</h2>\r\n                    <SuperButton>\r\n                        Button\r\n                    </SuperButton>\r\n                </div>\r\n                <div>\r\n                    <h2>Input Text</h2>\r\n                    <SuperInputText/>\r\n                </div>\r\n                <div>\r\n                    <h2>CheckBox</h2>\r\n                    <SuperCheckbox/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useEffect, useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport cls from './PersonalInfo.module.scss'\r\nimport {editUserProfileTC} from \"../../../m2-bll/profileReducer\";\r\nimport {PATH} from \"../../../App\";\r\nimport {AppRootStateType} from \"../../../m2-bll/store\";\r\nimport defaultAvatar from '../../../../assets/images/avatar.png'\r\nimport SuperInputText from \"../../common/SuperInput/SuperInputText\";\r\nimport {isLoggedInApp} from \"../../../m2-bll/authReducer\";\r\nimport {Redirect, useHistory} from 'react-router-dom';\r\n\r\n\r\nexport const PersonalInfo: React.FC = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const id = useSelector<AppRootStateType, string>(state => state.profile.informationAboutUser._id)\r\n    const name = useSelector<AppRootStateType, string>(state => state.profile.informationAboutUser.name)\r\n    const avatar = useSelector<AppRootStateType, string>(state => state.profile.informationAboutUser.avatar)\r\n\r\n    const history = useHistory()\r\n\r\n    const error = useSelector<AppRootStateType, string | null>(state => state.auth.error)\r\n\r\n    let [ava, setAva] = useState<string>('')\r\n    let [nickname, setNickname] = useState<string>(name)\r\n\r\n    useEffect(() => {\r\n        if (!id) {\r\n            dispatch(isLoggedInApp())\r\n        }\r\n        setNickname(name)\r\n    }, [id])\r\n\r\n\r\n    const cancelHandler = () => {\r\n        history.push(PATH.PROFILE)\r\n    }\r\n    const saveHandler = () => {\r\n        dispatch(editUserProfileTC(nickname, ava))\r\n        history.push(PATH.PROFILE)\r\n    }\r\n\r\n    if (error) {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n\r\n\r\n    return (\r\n            <div className={cls.infoContainer}>\r\n                <div className={cls.card}>\r\n                    <h2 className={cls.title}>Personal Inforamtion</h2>\r\n                    <div className={cls.imgWrapper}>\r\n                        <img src={avatar ? avatar : defaultAvatar} alt='profile_photo'/>\r\n                    </div>\r\n                    <label>\r\n                        <p className={cls.titleEmail}>Nickname</p>\r\n                        <div className={cls.inputContainer}>\r\n                            <SuperInputText\r\n                                className={cls.inputNicknameAvatar}\r\n                                value={nickname}\r\n                                type={\"text\"}\r\n                                onChangeText={setNickname}\r\n                                // error={errorEmail}\r\n                            />\r\n                        </div>\r\n                    </label>\r\n                    <label>\r\n                        <p className={cls.titleEmail}>Avatar</p>\r\n                        <div className={cls.inputContainer}>\r\n                            <SuperInputText\r\n                                className={cls.inputNicknameAvatar}\r\n                                value={ava}\r\n                                type={\"text\"}\r\n                                onChangeText={setAva}\r\n                                // error={errorEmail}\r\n                            />\r\n                        </div>\r\n                    </label>\r\n                    <div className={cls.buttonContainer}>\r\n                        <button\r\n                            className={cls.cancelButton}\r\n                            onClick={cancelHandler}>\r\n                            <span>Cancel</span>\r\n                        </button>\r\n                        <button\r\n                            className={cls.registerButton}\r\n                            onClick={saveHandler}\r\n                        >\r\n                            <span>Save</span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    )\r\n}","import React, {useState} from 'react'\r\nimport cls from './Register.module.scss'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {register, setRegisterError} from '../../m2-bll/registerReducer'\r\nimport {AppRootStateType} from '../../m2-bll/store'\r\nimport SuperInputText from '../common/SuperInput/SuperInputText'\r\nimport {Redirect} from \"react-router\";\r\nimport eye from \"../../../assets/images/eye.svg\";\r\nimport {InputTypeType} from \"../NewPassword/NewPassword\";\r\nimport closedEye from \"../../../assets/images/closedEye.svg\";\r\nimport {PATH} from \"../../App\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {useFormik} from \"formik\";\r\nimport {Preloader} from \"../common/preloader/Preloader\";\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    confirmPassword?: string\r\n}\r\n\r\nexport const Register: React.FC = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: ''\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            if (!values.password) {\r\n                errors.password = 'Required';\r\n            } else if (values.password.length < 8) {\r\n                errors.password = 'Password must contain from 8 to 15 characters';\r\n            } else if (values.password.length > 15) {\r\n                errors.password = 'Password must contain from 8 to 15 characters';\r\n            }\r\n            if (!values.confirmPassword) {\r\n                errors.confirmPassword = 'Required';\r\n            } else if (values.password.length !== values.confirmPassword.length) {\r\n                errors.confirmPassword = \"Passwords don't match\";\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(register(values.email, values.password))\r\n        }\r\n    })\r\n\r\n    const error = useSelector<AppRootStateType, string | null>(state => state.register.error)\r\n    const isFetching = useSelector<AppRootStateType, boolean>(state => state.register.isFetching)\r\n    const isRegistered = useSelector<AppRootStateType, boolean>(state => state.register.isRegistered)\r\n\r\n    const history = useHistory()\r\n\r\n    const [type, setType] = useState<InputTypeType>(\"password\")\r\n\r\n    const cancelHandler = () => {\r\n        history.push(PATH.LOGIN)\r\n    }\r\n\r\n    const changeTypeHandler = () => {\r\n        type === 'text' ? setType('password') : setType('text')\r\n    }\r\n\r\n\r\n    // redirect logic\r\n    if (isRegistered) return <Redirect to={PATH.LOGIN}/>\r\n\r\n    return (\r\n        <div className={cls.registrationContainer}>\r\n            {\r\n                isFetching\r\n                    ?\r\n                    <Preloader/>\r\n                    :\r\n                    <div className={cls.card}>\r\n                        <h2 className={cls.title}>IT-Incubator</h2>\r\n                        <h3 className={cls.subtitle}>Sign Up</h3>\r\n                        <form onSubmit={formik.handleSubmit}>\r\n                            <label>\r\n                                <p className={cls.titleEmail}>Email</p>\r\n                                <div className={cls.inputContainer}>\r\n                                    <SuperInputText\r\n                                        {...formik.getFieldProps('email')}\r\n                                        className={cls.inputEmailPassword}\r\n                                        type={\"text\"}\r\n                                        onClick={() => dispatch(setRegisterError(null))}\r\n                                        // name={'email'}\r\n                                        // onChange={formik.handleChange}\r\n                                        // onBlur={formik.handleBlur}\r\n                                        // value={formik.values.email}\r\n                                    />\r\n                                    {\r\n                                        formik.touched.email &&\r\n                                        formik.errors.email ? <div style={{color: 'red'}}>{formik.errors.email}</div> :\r\n                                            <div style={{color: 'red'}}>{error}</div>\r\n                                    }\r\n                                </div>\r\n                            </label>\r\n                            <label>\r\n                                <p className={cls.titlePassword}>Password</p>\r\n                                <div className={cls.inputContainer}>\r\n                                    <div className={cls.eye} onClick={changeTypeHandler}><img\r\n                                        src={type === 'password' ? closedEye : eye} alt=\"eye\"/></div>\r\n                                    <SuperInputText\r\n                                        {...formik.getFieldProps('password')}\r\n                                        className={cls.inputEmailPassword}\r\n                                        type={type}\r\n                                        // name={'password'}\r\n                                        // onBlur={formik.handleBlur}\r\n                                        // onChange={formik.handleChange}\r\n                                        // value={formik.values.password}\r\n                                    />\r\n                                    {formik.touched.password && formik.errors.password ?\r\n                                        <div style={{color: 'red'}}>{formik.errors.password}</div> : null\r\n                                    }\r\n                                </div>\r\n                            </label>\r\n                            <label>\r\n                                <p className={cls.titlePassword}>Confirm Password</p>\r\n                                <div className={cls.inputContainer}>\r\n                                    <div className={cls.eye} onClick={changeTypeHandler}><img\r\n                                        src={type === 'password' ? closedEye : eye} alt=\"eye\"/></div>\r\n                                    <SuperInputText\r\n                                        {...formik.getFieldProps('confirmPassword')}\r\n                                        className={cls.inputEmailPassword}\r\n                                        type={type}\r\n                                        // name={'confirmPassword'}\r\n                                        // onBlur={formik.handleBlur}\r\n                                        // onChange={formik.handleChange}\r\n                                        // value={formik.values.confirmPassword}\r\n                                    />\r\n                                    {formik.touched.confirmPassword && formik.errors.confirmPassword ?\r\n                                        <div style={{color: 'red'}}>{formik.errors.confirmPassword}</div> : null}\r\n                                </div>\r\n                            </label>\r\n\r\n                            <div className={cls.buttonContainer}>\r\n                                <button\r\n                                    className={cls.cancelButton}\r\n                                    onClick={cancelHandler}>\r\n                                    <span>Cancel</span>\r\n                                </button>\r\n                                <button type={\"submit\"}\r\n                                        className={cls.registerButton}\r\n                                >\r\n                                    <span>Register</span>\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport {NavLink, useHistory, useLocation} from 'react-router-dom';\r\nimport cls from './HeaderMain.module.scss'\r\nimport {PATH} from '../../App';\r\nimport SuperButton from '../common/SuperButton/SuperButton';\r\nimport {logoutTC} from '../../m2-bll/authReducer';\r\nimport {useDispatch} from 'react-redux';\r\nimport {\r\n    setCurrentPage,\r\n    setPageCount,\r\n    setRangeSort,\r\n    setSearchName,\r\n    setUpdatedDirection,\r\n    setUserId\r\n} from '../../m2-bll/packsReducer';\r\n\r\n\r\nexport const HeaderMain = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [finalClass, setFinalClass] = useState(cls.active)\r\n\r\n\r\n    let location = useLocation()\r\n\r\n    const onClickHandler = () => {\r\n        dispatch(logoutTC())\r\n    }\r\n\r\n    const clickPackListProfileHandler = () => {\r\n        dispatch(setUserId(''))\r\n        dispatch(setRangeSort([0, 0]))\r\n        dispatch(setCurrentPage(1))\r\n        dispatch(setSearchName(''))\r\n        dispatch(setUpdatedDirection('0updated'))\r\n        dispatch(setPageCount(6))\r\n    }\r\n\r\n    return (\r\n        <div className={cls.headerContainer}>\r\n            <div className={cls.wrapper}>\r\n                <h1 className={cls.logo}>It-incubator</h1>\r\n                <div className={cls.linksContainer}>\r\n                    <div className={cls.linkContainer} onClick={clickPackListProfileHandler}>\r\n                        <NavLink to={PATH.PACKS_LIST}\r\n                                 className={location.pathname === PATH.PACKS_LIST ? finalClass : ''}\r\n                                 onMouseEnter={() => setFinalClass('')}\r\n                                 onMouseOut={() => setFinalClass(cls.active)}\r\n                                 tabIndex={1}>Packs\r\n                            list</NavLink>\r\n                    </div>\r\n                    <div className={cls.linkContainer} onClick={clickPackListProfileHandler}>\r\n                        <NavLink to={PATH.PROFILE} tabIndex={2}\r\n                                 className={location.pathname === PATH.PROFILE ? finalClass : ''}\r\n                                 onMouseEnter={() => setFinalClass('')}\r\n                                 onMouseOut={() => setFinalClass(cls.active)}\r\n                        >Profile</NavLink>\r\n                    </div>\r\n                    <div className={cls.linkContainer}>\r\n                        <NavLink to={PATH.CHAT} tabIndex={3}\r\n                                 className={location.pathname === PATH.CHAT ? finalClass : ''}\r\n                                 onMouseEnter={() => setFinalClass('')}\r\n                                 onMouseOut={() => setFinalClass(cls.active)}\r\n                        >Chat</NavLink>\r\n                    </div>\r\n                </div>\r\n                <div className={cls.buttonContainer}>\r\n                    <SuperButton onClick={onClickHandler} className={cls.logoutBtn}><span>Logout</span></SuperButton>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {KeyboardEvent, useCallback, useEffect, useState} from 'react';\r\nimport cls from './PacksList.module.scss'\r\nimport SuperButton from '../common/SuperButton/SuperButton';\r\nimport {TablePacks} from './TablePacks/TablePacks';\r\nimport Search from '../common/Search/Search';\r\n\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {getDataPacks, setCurrentPage, setPageCount, setSearchName, setUserId} from '../../m2-bll/packsReducer';\r\nimport {AppRootStateType} from '../../m2-bll/store';\r\nimport {isLoggedInApp} from '../../m2-bll/authReducer';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {PATH} from '../../App';\r\nimport {DoubleRange} from './DoubleRange/DoubleRange';\r\nimport Paginator from '../common/Paginator/Paginator';\r\nimport {CardsCountDirectionType, UpdatedDirectionType} from './TablePacks/TableHeaderPacks/TableHeaderPacks';\r\nimport Modal from '../common/Modal/Modal'\r\nimport {AddPackForm} from './AddPackForm/AddPackForm'\r\n\r\ntype ButtonNameType = 'my' | 'all'\r\n\r\nexport const PacksList = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const id = useSelector<AppRootStateType, string>(state => state.profile.informationAboutUser._id)\r\n\r\n    const error = useSelector<AppRootStateType, string | null>(state => state.auth.error)\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn)\r\n\r\n    const page = useSelector<AppRootStateType, number>(state => state.packs.cardPacksRequestParameters.page)\r\n    const pageCount = useSelector<AppRootStateType, number>(state => state.packs.cardPacksRequestParameters.pageCount)\r\n    const packName = useSelector<AppRootStateType, string>(state => state.packs.cardPacksRequestParameters.packName)\r\n    const updatedDirection = useSelector<AppRootStateType, UpdatedDirectionType | CardsCountDirectionType>(state => state.packs.cardPacksRequestParameters.sortPacks)\r\n    const currentUserId = useSelector<AppRootStateType, string>(state => state.packs.cardPacksRequestParameters.user_id)\r\n    const minCards = useSelector<AppRootStateType, number>(state => state.packs.cardPacksRequestParameters.minCardsCount)\r\n    const maxCards = useSelector<AppRootStateType, number>(state => state.packs.cardPacksRequestParameters.maxCardsCount)\r\n    const cardPacksTotalCount = useSelector<AppRootStateType, number>(state => state.packs.cardPacksTotalCount)\r\n    const maxCount = useSelector<AppRootStateType, number>(state => state.packs.maxCardsCount)\r\n    const isFetching = useSelector<AppRootStateType, boolean>(state => state.auth.isFetching)\r\n\r\n    const [activeModal, setActiveModal] = useState<boolean>(false)\r\n\r\n    const [activeClass, setActiveClass] = useState(cls.active)\r\n    const [buttonName, setButtonName] = useState<ButtonNameType>('all')\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (!id) {\r\n            dispatch(isLoggedInApp())\r\n        } else if (!error && isLoggedIn && !isFetching) {\r\n            dispatch(getDataPacks())\r\n        }\r\n    }, [id, dispatch, page, pageCount, packName, updatedDirection, minCards, maxCards, isLoggedIn, error, currentUserId])\r\n\r\n    // useEffect(() => {\r\n    //     if (!isLoggedIn) {\r\n    //         if (!error) dispatch(isLoggedInApp())\r\n    //     } else {\r\n    //         dispatch(getDataPacks())\r\n    //     }\r\n    // }, [isLoggedIn, dispatch, page, pageCount, packName, currentUserId, updatedDirection, minCards, maxCards])\r\n\r\n    const openModal = () => {\r\n        setActiveModal(true)\r\n    }\r\n\r\n    const getMyPacksList = useCallback(() => {\r\n        setButtonName('my')\r\n        dispatch(setUserId(id))\r\n    }, [id, dispatch])\r\n\r\n    const getAllPacksList = useCallback(() => {\r\n        setButtonName('all')\r\n        dispatch(setUserId(''))\r\n    }, [dispatch])\r\n\r\n    const onPacksPageChanges = useCallback((page: number) => {\r\n        dispatch(setCurrentPage(page + 1))\r\n    }, [dispatch])\r\n\r\n    const changePacksPageCount = useCallback((count: number) => {\r\n        dispatch(setPageCount(count))\r\n    }, [dispatch])\r\n\r\n    const handlePressSearch = useCallback((e: KeyboardEvent<HTMLInputElement>) => {\r\n        dispatch(setSearchName(e.currentTarget.value))\r\n        e.currentTarget.blur()\r\n    }, [dispatch])\r\n\r\n\r\n    if (error || !isLoggedIn) {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n\r\n    return (\r\n        <div className={cls.packlistContainer}>\r\n            <div className={cls.card}>\r\n                <div className={cls.info}>\r\n                    <p className={cls.ownerTitle}>Show packs cards</p>\r\n                    <div className={cls.buttonsContainer}>\r\n                        <SuperButton\r\n                            className={buttonName === 'my' ? `${cls.myButton} ${activeClass}` : cls.myButton}\r\n                            onClick={getMyPacksList}\r\n                            onMouseEnter={() => setActiveClass('')}\r\n                            onMouseOut={() => setActiveClass(cls.active)}\r\n                        >My</SuperButton>\r\n                        <SuperButton\r\n                            className={buttonName === 'all' ? `${cls.allButton} ${activeClass}` : cls.allButton}\r\n                            onClick={getAllPacksList}\r\n                            onMouseEnter={() => setActiveClass('')}\r\n                            onMouseOut={() => setActiveClass(cls.active)}\r\n                        >All</SuperButton>\r\n                    </div>\r\n                    <p className={cls.numberTitle}>Number of cards</p>\r\n                    <DoubleRange maxCount={maxCount}/>\r\n                </div>\r\n                <div className={cls.packslist}>\r\n                    <h2 className={cls.packslistTitle}>Packs list</h2>\r\n                    <div className={cls.search_AddButtonContainer}>\r\n                        <Search className={cls.search} handlePressSearch={handlePressSearch}/>\r\n                        <Modal active={activeModal} setActive={setActiveModal}>\r\n                            <AddPackForm active={activeModal} setActive={setActiveModal}/>\r\n                        </Modal>\r\n                        <div className={cls.addButtonContainer}>\r\n                            <SuperButton className={cls.addPackButton} onClick={openModal}>\r\n                                <span>Add new pack</span>\r\n                            </SuperButton>\r\n                        </div>\r\n                    </div>\r\n                    <TablePacks/>\r\n                    {!!cardPacksTotalCount && <Paginator\r\n                        pageCount={pageCount}\r\n                        itemsTotalCount={cardPacksTotalCount}\r\n                        onPageChanges={onPacksPageChanges}\r\n                        changePageCount={changePacksPageCount}\r\n                    />}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport cls from \"./TableHeaderCards.module.scss\"\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../../m2-bll/store\";\r\n\r\n\r\ntype TableHeaderType = {\r\n    className: string\r\n}\r\n\r\nexport const TableHeaderCards: React.FC<TableHeaderType> = ({className}) => {\r\n\r\n\r\n\r\n    const appUserId = useSelector<AppRootStateType, string>(state => state.profile.informationAboutUser._id)\r\n    const packUserId = useSelector<AppRootStateType, string>(state => state.cards.packUserId)\r\n\r\n    const gridChangeClass = appUserId === packUserId ? cls.gridChangeClass : \"\"\r\n\r\n    return (\r\n        <div className={`${className} ${cls.tableHeader} ${gridChangeClass}`}>\r\n            <div>Question</div>\r\n            <div>Answer</div>\r\n            <div>Last Updated</div>\r\n            <div>Grade</div>\r\n            {appUserId === packUserId && <div>Actions</div>}\r\n        </div>\r\n    )\r\n}","import { useFormik } from 'formik'\r\nimport React, { Dispatch, SetStateAction } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { editCard } from '../../../../../m2-bll/cardsReducer'\r\nimport SuperButton from '../../../../common/SuperButton/SuperButton'\r\nimport SuperInputText from '../../../../common/SuperInput/SuperInputText'\r\nimport styles from './EditCardForm.module.scss'\r\n\r\ntype EditCardFormPropsType = {\r\n  cardId: string\r\n  question: string\r\n  answer: string\r\n  setActive: Dispatch<SetStateAction<boolean>>\r\n}\r\n\r\ntype FormValues = {\r\n  question: string\r\n  answer: string\r\n}\r\n\r\nexport const EditCardForm = ({question,answer, cardId, setActive}: EditCardFormPropsType) => {\r\n  const dispatch = useDispatch()\r\n  const formik = useFormik({\r\n    validate: (values) => {\r\n      \r\n      if (!values.question) {\r\n        return {\r\n          question: 'Question is required',\r\n        }\r\n      }\r\n      if (!values.answer) {\r\n        return {\r\n          answer: 'Answer is required',\r\n        }\r\n      }\r\n    },\r\n    initialValues: {\r\n      question: question,\r\n      answer: answer,\r\n    },\r\n    onSubmit: async ({question, answer}: FormValues) => {\r\n      setActive(false)\r\n      await dispatch(editCard(cardId, question, answer))\r\n      question = ''\r\n      answer = ''\r\n    },\r\n  })\r\n  \r\n  const handleCancel = () => {\r\n    setActive(false)\r\n    formik.resetForm()\r\n  }\r\n  \r\n  return (\r\n    <form className={styles.formContainer} onSubmit={formik.handleSubmit}>\r\n      <h2>Edit Card</h2>\r\n      <div>\r\n        <label htmlFor=\"question\" className={styles.label}>new question</label>\r\n        <SuperInputText\r\n          name=\"question\"\r\n          type=\"text\"\r\n          className={styles.inputForm}\r\n          onChange={formik.handleChange}\r\n          value={formik.values.question}\r\n        />\r\n      </div>\r\n      <div className={styles.errorContainer}>\r\n        {formik.errors.question ? (\r\n          <div className={styles.error}>{formik.errors.question}</div>) : null}\r\n      </div>\r\n      \r\n      <div>\r\n        <label htmlFor=\"answer\" className={styles.label}>new answer</label>\r\n        <SuperInputText\r\n          name=\"answer\"\r\n          type=\"text\"\r\n          className={styles.inputForm}\r\n          onChange={formik.handleChange}\r\n          value={formik.values.answer}\r\n        />\r\n      </div>\r\n      <div className={styles.errorContainer}>\r\n        {formik.errors.answer ? (\r\n          <div className={styles.error}>{formik.errors.answer}</div>) : null}\r\n      </div>\r\n      \r\n      <div className={styles.buttonWrapper}>\r\n        <SuperButton\r\n          onClick={handleCancel}\r\n          className={styles.cancelButton}\r\n          type={'reset'}\r\n        >\r\n          Cancel\r\n        </SuperButton>\r\n        <SuperButton\r\n          className={styles.updateButton}\r\n          type={'submit'}\r\n        >\r\n          Update\r\n        </SuperButton>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n","import React, { Dispatch, SetStateAction } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { deleteCard } from '../../../../../m2-bll/cardsReducer'\r\nimport SuperButton from '../../../../common/SuperButton/SuperButton'\r\nimport styles from './DeleteCardForm.module.scss'\r\n\r\ntype DeleteCardFormPropsType = {\r\n  cardId: string\r\n  question: string\r\n  setActive: Dispatch<SetStateAction<boolean>>\r\n}\r\n\r\nexport const DeleteCardForm = ({question, cardId, setActive}: DeleteCardFormPropsType) => {\r\n  const dispatch = useDispatch()\r\n  \r\n  const handleDeletePack = () => {\r\n    dispatch(deleteCard(cardId))\r\n    setActive(false)\r\n  }\r\n  const handleCancel = () => {\r\n    setActive(false)\r\n  }\r\n  \r\n  return (\r\n    <form className={styles.formContainer}>\r\n      <h2>Delete Card</h2>\r\n      <div className={styles.question}>Do you really want to remove <b>Card </b> - <b>{question}</b>?\r\n        <div>\r\n          This question will be excluded from this pack\r\n        </div>\r\n      </div>\r\n      <div className={styles.buttonContainer}>\r\n        <SuperButton\r\n          onClick={handleCancel}\r\n          className={styles.cancelButton}\r\n        >\r\n          Cancel\r\n        </SuperButton>\r\n        <SuperButton\r\n          onClick={handleDeletePack}\r\n          className={styles.deleteButton}\r\n        >\r\n          Delete\r\n        </SuperButton>\r\n      </div>\r\n    </form>\r\n  )\r\n}","import React, { useState } from 'react'\r\nimport cls from './TableDataCards.module.scss'\r\nimport SuperButton from '../../../common/SuperButton/SuperButton'\r\nimport { useSelector } from 'react-redux'\r\nimport { AppRootStateType } from '../../../../m2-bll/store'\r\nimport Modal from '../../../common/Modal/Modal'\r\nimport { EditCardForm } from './EditCardForm/EditCardForm'\r\nimport { DeleteCardForm } from './DeleteCardForm/DeleteCardForm'\r\nimport ReactStars from 'react-stars'\r\n\r\ntype TableDataCardsPropsType = {\r\n    question: string\r\n    answer: string\r\n    updatedDate: string\r\n    updatedTime: string\r\n    grade: number\r\n    card_id: string\r\n}\r\n\r\n\r\nexport const TableDataCards: React.FC<TableDataCardsPropsType> = ({\r\n                                                                      question,\r\n                                                                      answer,\r\n                                                                      updatedDate,\r\n                                                                      updatedTime,\r\n                                                                      grade,\r\n\r\n                                                                      card_id,\r\n                                                                      children\r\n                                                                  }) => {\r\n    const [activeDeleteModal, setActiveDeleteModal] = useState<boolean>(false)\r\n    const [activeEditModal, setActiveEditModal] = useState<boolean>(false)\r\n\r\n    const appUserId = useSelector<AppRootStateType, string>(state => state.profile.informationAboutUser._id)\r\n    const currentPackUserId = useSelector<AppRootStateType, string>(state => state.cards.packUserId)\r\n\r\n    const gridChangeClass = appUserId === currentPackUserId ? cls.gridChangeClass : \"\"\r\n\r\n    const openDeleteModal = () => {\r\n        setActiveDeleteModal(true)\r\n    }\r\n    const openEditModal = () => {\r\n        setActiveEditModal(true)\r\n    }\r\n\r\n    return (\r\n        <div className={`${cls.tableData} ${gridChangeClass}`}>\r\n            <div>{question}</div>\r\n            <div>{answer}</div>\r\n            <div>\r\n                <p>Date: {updatedDate}</p>\r\n                <p>Time: {updatedTime}</p>\r\n            </div>\r\n            <div>\r\n                <ReactStars\r\n                    count={5}\r\n                    size={24}\r\n                    value={grade}\r\n                    edit={false}\r\n                    color2={'#ffd700'}\r\n                className={cls.rating}\r\n                />\r\n            </div>\r\n\r\n            {\r\n                appUserId === currentPackUserId\r\n                &&\r\n                <div className={cls.buttonsContainer}>\r\n                    <Modal active={activeDeleteModal} setActive={setActiveDeleteModal}>\r\n                        <DeleteCardForm question={question} cardId={card_id} setActive={setActiveDeleteModal}/>\r\n                    </Modal>\r\n                    <SuperButton\r\n                        onClick={openDeleteModal}\r\n                        className={cls.deleteButton}\r\n                    >\r\n                        <span>Delete</span>\r\n                    </SuperButton>\r\n                    <Modal active={activeEditModal} setActive={setActiveEditModal}>\r\n                        <EditCardForm\r\n                          question={question}\r\n                          answer={answer}\r\n                          cardId={card_id}\r\n                          setActive={setActiveEditModal}\r\n                        />\r\n                    </Modal>\r\n                    <SuperButton\r\n                        onClick={openEditModal}\r\n                        className={cls.editButton}\r\n                    >\r\n                        <span>Edit</span>\r\n                    </SuperButton>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport cls from \"./TableCards.module.scss\"\r\nimport {TableHeaderCards} from \"./TableHeaderCards/TableHeaderCards\";\r\nimport {TableDataCards} from \"./TableDataCards/TableDataCards\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../m2-bll/store\";\r\nimport {CardResponseType} from \"../../../m3-dal/apiCards\";\r\nimport {Preloader} from \"../../common/preloader/Preloader\";\r\n\r\nexport const TableCards: React.FC = () => {\r\n\r\n    const cardsData = useSelector<AppRootStateType, Array<CardResponseType>>(state => state.cards.cards)\r\n    const cardsTotalCount = useSelector<AppRootStateType, number>(state => state.cards.cardsTotalCount)\r\n    const isFetchingCards = useSelector<AppRootStateType, boolean>(state => state.cards.isFetching)\r\n    const appUserId = useSelector<AppRootStateType, string>(state => state.profile.informationAboutUser._id)\r\n    const packUserId = useSelector<AppRootStateType, string>(state => state.cards.packUserId)\r\n\r\n    return (\r\n        <div className={cls.tableContainer}>\r\n            <TableHeaderCards className={cls.tableHeader}/>\r\n            {\r\n                isFetchingCards\r\n                    ?\r\n                    <Preloader/>\r\n                    :\r\n                    cardsTotalCount !== 0\r\n                        ?\r\n                        cardsData.map(card => {\r\n\r\n                        const updatedDate = card.updated.slice(0, 10)\r\n                        const updatedTime = card.updated.slice(11, 19)\r\n\r\n                        return (\r\n\r\n                            <TableDataCards\r\n                                key={card._id}\r\n                                card_id={card._id}\r\n                                question={card.question}\r\n                                answer={card.answer}\r\n                                updatedDate={updatedDate}\r\n                                updatedTime={updatedTime}\r\n                                grade={card.grade}\r\n                            />\r\n                        )\r\n                    })\r\n                    :\r\n                        <>\r\n                            {\r\n                                appUserId === packUserId\r\n                                    ?\r\n                                    <p className={cls.noCardsTitle}>This pack is empty. Click add new card to fill this\r\n                                        pack</p>\r\n                                    :\r\n                                    <p className={cls.noCardsTitle}>This pack is empty</p>\r\n\r\n                            }\r\n                        </>\r\n            }\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/LeftArrow.54207b29.svg\";","import React, { Dispatch, SetStateAction } from 'react'\r\nimport mainStyles from '../../../App.module.scss'\r\nimport styles from './AddCardForm.module.scss'\r\nimport { useFormik } from 'formik'\r\nimport { useDispatch } from 'react-redux'\r\nimport { createNewPack, setLoadingPacks } from '../../../m2-bll/packsReducer'\r\nimport SuperInputText from '../../common/SuperInput/SuperInputText'\r\nimport SuperButton from '../../common/SuperButton/SuperButton'\r\nimport { createNewCard } from '../../../m2-bll/cardsReducer'\r\n\r\ntype AddCardFormPropsType = {\r\n  setActive: Dispatch<SetStateAction<boolean>>\r\n}\r\n\r\ntype FormValues = {\r\n  question: string,\r\n  answer: string\r\n}\r\n\r\nexport const AddCardForm = ({setActive}: AddCardFormPropsType) => {\r\n  const dispatch = useDispatch()\r\n  const formik = useFormik({\r\n    validate: (card) => {\r\n      if (!card.question) {\r\n        return {\r\n          question: 'question is required',\r\n        }\r\n      }\r\n      if (!card.answer) {\r\n        return {\r\n          answer: 'answer is required',\r\n        }\r\n      }\r\n    },\r\n    \r\n    initialValues: {\r\n      question: '',\r\n      answer: '',\r\n    },\r\n    onSubmit: async (card: FormValues) => {\r\n      setActive(false)\r\n      await dispatch(createNewCard(card.question, card.answer))\r\n      card.question = ''\r\n      card.answer = ''\r\n    },\r\n    // onReset: (values, {resetForm}) => resetForm(),\r\n  })\r\n  \r\n  const handleCancel = () => {\r\n    setActive(false)\r\n    formik.resetForm()\r\n  }\r\n  \r\n  return (\r\n    <form onSubmit={formik.handleSubmit} className={styles.form}>\r\n      <div className={styles.formWrapper}>\r\n        <h2 className={styles.title}>Add new card</h2>\r\n        <div>\r\n          <label htmlFor=\"question\" className={styles.label}>Question</label>\r\n          <SuperInputText\r\n            name=\"question\"\r\n            type=\"text\"\r\n            className={styles.inputForm}\r\n            onChange={formik.handleChange}\r\n            value={formik.values.question}\r\n          />\r\n          {formik.touched.question}\r\n        </div>\r\n        <div className={styles.errorContainer}>\r\n          {formik.errors.question ? (\r\n            <div className={styles.error}>{formik.errors.question}</div>) : null}\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"answer\" className={styles.label}>Answer</label>\r\n          <SuperInputText\r\n            name=\"answer\"\r\n            type=\"text\"\r\n            className={styles.inputForm}\r\n            onChange={formik.handleChange}\r\n            value={formik.values.answer}\r\n          />\r\n        </div>\r\n        <div className={styles.errorContainer}>\r\n          {formik.errors.answer ? (\r\n            <div className={styles.error}>{formik.errors.answer}</div>) : null}\r\n        </div>\r\n        <div className={styles.buttonContainer}>\r\n          <SuperButton\r\n            className={styles.cancelButton}\r\n            onClick={handleCancel}\r\n            title={'Cancel'}\r\n            type={'reset'}\r\n          >\r\n            Cancel\r\n          </SuperButton>\r\n          <SuperButton\r\n            className={styles.saveButton}\r\n            title={'Save'}\r\n            type={'submit'}\r\n          >\r\n            Save\r\n          </SuperButton>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n","import React, {KeyboardEvent, useCallback, useEffect, useState} from \"react\";\r\nimport cls from \"./CardsList.module.scss\"\r\nimport Search from \"../common/Search/Search\";\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport {getDataCards, setCurrentPage, setPackId, setPageCount, setSearchName} from \"../../m2-bll/cardsReducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {TableCards} from \"./TableCards/TableCards\";\r\nimport {PATH} from \"../../App\";\r\nimport {AppRootStateType} from \"../../m2-bll/store\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport arrow from \"../../../assets/images/LeftArrow.svg\"\r\nimport Modal from '../common/Modal/Modal'\r\nimport {AddCardForm} from \"./AddCardForm/AddCardForm\";\r\n\r\nexport const CardsList = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const history = useHistory()\r\n\r\n    const page = useSelector<AppRootStateType, number>(state => state.cards.cardsRequestParameters.page)\r\n    const packName = useSelector<AppRootStateType, string>(state => state.cards.cardPackName)\r\n    const pageCount = useSelector<AppRootStateType, number>(state => state.cards.cardsRequestParameters.pageCount)\r\n    const cardsTotalCount = useSelector<AppRootStateType, number>(state => state.cards.cardsTotalCount)\r\n    const searchQuestion = useSelector<AppRootStateType, string>(state => state.cards.cardsRequestParameters.cardQuestion)\r\n\r\n\r\n    const appUserId = useSelector<AppRootStateType, string>(state => state.profile.informationAboutUser._id)\r\n    const currentPackUserId = useSelector<AppRootStateType, string>(state => state.cards.packUserId)\r\n\r\n    const {packId} = useParams<{ packId: string }>()\r\n    const [activeModal, setActiveModal] = useState<boolean>(false)\r\n    useEffect(() => {\r\n        dispatch(setPackId(packId))\r\n        dispatch(getDataCards())\r\n    }, [page, pageCount, searchQuestion])\r\n\r\n    const onCardsPageChanges = useCallback((page: number) => {\r\n        dispatch(setCurrentPage(page + 1))\r\n    }, [dispatch])\r\n\r\n    const changeCardsPageCount = useCallback((count: number) => {\r\n        dispatch(setPageCount(count))\r\n    }, [dispatch])\r\n\r\n    const handlePressSearch = useCallback((e: KeyboardEvent<HTMLInputElement>) => {\r\n        dispatch(setSearchName(e.currentTarget.value))\r\n        e.currentTarget.blur()\r\n    }, [dispatch])\r\n\r\n    const openModal = () => {\r\n        setActiveModal(true)\r\n    }\r\n\r\n    return (\r\n        <div className={cls.cardslistContainer}>\r\n            <div className={cls.card}>\r\n                <div className={cls.cardslist}>\r\n                    <div className={cls.arrowTitleContainer}><img className={cls.arrow}\r\n                                                                  onClick={() => {\r\n                                                                      history.push(PATH.PACKS_LIST)\r\n                                                                  }}\r\n                                                                  src={arrow}\r\n                                                                  alt={\"\"}\r\n                    /><h2 className={cls.cardslistTitle}>Pack\r\n                        name: <span>{packName}</span></h2></div>\r\n                    <div className={cls.search_AddButtonContainer}>\r\n                        <Search className={cls.search} handlePressSearch={handlePressSearch}/>\r\n                        <div className={cls.addButtonContainer}>\r\n                            <Modal active={activeModal} setActive={setActiveModal}>\r\n                                <AddCardForm setActive={setActiveModal}/>\r\n                            </Modal>\r\n                            {appUserId === currentPackUserId\r\n                            && <SuperButton\r\n                                className={cls.addPackButton}\r\n                                onClick={openModal}\r\n                            >\r\n                                <span>Add new card</span>\r\n                            </SuperButton>}\r\n                        </div>\r\n                    </div>\r\n                    <TableCards/>\r\n                    {!!cardsTotalCount && <Paginator\r\n                        pageCount={pageCount}\r\n                        itemsTotalCount={cardsTotalCount}\r\n                        onPageChanges={onCardsPageChanges}\r\n                        changePageCount={changeCardsPageCount}\r\n                    />}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, useEffect, useState} from \"react\";\r\nimport {Redirect, useHistory, useParams} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../m2-bll/store\";\r\nimport {CardResponseType} from \"../../m3-dal/apiCards\";\r\nimport cls from \"./Learn.module.scss\"\r\nimport {Preloader} from \"../common/preloader/Preloader\";\r\nimport {addCard, getCardsToLearn, sendCardGrade, setChangeCard, setPackId} from \"../../m2-bll/learnReducer\";\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport {PATH} from \"../../App\";\r\nimport {isLoggedInApp} from \"../../m2-bll/authReducer\";\r\n\r\nconst grades = ['Did not know', 'Forgot', 'A lot of thought', 'Confused', 'Knew the answer'];\r\n\r\nexport const Learn = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [showAnswer, setShowAnswer] = useState(false)\r\n\r\n    const [currentGrade, setCurrentGrade] = useState(0)\r\n\r\n    const error = useSelector<AppRootStateType, string | null>(state => state.auth.error)\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn)\r\n\r\n    const cards = useSelector<AppRootStateType, Array<CardResponseType>>(state => state.learn.cards)\r\n    const isFetching = useSelector<AppRootStateType, boolean>(state => state.learn.isFetching)\r\n    const packName = localStorage.getItem(\"packName\")\r\n    const changeCard = useSelector<AppRootStateType, boolean>(state => state.learn.changeCard)\r\n    const card = useSelector<AppRootStateType, CardResponseType | null>(state => state.learn.card)\r\n\r\n    let history = useHistory()\r\n\r\n    const {packId} = useParams<{ packId: string }>()\r\n\r\n    dispatch(setPackId(packId))\r\n\r\n    useEffect(() => {\r\n        if (!isLoggedIn) {\r\n            if (!error) dispatch(isLoggedInApp())\r\n        } else {\r\n            dispatch(getCardsToLearn())\r\n        }\r\n    }, [dispatch])\r\n\r\n\r\n    //algorithm for getting card\r\n    const getCard = (cards: Array<CardResponseType>) => {\r\n        const sum = cards.reduce((acc, card) => acc + (6 - card.grade) * (6 - card.grade), 0);\r\n        const rand = Math.random() * sum;\r\n        const res = cards.reduce((acc: { sum: number, id: number }, card, i) => {\r\n                const newSum = acc.sum + (6 - card.grade) * (6 - card.grade);\r\n                return {sum: newSum, id: newSum < rand ? i : acc.id}\r\n            }\r\n            , {sum: 0, id: -1});\r\n\r\n        return cards[res.id + 1];\r\n    }\r\n\r\n\r\n    const cancelHandler = () => {\r\n        history.goBack()\r\n    }\r\n\r\n    const setGradeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setCurrentGrade(+e.target.defaultValue)\r\n    }\r\n\r\n    const nextHandler = () => {\r\n        dispatch(sendCardGrade(currentGrade))\r\n        setShowAnswer(false)\r\n        dispatch(setChangeCard(true))\r\n    }\r\n\r\n    if (changeCard) {\r\n        dispatch(addCard(getCard(cards)))\r\n        dispatch(setChangeCard(false))\r\n    }\r\n\r\n    if (error) {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n\r\n    return (\r\n        <div className={cls.learnContainer}>\r\n            {\r\n                !showAnswer\r\n                    ?\r\n                    isFetching\r\n                        ?\r\n                        <Preloader/>\r\n                        :\r\n                        cards.length === 0\r\n                            ?\r\n                            <>\r\n                                <p className={`${cls.card} ${cls.noCards}`}>No cards to learn</p>\r\n                            </>\r\n                            :\r\n                            <div className={cls.card}>\r\n                                <h2 className={cls.title}>{`Learn \"${packName}\"`}</h2>\r\n                                <p><span>Question: </span>{card && card.question}</p>\r\n                                <div className={cls.buttonsContainer}>\r\n                                    <SuperButton className={cls.cancelButton}\r\n                                                 onClick={cancelHandler}\r\n                                    >\r\n                                    <span>\r\n                                        Cancel\r\n                                    </span>\r\n                                    </SuperButton>\r\n                                    <SuperButton className={cls.showAnswerButton}\r\n                                                 onClick={() => setShowAnswer(true)}\r\n                                    >\r\n                                    <span>\r\n                                        Show answer\r\n                                    </span>\r\n                                    </SuperButton>\r\n                                </div>\r\n                            </div>\r\n                    :\r\n                    !card\r\n                        ?\r\n                        <Preloader/>\r\n                        :\r\n                        <div className={cls.card}>\r\n                            <h2 className={cls.title}>{`Learn \"${packName}\"`}</h2>\r\n                            <p><span>Question: </span>{card && card.question}</p>\r\n                            <p><span>Answer: </span>{card && card.answer}</p>\r\n                            <p className={cls.answerTitle}>Rate yourself:</p>\r\n                            {\r\n                                grades.map((grade, index) => {\r\n                                    return (\r\n                                        <div key={index} className={cls.answers}>\r\n                                            <label className={cls.label}>\r\n                                                <input type={\"radio\"} name={\"answer\"} value={index + 1}\r\n                                                       onChange={setGradeHandler}/>{`${grade}`}\r\n                                            </label>\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                            }\r\n                            <div className={cls.buttonsContainerAnswer}>\r\n                                <SuperButton className={cls.cancelAnswerButton}\r\n                                             onClick={cancelHandler}\r\n                                >\r\n                                    <span>\r\n                                        Cancel\r\n                                    </span>\r\n                                </SuperButton>\r\n                                <SuperButton className={cls.nextButton}\r\n                                             onClick={nextHandler}\r\n                                >\r\n                                    <span>\r\n                                        Next\r\n                                    </span>\r\n                                </SuperButton>\r\n                            </div>\r\n                        </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, {ChangeEvent, KeyboardEvent, useEffect, useRef, useState} from 'react';\r\nimport cls from './Chat.module.scss'\r\n\r\nimport io from 'socket.io-client'\r\nimport SuperButton from '../common/SuperButton/SuperButton';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {isLoggedInApp} from '../../m2-bll/authReducer';\r\nimport {setUserId} from '../../m2-bll/packsReducer';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../m2-bll/store';\r\nimport {PATH} from '../../App';\r\n\r\ntype MessageType = {\r\n    _id: string\r\n    message: string\r\n    user: {\r\n        _id: string\r\n        name: string\r\n    }\r\n}\r\n\r\n\r\n// let socket = io('http://localhost:7542/')\r\n\r\nexport const Chat = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    let [messages, setMessages] = useState<Array<MessageType>>([])\r\n\r\n    const anchor = useRef<HTMLDivElement>(null)\r\n\r\n    const [message, setMessage] = useState('')\r\n\r\n    const name = useSelector<AppRootStateType, string>(state=>state.profile.informationAboutUser.name)\r\n\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn)\r\n    const id = useSelector<AppRootStateType, string>(state => state.profile.informationAboutUser._id)\r\n    const isFetching = useSelector<AppRootStateType, boolean>(state => state.auth.isFetching)\r\n\r\n    const error = useSelector<AppRootStateType, string | null>(state => state.auth.error)\r\n\r\n    let [socket, setSocket] = useState(io('https://neko-back.herokuapp.com/'))\r\n\r\n    useEffect(() => {\r\n\r\n\r\n\r\n        socket.emit('init');\r\n\r\n        socket.on('init-messages-published', (messages: Array<MessageType>) => {\r\n            setMessages(messages)\r\n        });\r\n\r\n        socket.on('new-message-sent', (message: MessageType) => {\r\n            setMessages(messages => {\r\n                return [...messages, message]\r\n            })\r\n        });\r\n\r\n        socket.emit(\"client-name-sent\", name);\r\n\r\n        return () => {\r\n\r\n            socket.disconnect()\r\n        }\r\n\r\n    }, [socket])\r\n\r\n    useEffect(() => {\r\n        anchor.current?.scrollIntoView({behavior: 'smooth'})\r\n    },[messages])\r\n\r\n    useEffect(() => {\r\n        if (!id) {\r\n            dispatch(isLoggedInApp())\r\n        } else if (!error && isLoggedIn && !isFetching) {\r\n            dispatch(setUserId(id))\r\n        }\r\n    }, [isLoggedIn, dispatch, id, error, isFetching])\r\n\r\n    const onChangeMessageHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        setMessage(e.currentTarget.value)\r\n    }\r\n\r\n    const sendMessage = () => {\r\n        socket.emit('client-message-sent', message);\r\n        setMessage('')\r\n    }\r\n\r\n    const onKeyEnterPress = (e: KeyboardEvent<HTMLTextAreaElement>) => {\r\n        if (e.key === 'Enter') {\r\n            socket.emit('client-message-sent', message);\r\n            setMessage('')\r\n            e.preventDefault()\r\n        }\r\n    }\r\n\r\n    const mappedMessages = messages.map(message => {\r\n        return <div className={cls.messageContainer} key={message._id}>\r\n            <div className={cls.nickName}>\r\n                {message.user.name}:\r\n            </div>\r\n            <div className={cls.message}>\r\n                {message.message}\r\n            </div>\r\n        </div>\r\n    })\r\n\r\n    if (error || !isLoggedIn) {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n\r\n    return (\r\n        <div className={cls.chatContainer}>\r\n                <div className={cls.chatScreenContainer}>\r\n                    <div className={cls.chatScreen}>\r\n                        {\r\n                            mappedMessages\r\n                        }\r\n                        <div ref={anchor}>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className={cls.bar}>\r\n                        <div className={cls.text}><textarea\r\n                            value={message}\r\n                            onChange={onChangeMessageHandler}\r\n                            onKeyPress={onKeyEnterPress}\r\n                            placeholder={\"Enter your message ...\"}\r\n                        >\r\n                </textarea>\r\n                        </div>\r\n                        <div className={cls.buttonContainer}>\r\n                            <SuperButton onClick={sendMessage}><span>Send message</span></SuperButton>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {Route} from 'react-router-dom';\r\nimport mainStyles from './App.module.scss';\r\nimport {Login} from './m1-ui/Login/Login';\r\nimport {Profile} from './m1-ui/Profile/Profile';\r\nimport {PageNotFound} from './m1-ui/PageNotFound/PageNotFound';\r\nimport {RestorePassword} from './m1-ui/RestorePassword/RestorePassword';\r\nimport {NewPassword} from './m1-ui/NewPassword/NewPassword';\r\nimport {TestComponents} from './m1-ui/TestComponents/TestComponents';\r\nimport {PersonalInfo} from './m1-ui/Profile/PersonalInfo/PersonalInfo';\r\nimport {Register} from './m1-ui/Registration/Register';\r\nimport {HeaderMain} from './m1-ui/HeaderMain/HeaderMain';\r\nimport {useSelector} from 'react-redux';\r\nimport {AppRootStateType} from './m2-bll/store';\r\nimport {PacksList} from './m1-ui/PacksList/PacksList';\r\nimport {Redirect} from 'react-router';\r\nimport {Preloader} from './m1-ui/common/preloader/Preloader';\r\nimport {CardsList} from './m1-ui/CardsList/CardsList';\r\nimport {Learn} from './m1-ui/Learn/Learn';\r\nimport {Chat} from './m1-ui/Chat/Chat';\r\n\r\nexport const PATH = {\r\n    PROFILE: '/profile',\r\n    PACKS_LIST: '/packslist',\r\n    CARDS_LIST: '/cardslist/:packId?',\r\n    LEARN: '/learn/:packId?',\r\n    USER_INFO: '/information_about_user',\r\n    LOGIN: '/login',\r\n    REGISTRATION: '/registration',\r\n    TEST_COMPONENTS: '/test_components',\r\n    PAGE_NOT_FOUND: '/404',\r\n    RESTORE_PASSWORD: '/restore_password',\r\n    NEW_PASSWORD: '/new_password/:token?',\r\n    CHAT: '/chat'\r\n}\r\n\r\nconst App = () => {\r\n\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn)\r\n    const isFetching = useSelector<AppRootStateType, boolean>(state => state.auth.isFetching)\r\n\r\n    return (\r\n        isFetching\r\n            ?\r\n            <Preloader/>\r\n            :\r\n            <div className={mainStyles.appWrapper}>\r\n                {/*<Header/>*/}\r\n                {isLoggedIn && <HeaderMain/>}\r\n                <div className={mainStyles.appWrapperContent}>\r\n                    <Route exact path={'/'} render={() => <Redirect to={PATH.LOGIN}/>}/>\r\n                    <Route exact path={PATH.LOGIN} render={() => <Login/>}/>\r\n                    <Route path={PATH.PROFILE} render={() => <Profile/>}/>\r\n                    <Route path={PATH.PACKS_LIST} render={() => <PacksList/>}/>\r\n                    <Route path={PATH.CARDS_LIST} render={() => <CardsList/>}/>\r\n                    <Route path={PATH.CHAT} render={() => <Chat/>}/>\r\n                    <Route path={PATH.LEARN} render={() => <Learn/>}/>\r\n                    <Route path={PATH.USER_INFO} render={() => <PersonalInfo/>}/>\r\n                    <Route path={PATH.REGISTRATION} render={() => <Register/>}/>\r\n                    <Route path={PATH.TEST_COMPONENTS} render={() => <TestComponents/>}/>\r\n                    <Route path={PATH.PAGE_NOT_FOUND} render={() => <PageNotFound/>}/>\r\n                    <Route path={PATH.RESTORE_PASSWORD} render={() => <RestorePassword/>}/>\r\n                    <Route path={PATH.NEW_PASSWORD}\r\n                           render={() => <NewPassword/>}/> {/* для отображения <NewPassword/> после token стоит \"?\" */}\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport reportWebVitals from './reportWebVitals'\r\nimport { HashRouter } from 'react-router-dom'\r\nimport { Provider } from 'react-redux'\r\nimport {store} from \"./n1-main/m2-bll/store\";\r\nimport App from \"./n1-main/App\";\r\n\r\n\r\n\r\nReactDOM.render(\r\n    <HashRouter>\r\n      <Provider store={store}>\r\n        <App/>\r\n      </Provider>\r\n    </HashRouter>,\r\n  document.getElementById('root'),\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"AddCardForm_form__3igt-\",\"formWrapper\":\"AddCardForm_formWrapper__14wuS\",\"title\":\"AddCardForm_title__IWcqp\",\"label\":\"AddCardForm_label__3is4F\",\"inputForm\":\"AddCardForm_inputForm__2U_G7\",\"errorContainer\":\"AddCardForm_errorContainer__2niSj\",\"error\":\"AddCardForm_error__3D11J\",\"buttonContainer\":\"AddCardForm_buttonContainer__3Drx-\",\"cancelButton\":\"AddCardForm_cancelButton__3kL6G\",\"saveButton\":\"AddCardForm_saveButton__1fJkf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoContainer\":\"PersonalInfo_infoContainer__2OKjr\",\"card\":\"PersonalInfo_card__3lzkm\",\"title\":\"PersonalInfo_title__1HxQO\",\"imgWrapper\":\"PersonalInfo_imgWrapper__1_NOT\",\"inputContainer\":\"PersonalInfo_inputContainer__20Xds\",\"inputNicknameAvatar\":\"PersonalInfo_inputNicknameAvatar__3kz6z\",\"buttonContainer\":\"PersonalInfo_buttonContainer__2JFke\",\"cancelButton\":\"PersonalInfo_cancelButton__1Goa2\",\"registerButton\":\"PersonalInfo_registerButton__2k6O8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"HeaderMain_headerContainer__1t0Yy\",\"wrapper\":\"HeaderMain_wrapper__x0UjY\",\"logo\":\"HeaderMain_logo__2dm-D\",\"linksContainer\":\"HeaderMain_linksContainer__2Nnya\",\"linkContainer\":\"HeaderMain_linkContainer__25SoB\",\"active\":\"HeaderMain_active__3RSCn\",\"buttonContainer\":\"HeaderMain_buttonContainer__2FGST\",\"logoutBtn\":\"HeaderMain_logoutBtn__3iDpb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContainer\":\"EditCardForm_formContainer__GbTbk\",\"label\":\"EditCardForm_label__1z2aK\",\"inputForm\":\"EditCardForm_inputForm__1S0KN\",\"errorContainer\":\"EditCardForm_errorContainer__1hwZW\",\"error\":\"EditCardForm_error__17TeU\",\"buttonWrapper\":\"EditCardForm_buttonWrapper__2md2d\",\"cancelButton\":\"EditCardForm_cancelButton__3aCzh\",\"updateButton\":\"EditCardForm_updateButton__2Mlvd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"restorePasswordContainer\":\"RestorePassword_restorePasswordContainer__3wwbJ\",\"card\":\"RestorePassword_card__13eXp\",\"title\":\"RestorePassword_title__7T_Sc\",\"subtitle\":\"RestorePassword_subtitle__6udjQ\",\"inputContainer\":\"RestorePassword_inputContainer__25m67\",\"inputEmail\":\"RestorePassword_inputEmail__2h3fP\",\"firstNote\":\"RestorePassword_firstNote__dHJA8\",\"buttonContainer\":\"RestorePassword_buttonContainer__6b9Rc\",\"button\":\"RestorePassword_button__3OtoL\",\"secondNote\":\"RestorePassword_secondNote__u33ED\",\"reLogin\":\"RestorePassword_reLogin__115Di\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"AddPackForm_form__16ghd\",\"formWrapper\":\"AddPackForm_formWrapper__2zmrK\",\"title\":\"AddPackForm_title__1Mbyk\",\"label\":\"AddPackForm_label__lCNh1\",\"inputForm\":\"AddPackForm_inputForm__QW0fm\",\"errorContainer\":\"AddPackForm_errorContainer__1IkXf\",\"error\":\"AddPackForm_error__1pVsw\",\"buttonContainer\":\"AddPackForm_buttonContainer__Qm_Tq\",\"cancelButton\":\"AddPackForm_cancelButton__1VMUb\",\"saveButton\":\"AddPackForm_saveButton__3Ha-o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPasswordContainer\":\"NewPassword_newPasswordContainer__2W262\",\"card\":\"NewPassword_card__2STyj\",\"title\":\"NewPassword_title__3MrsO\",\"subtitle\":\"NewPassword_subtitle__xymY6\",\"inputContainer\":\"NewPassword_inputContainer__aG24R\",\"eye\":\"NewPassword_eye__3Nt59\",\"inputPassword\":\"NewPassword_inputPassword__1jwIk\",\"note\":\"NewPassword_note__3Are5\",\"buttonContainer\":\"NewPassword_buttonContainer__3DPdQ\",\"button\":\"NewPassword_button__3-ZIq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardslistContainer\":\"CardsList_cardslistContainer__2tYhG\",\"card\":\"CardsList_card__3QmT-\",\"cardslist\":\"CardsList_cardslist__2W4xR\",\"arrowTitleContainer\":\"CardsList_arrowTitleContainer__1-CIA\",\"arrow\":\"CardsList_arrow__ojaGm\",\"cardslistTitle\":\"CardsList_cardslistTitle__3lYqw\",\"search_AddButtonContainer\":\"CardsList_search_AddButtonContainer__274tP\",\"search\":\"CardsList_search__3Sgln\",\"addButtonContainer\":\"CardsList_addButtonContainer__3kBXn\",\"addPackButton\":\"CardsList_addPackButton__1ckgR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileContainer\":\"Profile_profileContainer__17JgP\",\"card\":\"Profile_card__1gvrl\",\"info\":\"Profile_info__2n02S\",\"packslist\":\"Profile_packslist__2SfdE\",\"packslistTitle\":\"Profile_packslistTitle__1mJbl\",\"search_AddButtonContainer\":\"Profile_search_AddButtonContainer__3fN0I\",\"search\":\"Profile_search__HslF0\",\"addButtonContainer\":\"Profile_addButtonContainer__SzRXV\",\"addPackButton\":\"Profile_addPackButton__25g_g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatContainer\":\"Chat_chatContainer__J6utq\",\"chatScreenContainer\":\"Chat_chatScreenContainer__2S63A\",\"chatScreen\":\"Chat_chatScreen__1zD8B\",\"messageContainer\":\"Chat_messageContainer__3FJl3\",\"nickName\":\"Chat_nickName__2iTsY\",\"message\":\"Chat_message__3LR6S\",\"bar\":\"Chat_bar__28PMT\",\"text\":\"Chat_text__rhnpt\",\"buttonContainer\":\"Chat_buttonContainer__3RrFk\",\"nameBox\":\"Chat_nameBox__111nT\",\"cancelButton\":\"Chat_cancelButton__1j5IK\",\"saveButton\":\"Chat_saveButton__1Z8ib\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContainer\":\"EditPackForm_formContainer__1dpXD\",\"label\":\"EditPackForm_label__cwXks\",\"inputForm\":\"EditPackForm_inputForm__yBNIq\",\"errorContainer\":\"EditPackForm_errorContainer__29T68\",\"error\":\"EditPackForm_error__2KAzm\",\"buttonWrapper\":\"EditPackForm_buttonWrapper__1FzFD\",\"cancelButton\":\"EditPackForm_cancelButton__EelKs\",\"updateButton\":\"EditPackForm_updateButton__3geXQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginatorPage\":\"Paginator_paginatorPage__29P5R\",\"container\":\"Paginator_container__3WYVr\",\"selectedPage\":\"Paginator_selectedPage__1_Qpu\",\"page\":\"Paginator_page__nOPpU\",\"prev\":\"Paginator_prev__2zF4J\",\"next\":\"Paginator_next__3k4_a\",\"sortContainer\":\"Paginator_sortContainer__1n5To\",\"superSelect\":\"Paginator_superSelect__1apV2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableData\":\"TableDataPacks_tableData__28j54\",\"name\":\"TableDataPacks_name__1BRDC\",\"buttonsContainer\":\"TableDataPacks_buttonsContainer__2n0e9\",\"deleteButton\":\"TableDataPacks_deleteButton__1dE5S\",\"editLearnButton\":\"TableDataPacks_editLearnButton__30n4A\",\"none\":\"TableDataPacks_none__1bff1\",\"flexEnd\":\"TableDataPacks_flexEnd__3vAT3\",\"flexBetween\":\"TableDataPacks_flexBetween__23sSd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalContainer\":\"Modal_modalContainer__3Ta3P\",\"active\":\"Modal_active__2viOW\",\"modalContent\":\"Modal_modalContent__ydh5H\",\"buttonModal\":\"Modal_buttonModal__1AetH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkPasswordContainer\":\"CheckPassword_checkPasswordContainer__1ni7O\",\"card\":\"CheckPassword_card__rQtwW\",\"title\":\"CheckPassword_title__3hHul\",\"imgContainer\":\"CheckPassword_imgContainer__tY4ua\",\"subtitle\":\"CheckPassword_subtitle__1yJNt\",\"firstNote\":\"CheckPassword_firstNote__2Ezf9\",\"secondNote\":\"CheckPassword_secondNote__1FTG7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableData\":\"TableDataCards_tableData__XNPX-\",\"stars\":\"TableDataCards_stars__3umgj\",\"rating\":\"TableDataCards_rating__3q6Cn\",\"buttonsContainer\":\"TableDataCards_buttonsContainer__2Rw0P\",\"deleteButton\":\"TableDataCards_deleteButton__3uPNP\",\"editButton\":\"TableDataCards_editButton__2HexG\",\"gridChangeClass\":\"TableDataCards_gridChangeClass__1k7s6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContainer\":\"DeletePackForm_formContainer__21cyG\",\"question\":\"DeletePackForm_question__1_MwA\",\"buttonContainer\":\"DeletePackForm_buttonContainer__1DrZj\",\"cancelButton\":\"DeletePackForm_cancelButton__3USUn\",\"deleteButton\":\"DeletePackForm_deleteButton__2ugZZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContainer\":\"DeleteCardForm_formContainer__3LSmb\",\"question\":\"DeleteCardForm_question__3DF_r\",\"buttonContainer\":\"DeleteCardForm_buttonContainer__1opwJ\",\"cancelButton\":\"DeleteCardForm_cancelButton__1_I06\",\"deleteButton\":\"DeleteCardForm_deleteButton__HvpXC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoUser\":\"UserInfo_infoUser__2-Ur5\",\"userName\":\"UserInfo_userName__20AlV\",\"editProfileWrapper\":\"UserInfo_editProfileWrapper__Sm275\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableContainer\":\"TableCards_tableContainer__1_7bh\",\"tableHeader\":\"TableCards_tableHeader__3Tw_Y\",\"noCardsTitle\":\"TableCards_noCardsTitle__gwifg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorInput\":\"SuperInputText_errorInput__1s9vg\",\"error\":\"SuperInputText_error__1BK8m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoUserCards\":\"UserInfoCards_infoUserCards__1JTR6\",\"doubleRangeContainer\":\"UserInfoCards_doubleRangeContainer__2tjFK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableContainer\":\"TablePacks_tableContainer__TurzH\",\"tableHeader\":\"TablePacks_tableHeader__1CXws\",\"noPacksTitle\":\"TablePacks_noPacksTitle__1pIBz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableHeader\":\"TableHeaderPacks_tableHeader__17xMQ\",\"actions\":\"TableHeaderPacks_actions__1AUYu\",\"cardsTitle\":\"TableHeaderPacks_cardsTitle__24O_f\",\"updatedTitle\":\"TableHeaderPacks_updatedTitle__2JbjM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appWrapper\":\"App_appWrapper__2LlFa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2WNQ6\",\"red\":\"SuperButton_red__1si2j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"testComponentsContainer\":\"TestComponents_testComponentsContainer__2JwAI\",\"componentsContainer\":\"TestComponents_componentsContainer__1m_9P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2drz_\",\"spanClassName\":\"SuperCheckbox_spanClassName__3LAnk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableHeader\":\"TableHeaderCards_tableHeader__16aLi\",\"gridChangeClass\":\"TableHeaderCards_gridChangeClass__zRRr8\"};"],"sourceRoot":""}