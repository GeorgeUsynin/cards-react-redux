{"version":3,"sources":["n1-main/m1-ui/RestorePassword/RestorePassword.module.css","n1-main/m1-ui/Profile/Profile.module.css","n1-main/m1-ui/common/SuperInput/SuperInputText.module.css","n1-main/m1-ui/common/SuperButton/SuperButton.module.css","n1-main/m1-ui/TestComponents/TestComponents.module.css","n1-main/m1-ui/common/SuperCheckbox/SuperCheckbox.module.css","n1-main/m1-ui/Header/Header.module.css","n1-main/m1-ui/Registration/Register.module.css","n1-main/m1-ui/Header/Header.tsx","n1-main/m3-dal/API.ts","n1-main/m2-bll/profileReducer.ts","n1-main/m2-bll/authReducer.ts","n1-main/m1-ui/common/SuperInput/SuperInputText.tsx","n1-main/m1-ui/common/SuperButton/SuperButton.tsx","n1-main/m1-ui/Login/Login.tsx","n1-main/m1-ui/Profile/Profile.tsx","n1-main/m1-ui/PageNotFound/PageNotFound.tsx","n1-main/m1-ui/CheckPassword/CheckPassword.tsx","n1-main/m3-dal/apiRestore.ts","n1-main/m2-bll/restorePasswordReducer.ts","n1-main/m1-ui/RestorePassword/RestorePassword.tsx","n1-main/m1-ui/NewPassword/NewPassword.tsx","n1-main/m1-ui/common/SuperCheckbox/SuperCheckbox.tsx","n1-main/m1-ui/TestComponents/TestComponents.tsx","n1-main/m3-dal/registerAPI.ts","n1-main/m2-bll/registerReducer.ts","n1-main/m1-ui/Registration/Register.tsx","n1-main/m1-ui/Registration/RegisterContainer.tsx","n1-main/m1-ui/Registration/RegisterPage.tsx","n1-main/m1-ui/App.tsx","reportWebVitals.ts","n1-main/m2-bll/store.ts","index.tsx","n1-main/m1-ui/Login/Login.module.css"],"names":["module","exports","Header","className","cls","header","to","instance","axios","create","baseURL","withCredentials","authAPI","data","post","initialState","informationAboutUser","_id","email","name","publicCardPacksCount","created","Date","updated","isAdmin","verified","rememberMe","isLoggedIn","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","errorInput","superInput","e","currentTarget","value","key","SuperButton","red","finalClassName","default","Login","useState","setEmail","password","setPassword","errorEmail","errorPassword","check","setCheck","useSelector","state","auth","dispatch","useDispatch","loginContainer","card","title","subtitle","titleEmail","inputEmail","spanErrorEmail","titlePassword","inputPassword","spanErrorPassword","checkbox","checked","restorePassword","button","onClick","then","res","setInformationAboutUserAC","catch","response","messages","console","log","newAccount","signUp","Profile","info","profile","profileContainer","infoCards","infoUser","userPhoto","src","avatar","userName","userCards","PageNotFound","pageNotFoundContainer","CheckPassword","alt","axiosInstance","authApi","message","resetPasswordToken","setError","payload","showEmailCheck","isNewPasswordCreated","RestorePassword","restorePasswordContainer","placeholder","text","firstAdvice","err","secondAdvice","reLogin","NewPassword","token","useParams","newPasswordContainer","setNewPassword","SuperCheckbox","onChangeChecked","children","TestComponents","testComponentsContainer","componentsContainer","RegisterAPI","REGISTER","registerInitialState","isRegistered","Register","pass","setPass","confirmPass","setConfirmPass","registrationContainer","content","form","inputTitle","input","buttonsContainer","cancelBtn","registerBtn","a","register","RegisterContainer","RegisterPage","App","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec041065.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"restorePasswordContainer\":\"RestorePassword_restorePasswordContainer__1wnLR\",\"card\":\"RestorePassword_card__3V_ND\",\"title\":\"RestorePassword_title__2F-Wi\",\"subtitle\":\"RestorePassword_subtitle__1ptNR\",\"inputEmail\":\"RestorePassword_inputEmail__11Gy0\",\"text\":\"RestorePassword_text__16KHx\",\"firstAdvice\":\"RestorePassword_firstAdvice__XjzZg\",\"secondAdvice\":\"RestorePassword_secondAdvice__2_1QE\",\"button\":\"RestorePassword_button__2WTC0\",\"reLogin\":\"RestorePassword_reLogin__1aPBa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileContainer\":\"Profile_profileContainer__3Ixw8\",\"card\":\"Profile_card__GBead\",\"infoCards\":\"Profile_infoCards__2GqCU\",\"infoUser\":\"Profile_infoUser__24NX0\",\"userPhoto\":\"Profile_userPhoto__1ecE3\",\"userName\":\"Profile_userName__Tzmf_\",\"userCards\":\"Profile_userCards__1t_iu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__1Y9SI\",\"errorInput\":\"SuperInputText_errorInput__1QiRr\",\"error\":\"SuperInputText_error__5dUtt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2WNQ6\",\"red\":\"SuperButton_red__1si2j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"testComponentsContainer\":\"TestComponents_testComponentsContainer__2JwAI\",\"componentsContainer\":\"TestComponents_componentsContainer__1m_9P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2drz_\",\"spanClassName\":\"SuperCheckbox_spanClassName__3LAnk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1pFAq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registrationContainer\":\"Register_registrationContainer__35byv\",\"content\":\"Register_content__3SINa\",\"title\":\"Register_title__3SEuG\",\"form\":\"Register_form__3dFMB\",\"input\":\"Register_input__XkwHW\",\"inputTitle\":\"Register_inputTitle__1OHel\",\"buttonsContainer\":\"Register_buttonsContainer__3zMl4\",\"cancelBtn\":\"Register_cancelBtn__33-qR\",\"registerBtn\":\"Register_registerBtn__7altz\",\"info\":\"Register_info__B-CUX\",\"error\":\"Register_error__1TJPY\"};","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport cls from './Header.module.css'\r\n\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div className={cls.header}>\r\n            <NavLink to={'/login'}>Login</NavLink>\r\n            <NavLink to={'/registration'}>Registration</NavLink>\r\n            <NavLink to={'/profile'}>Profile</NavLink>\r\n            <NavLink to={'/404'}>404</NavLink>\r\n            <NavLink to={'/restore_password'}>Restore password</NavLink>\r\n            <NavLink to={'/new_password'}>New password</NavLink>\r\n            <NavLink to={'/test_components'}>Test components</NavLink>\r\n        </div>\r\n    )\r\n}","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    // baseURL: \"http://localhost:7542/2.0/\",\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0\",\r\n    withCredentials: true,\r\n});\r\n\r\nexport const authAPI = {\r\n    login(data: LoginParamsType) {\r\n        return instance.post<LoginResponseType>(\"auth/login\", data)\r\n    }\r\n}\r\n\r\n\r\nexport type LoginParamsType = {\r\n    email: string\r\n    password: string\r\n    check: boolean\r\n}\r\n\r\nexport type LoginResponseType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar?: string\r\n    publicCardPacksCount: number\r\n    created: DateConstructor\r\n    updated: DateConstructor\r\n    isAdmin: boolean\r\n    verified: boolean\r\n    rememberMe: boolean\r\n    error?: string\r\n}\r\n","import {LoginResponseType} from \"../m3-dal/API\";\r\n\r\nconst initialState = {\r\n    informationAboutUser: {\r\n        _id: \"\",\r\n        email: \"\",\r\n        name: \"\",\r\n        publicCardPacksCount: 0,\r\n        created: Date,\r\n        updated: Date,\r\n        isAdmin: false,\r\n        verified: false,\r\n        rememberMe: false,\r\n    }\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\n/*export type LoginResponseType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar?: string\r\n    publicCardPacksCount: number\r\n    created: Date\r\n    updated: Date\r\n    isAdmin: boolean\r\n    verified: boolean\r\n    rememberMe: boolean\r\n    error?: string\r\n}*/\r\n\r\nexport const profileReducer = (state: InitialStateType = initialState, action: ProfileActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'profile/SET-INFORMATION-ABOUT-USER':\r\n            return {...state, informationAboutUser: action.data}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setInformationAboutUserAC = (data: LoginResponseType) =>\r\n    ({type: 'profile/SET-INFORMATION-ABOUT-USER', data} as const)\r\n\r\nexport type ProfileActionsType = ReturnType<typeof setInformationAboutUserAC>","import {authAPI, LoginParamsType} from \"../m3-dal/API\";\r\nimport {setInformationAboutUserAC} from \"./profileReducer\";\r\nimport {AppThunkType} from \"./store\";\r\n\r\nconst initialState = {\r\n    isLoggedIn: false\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const authReducer = (state: InitialStateType = initialState, action: AuthActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'login/SET-IS-LOGGED-IN':\r\n            return {...state, isLoggedIn: action.value}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n// actions\r\nexport const setIsLoggedInAC = (value: boolean) =>\r\n    ({type: 'login/SET-IS-LOGGED-IN', value} as const)\r\n\r\n// thunks\r\nexport const loginTC = (data: LoginParamsType): AppThunkType => (dispatch) => {\r\n    authAPI.login(data)\r\n        .then(res => {\r\n            dispatch(setInformationAboutUserAC(res.data))\r\n            dispatch(setIsLoggedInAC(true))\r\n        })\r\n        .catch((e) => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.messages + ', more details in the console')\r\n            console.log('Error: ', {...e})\r\n        })\r\n}\r\nexport type AuthActionsType = ReturnType<typeof setIsLoggedInAC | typeof setInformationAboutUserAC> // изменили запись в одну строчку !!","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={type}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red,\r\n        className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport cls from './Login.module.css'\r\nimport {loginTC} from \"../../m2-bll/authReducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../m2-bll/store\";\r\nimport {NavLink, Redirect} from 'react-router-dom';\r\nimport SuperInputText from \"../common/SuperInput/SuperInputText\";\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\n\r\n\r\nexport const Login = () => {\r\n    const [email, setEmail] = useState<string>(\"\")\r\n    const [password, setPassword] = useState<string>(\"\")\r\n    const errorEmail = email ? '' : 'write your email';\r\n    const errorPassword = password ? '' : 'write your password';\r\n    const [check, setCheck] = useState<boolean>(false)\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n\r\n    const onChangeCheck = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setCheck(e.currentTarget.checked)\r\n    }\r\n\r\n    const sentData = () => {\r\n        dispatch(loginTC({email, password, check}))\r\n        setEmail(\"\")\r\n        setPassword(\"\")\r\n        setCheck(false)\r\n    }\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return (\r\n        <div className={cls.loginContainer}>\r\n            <h1>Login</h1>\r\n            <div className={cls.card}>\r\n                <span className={cls.title}>It-incubator</span>\r\n                <span className={cls.subtitle}>Sign In</span>\r\n                <div>\r\n                    <span className={cls.titleEmail}>Email</span>\r\n                    <SuperInputText\r\n                        className={cls.inputEmail}\r\n                        value={email}\r\n                        type={\"text\"}\r\n                        onChangeText={setEmail}\r\n                        error={errorEmail}\r\n                        spanClassName={cls.spanErrorEmail}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <span className={cls.titlePassword}>Password</span>\r\n                    <SuperInputText\r\n                        className={cls.inputPassword}\r\n                        value={password}\r\n                        type={\"password\"}\r\n                        onChangeText={setPassword}\r\n                        error={errorPassword}\r\n                        spanClassName={cls.spanErrorPassword}\r\n                    />\r\n                </div>\r\n                <div className={cls.checkbox}>\r\n                    <input type={\"checkbox\"} checked={check} name={\"RememberMe\"} onChange={onChangeCheck}/>\r\n                    <span>Remember me</span>\r\n                </div>\r\n                <NavLink to={'/restore_password'} className={cls.restorePassword}>Forgot Password</NavLink>\r\n                <SuperButton className={cls.button} onClick={sentData}>Login</SuperButton>\r\n                <span className={cls.newAccount}>Don't have an account</span>\r\n                <NavLink to={'/registration'} className={cls.signUp}>Sign Up</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport cls from './Profile.module.css'\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../m2-bll/store\";\r\nimport {LoginResponseType} from \"../../m3-dal/API\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nexport const Profile = () => {\r\n    const info = useSelector<AppRootStateType, LoginResponseType>(state => state.profile.informationAboutUser)\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn)\r\n\r\n    if (!isLoggedIn) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    return (\r\n        <div className={cls.profileContainer}>\r\n            <h1>Profile</h1>\r\n            <div className={cls.card}>\r\n                <div className={cls.infoCards}>\r\n                    <div className={cls.infoUser}>\r\n                        <img className={cls.userPhoto} src={info.avatar ? info.avatar : \"\"}/>\r\n                        <span className={cls.userName}>{info.name}</span>\r\n                    </div>\r\n                    <span className={cls.userCards}>Number of cards: {info.publicCardPacksCount}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport cls from './PageNotFound.module.css'\r\n\r\n\r\nexport const PageNotFound = () => {\r\n    return (\r\n        <div className={cls.pageNotFoundContainer}>\r\n            <h1>PageNotFound</h1>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\ntype CheckPasswordType = {\r\n    email: string\r\n}\r\n\r\nexport const CheckPassword: React.FC<CheckPasswordType> = ({email}) => {\r\n    return (\r\n        <div>\r\n            <h2>It-incubator</h2>\r\n\r\n            <img src=\"\" alt=\"picture\"/>\r\n\r\n            <h3>Check email</h3>\r\n\r\n            <p>We've sent an Email with instructions to {email}</p>\r\n\r\n        </div>\r\n    )\r\n}","import axios from 'axios'\r\n\r\n\r\nconst axiosInstance = axios.create({\r\n    // baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0',\r\n    withCredentials: true\r\n})\r\n\r\n//api types\r\n\r\ntype ResponseType = {\r\n    info: string\r\n    error: string | null\r\n}\r\n\r\n\r\nexport const authApi = {\r\n    restorePassword(email: string) {\r\n        return axiosInstance.post<ResponseType>('/auth/forgot', {\r\n            email,\r\n            message: `<div style='background-color: lime; padding: 15px'>\r\n                      <p>To restore your password, follow the link below</p>\r\n                      <a href='https://georgeusynin.github.io/cards-react-redux/#/new_password/$token$'>Restore link</a>\r\n                      </div>`\r\n        })\r\n    },\r\n    setNewPassword(password: string, resetPasswordToken: string) {\r\n        return axiosInstance.post<ResponseType>('/auth/set-new-password', {\r\n            password,\r\n            resetPasswordToken\r\n        })\r\n    }\r\n}","//types\r\n\r\nimport {AppThunkType} from \"./store\";\r\nimport {authApi} from \"../m3-dal/apiRestore\";\r\n\r\ntype InitialStateType = {\r\n    showEmailCheck: boolean\r\n    error: string | null\r\n    isNewPasswordCreated: boolean\r\n}\r\n\r\nexport type RestorePasswordActionsType =\r\n\r\n    | ReturnType<typeof setShowEmailCheck>\r\n    | ReturnType<typeof setError>\r\n    | ReturnType<typeof setIsNewPasswordCreated>\r\n\r\n//actions\r\n\r\nconst setShowEmailCheck = (showEmailCheck: boolean) => {\r\n    return {\r\n        type: 'cards/restorePassword/setShowEmailCheck',\r\n        payload: {\r\n            showEmailCheck\r\n        }\r\n    } as const\r\n}\r\n\r\nconst setError = (error: string | null) => {\r\n    return {\r\n        type: 'cards/restorePassword/setError',\r\n        payload: {\r\n            error\r\n        }\r\n    } as const\r\n}\r\nconst setIsNewPasswordCreated = (isNewPasswordCreated: boolean) => {\r\n    return {\r\n        type: 'cards/restorePassword/setIsNewPasswordCreated',\r\n        payload: {\r\n            isNewPasswordCreated\r\n        }\r\n    } as const\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    showEmailCheck: false,\r\n    error: null,\r\n    isNewPasswordCreated: false\r\n}\r\n\r\nexport const restorePasswordReducer = (state: InitialStateType = initialState, action: RestorePasswordActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"cards/restorePassword/setShowEmailCheck\":\r\n        case \"cards/restorePassword/setError\":\r\n        case \"cards/restorePassword/setIsNewPasswordCreated\":\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\n//thunk\r\n\r\nexport const restorePassword = (email: string): AppThunkType => (dispatch) => {\r\n    authApi.restorePassword(email)\r\n        .then(res => {\r\n            dispatch(setShowEmailCheck(true))\r\n        })\r\n        .catch(err => {\r\n            const error = err.response\r\n                ?\r\n                err.response.data.error\r\n                :\r\n                (err.message + ', more details in the console')\r\n            debugger\r\n            dispatch(setError(error))\r\n        })\r\n}\r\n\r\nexport const setNewPassword = (password: string, resetPasswordToken: string): AppThunkType => (dispatch) => {\r\n    authApi.setNewPassword(password, resetPasswordToken)\r\n        .then(res => {\r\n            debugger\r\n            dispatch(setIsNewPasswordCreated(true))\r\n        })\r\n        .catch(err => {\r\n            const error = err.response\r\n                ?\r\n                err.response.data.error\r\n                :\r\n                (err.message + ', more details in the console')\r\n            dispatch(setError(error))\r\n        })\r\n}","import React, {useState} from 'react'\r\nimport cls from './RestorePassword.module.css'\r\nimport SuperInputText from \"../common/SuperInput/SuperInputText\";\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../m2-bll/store\";\r\nimport {CheckPassword} from \"../CheckPassword/CheckPassword\";\r\nimport {restorePassword} from \"../../m2-bll/restorePasswordReducer\";\r\n\r\n\r\nexport const RestorePassword = () => {\r\n\r\n    const showEmailCheck = useSelector<AppRootStateType, boolean>(state => state.restorePassword.showEmailCheck)\r\n\r\n    const error = useSelector<AppRootStateType, null | string>(state => state.restorePassword.error)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [email, setEmail] = useState('')\r\n\r\n    const onChangeEmail = (email: string) => {\r\n        setEmail(email)\r\n    }\r\n\r\n    const onClickSend = () => {\r\n        dispatch(restorePassword(email))\r\n    }\r\n\r\n    return (\r\n        <div className={cls.restorePasswordContainer}>\r\n            {\r\n                showEmailCheck\r\n                    ?\r\n                    <CheckPassword email={email}/>\r\n                    :\r\n                    <div className={cls.card}>\r\n\r\n                        <h2 className={cls.title}>It-incubator</h2>\r\n\r\n                        <h3>Forgot your password?</h3>\r\n\r\n                        <SuperInputText\r\n                            value={email}\r\n                            onChangeText={onChangeEmail}\r\n                            className={cls.inputEmail}\r\n                            placeholder={'Email'}\r\n                        />\r\n\r\n                        <p>{error}</p>\r\n\r\n                        <p className={`${cls.text} ${cls.firstAdvice}`}>Enter your email address and we will send\r\n                            you further\r\n                            instructions</p>\r\n\r\n                        <SuperButton onClick={onClickSend} className={cls.button}>Send Instructions</SuperButton>\r\n\r\n                        <p className={`${cls.text} ${cls.secondAdvice}`}>Did you remember your password?</p>\r\n\r\n                        <div className={cls.reLogin}>\r\n                            <NavLink to={'/login'}>Try logging in</NavLink>\r\n                        </div>\r\n\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n//","import React, {useState} from 'react'\r\nimport {Redirect, useParams} from 'react-router-dom'\r\nimport cls from './NewPassword.module.css'\r\nimport SuperInputText from \"../common/SuperInput/SuperInputText\";\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../m2-bll/store\";\r\nimport {setNewPassword} from \"../../m2-bll/restorePasswordReducer\";\r\n\r\n\r\nexport const NewPassword = () => {\r\n    debugger\r\n\r\n    const isNewPasswordCreated = useSelector<AppRootStateType, boolean>(state => state.restorePassword.isNewPasswordCreated)\r\n\r\n    const error = useSelector<AppRootStateType, null | string>(state => state.restorePassword.error)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const {token} = useParams<{ token: string }>();\r\n\r\n    const [password, setPassword] = useState('')\r\n\r\n    const onChangePassword = (password: string) => {\r\n        setPassword(password)\r\n    }\r\n\r\n    const onClickSend = () => {\r\n        if (token)\r\n            dispatch(setNewPassword(password, token))\r\n    }\r\n\r\n    if (isNewPasswordCreated) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    return (\r\n        <div className={cls.newPasswordContainer}>\r\n\r\n            <h2>It-incubator</h2>\r\n\r\n            <h3>Create new Password</h3>\r\n\r\n            <SuperInputText value={password} onChangeText={onChangePassword}/>\r\n\r\n            <p>{error}</p>\r\n\r\n            <p>Create new password and we will send you further instructions to email</p>\r\n\r\n            <SuperButton onClick={onClickSend}>Send instructions</SuperButton>\r\n\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React from \"react\";\r\nimport cls from './TestComponents.module.css'\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport SuperInputText from \"../common/SuperInput/SuperInputText\";\r\nimport SuperCheckbox from \"../common/SuperCheckbox/SuperCheckbox\";\r\n\r\nexport const TestComponents = () => {\r\n    return (\r\n        <div className={cls.testComponentsContainer}>\r\n            <h1>Common components</h1>\r\n            <div className={cls.componentsContainer}>\r\n                <div>\r\n                    <h2>Button</h2>\r\n                    <SuperButton>\r\n                        Button\r\n                    </SuperButton>\r\n                </div>\r\n                <div>\r\n                    <h2>Input Text</h2>\r\n                    <SuperInputText/>\r\n                </div>\r\n                <div>\r\n                    <h2>CheckBox</h2>\r\n                    <SuperCheckbox/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import axios from 'axios'\r\n\r\nexport interface IRegisterData {\r\n  addedUser: {},\r\n  error?: string\r\n}\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://neko-back.herokuapp.com/2.0',\r\n  withCredentials: true,\r\n})\r\n\r\nexport const RegisterAPI = {\r\n  register(email: string, password: string) {\r\n    debugger\r\n    return instance.post<IRegisterData>(`auth/register`, {email, password})\r\n  },\r\n}\r\n","import {RegisterAPI} from \"../m3-dal/registerAPI\";\r\nimport {AppThunkType} from \"./store\";\r\n\r\nexport const REGISTER_LOADING = 'REGISTER/LOADING';\r\nexport const REGISTER_ERROR = 'REGISTER/ERROR';\r\nexport const REGISTER_SUCCESS = 'REGISTER/SUCCESS';\r\n\r\nexport const REGISTER = 'REGISTER/SOME';\r\n\r\ntype InitialStateType = {\r\n    isRegistered: boolean\r\n}\r\n\r\nexport const registerInitialState: InitialStateType = { // blank\r\n    isRegistered: false\r\n};\r\n\r\n\r\nexport type RegisterActions = ReturnType<typeof registerSome>;\r\n\r\nexport const registerSome = (isRegistered: boolean) => {\r\n    return {\r\n        type: REGISTER,\r\n        isRegistered\r\n    } as const\r\n}\r\n\r\nexport const registerReducer = (state = registerInitialState, action: RegisterActions): InitialStateType => {\r\n    switch (action.type) {\r\n        case REGISTER: { // blank\r\n            return {\r\n                ...state,\r\n                isRegistered: action.isRegistered\r\n            }\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n\r\n\r\nexport const register =\r\n    (email: string, password: string): AppThunkType => async (dispatch) => {\r\n        try {\r\n            let res = await RegisterAPI.register(email, password)\r\n            console.log(res)\r\n            dispatch(registerSome(true))\r\n        } catch (e) {\r\n            const error = e.response.data.error\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n","import React, { useState } from 'react'\r\nimport cls from './Register.module.css'\r\nimport { useDispatch } from 'react-redux'\r\nimport {register} from \"../../m2-bll/registerReducer\";\r\n\r\ninterface IRegisterProps {\r\n\r\n}\r\n\r\nexport const Register: React.FC<IRegisterProps> = ({}) => {\r\n  // const emailInputRef = React.useRef<HTMLInputElement>(null)\r\n  // const passwordInputRef = React.useRef<HTMLInputElement>(null)\r\n  // const confirmPassInputRef = React.useRef<HTMLInputElement>(null)\r\n  \r\n  const dispatch = useDispatch()\r\n  \r\n  let [email, setEmail] = useState<string>('')\r\n  let [pass, setPass] = useState<string>('')\r\n  let [confirmPass, setConfirmPass] = useState<string>('')\r\n  let [error, setError] = useState<string | null>(null)\r\n  \r\n  const cancelHandler = () => {\r\n    console.log('cancel')\r\n  }\r\n  const registerHandler = () => {\r\n    debugger\r\n    console.log('register')\r\n    if (pass === confirmPass) {\r\n      dispatch(register(email, pass))\r\n      setError(null)\r\n    } else {\r\n      setError('password don\\'t match')\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <div className={cls.registrationContainer}>\r\n      <div className={cls.content}>\r\n        <h2 className={cls.title}>IT-Incubator</h2>\r\n        <h2 className={cls.title}>Sign Up</h2>\r\n        <div className={cls.form}>\r\n          <label>\r\n            <div className={cls.inputTitle}>Email</div>\r\n            <input className={cls.input} type=\"email\"  value={email}\r\n                   onChange={(e) => setEmail(e.currentTarget.value)}/>\r\n          </label>\r\n          <label>\r\n            <div className={cls.inputTitle}>Password</div>\r\n            <input className={cls.input} type=\"password\"  value={pass}\r\n                   onChange={(e) => setPass(e.currentTarget.value)}/>\r\n          </label>\r\n          <label>\r\n            <div className={cls.inputTitle}>Confirm Password</div>\r\n            <input className={cls.input} type=\"password\"  value={confirmPass}\r\n                   onChange={(e) => setConfirmPass(e.currentTarget.value)}/>\r\n          </label>\r\n        </div>\r\n        <div className={cls.info}>\r\n          {error && <div className={cls.error}>{error}</div>}\r\n        </div>\r\n        <div className={cls.buttonsContainer}>\r\n          <button className={cls.cancelBtn} onClick={cancelHandler}>Cancel\r\n          </button>\r\n          <button className={cls.registerBtn} onClick={registerHandler}>Register</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\nimport {Redirect} from 'react-router'\r\nimport {Register} from './Register'\r\nimport {useSelector} from 'react-redux'\r\nimport {AppRootStateType} from \"../../m2-bll/store\";\r\n// import {SIGN_IN_PATH} from \"../../../../neko-1-main/m-1-ui/Routes\";\r\n\r\nconst RegisterContainer: React.FC = () => {\r\n    const isRegistered = useSelector<AppRootStateType, boolean>(state => state.register.isRegistered)\r\n    // redirect logic\r\n    if (isRegistered) return <Redirect to={'/login'}/>\r\n\r\n    return (\r\n        <Register/>\r\n    )\r\n}\r\n\r\nexport default RegisterContainer\r\n","import React from 'react';\r\nimport RegisterContainer from \"./RegisterContainer\";\r\n\r\nconst RegisterPage: React.FC = () => {\r\n  console.log('render RegisterPage');\r\n  return (\r\n    <RegisterContainer/>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n","import React from 'react';\r\nimport {Route} from 'react-router-dom';\r\nimport './App.css';\r\nimport {Header} from './Header/Header';\r\nimport {Login} from \"./Login/Login\";\r\nimport {Profile} from \"./Profile/Profile\";\r\nimport {PageNotFound} from \"./PageNotFound/PageNotFound\";\r\nimport {RestorePassword} from \"./RestorePassword/RestorePassword\";\r\nimport {NewPassword} from \"./NewPassword/NewPassword\";\r\nimport {TestComponents} from \"./TestComponents/TestComponents\";\r\nimport RegisterPage from './Registration/RegisterPage'\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className='app-wrapper'>\r\n\r\n            <Header/>\r\n            <div className='app-wrapper-content'>\r\n                <Route path={'/login'} render={() => <Login/>}/>\r\n                <Route path={'/registration'} render={() => <RegisterPage/>}/>\r\n                <Route path={'/profile'} render={() => <Profile/>}/>\r\n                <Route path={'/404'} render={() => <PageNotFound/>}/>\r\n                <Route path={'/restore_password'} render={() => <RestorePassword/>}/>\r\n                <Route path={'/new_password/:token?'} render={() => <NewPassword/>}/> {/* дял отображения <NewPassword/> после token стоит \"?\" */}\r\n                <Route path={'/test_components'} render={() => <TestComponents/>}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware} from \"redux\";\r\nimport {combineReducers, createStore} from \"redux\";\r\nimport thunk, {ThunkAction} from \"redux-thunk\";\r\nimport {AuthActionsType, authReducer} from \"./authReducer\";\r\nimport {ProfileActionsType, profileReducer} from \"./profileReducer\";\r\nimport {RegisterActions, registerReducer} from './registerReducer'\r\nimport {RestorePasswordActionsType, restorePasswordReducer} from \"./restorePasswordReducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    profile: profileReducer,\r\n    restorePassword: restorePasswordReducer,\r\n    register: registerReducer\r\n})\r\n\r\nexport type AppActionsType = RestorePasswordActionsType | RegisterActions | AuthActionsType | ProfileActionsType\r\n\r\nexport type AppThunkType<ReturnType = void> = ThunkAction<ReturnType, AppRootStateType, unknown, AppActionsType>\r\n\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n\r\n//@ts-ignore\r\nwindow.store = store","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './n1-main/m1-ui/App'\r\nimport reportWebVitals from './reportWebVitals'\r\nimport { HashRouter } from 'react-router-dom'\r\nimport { Provider } from 'react-redux'\r\nimport {store} from \"./n1-main/m2-bll/store\";\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <Provider store={store}>\r\n        <App/>\r\n      </Provider>\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginContainer\":\"Login_loginContainer__3efiI\",\"card\":\"Login_card__1w84R\",\"title\":\"Login_title__3tkKw\",\"subtitle\":\"Login_subtitle__22JQq\",\"titleEmail\":\"Login_titleEmail__3_nhg\",\"inputEmail\":\"Login_inputEmail__TE3pQ\",\"spanErrorEmail\":\"Login_spanErrorEmail__YgcNl\",\"titlePassword\":\"Login_titlePassword__1poxZ\",\"inputPassword\":\"Login_inputPassword__13GGl\",\"spanErrorPassword\":\"Login_spanErrorPassword__1DkyW\",\"checkbox\":\"Login_checkbox__30IUp\",\"restorePassword\":\"Login_restorePassword__1-beV\",\"button\":\"Login_button__3r3_H\",\"newAccount\":\"Login_newAccount__xDhKj\",\"signUp\":\"Login_signUp__3mn0Y\"};"],"sourceRoot":""}