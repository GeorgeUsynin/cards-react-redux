{"version":3,"sources":["n1-main/m1-ui/PacksList/PacksList.module.scss","n1-main/m1-ui/Profile/PersonalInfo/PersonalInfo.module.scss","n1-main/m1-ui/RestorePassword/RestorePassword.module.scss","n1-main/m1-ui/NewPassword/NewPassword.module.scss","n1-main/m1-ui/HeaderMain/HeaderMain.module.scss","n1-main/m1-ui/CheckPassword/CheckPassword.module.scss","n1-main/m1-ui/Profile/UserInfo/UserInfo.module.scss","n1-main/m1-ui/common/SuperInput/SuperInputText.module.scss","n1-main/m1-ui/Profile/Profile.module.scss","n1-main/m1-ui/common/SuperButton/SuperButton.module.css","n1-main/m1-ui/Profile/UserInfoCards/UserInfoCards.module.scss","n1-main/m1-ui/TestComponents/TestComponents.module.css","n1-main/m1-ui/common/SuperCheckbox/SuperCheckbox.module.css","n1-main/m1-ui/PacksList/TablePacks/TablePacks.module.scss","n1-main/m1-ui/Header/Header.module.scss","n1-main/m1-ui/common/preloader/Preloader.module.scss","n1-main/m1-ui/PacksList/TablePacks/TableHeader/TableHeader.module.scss","n1-main/m1-ui/PacksList/TablePacks/TableData/TableData.module.scss","n1-main/m1-ui/common/Paginator/Paginator.module.scss","n1-main/m1-ui/Login/Login.module.scss","n1-main/m1-ui/Registration/Register.module.scss","reportWebVitals.ts","n1-main/m3-dal/API.ts","n1-main/m3-dal/apiProfile.ts","n1-main/m2-bll/profileReducer.ts","n1-main/m3-dal/registerAPI.ts","n1-main/m2-bll/registerReducer.ts","n1-main/m2-bll/authReducer.ts","n1-main/m3-dal/apiRestore.ts","n1-main/m2-bll/restorePasswordReducer.ts","n1-main/m3-dal/apiPacks.ts","n1-main/m2-bll/packsReducer.ts","n1-main/m2-bll/store.ts","n1-main/m1-ui/Header/Header.tsx","n1-main/m1-ui/common/SuperInput/SuperInputText.tsx","n1-main/m1-ui/common/SuperButton/SuperButton.tsx","assets/images/eye.svg","assets/images/closedEye.svg","n1-main/m1-ui/common/preloader/Preloader.tsx","n1-main/m1-ui/Login/Login.tsx","assets/images/avatar.png","n1-main/m1-ui/Profile/UserInfo/UserInfo.tsx","n1-main/m1-ui/Profile/UserInfoCards/UserInfoCards.tsx","n1-main/m1-ui/Profile/Profile.tsx","n1-main/m1-ui/PageNotFound/PageNotFound.tsx","assets/images/letter.svg","n1-main/m1-ui/CheckPassword/CheckPassword.tsx","n1-main/m1-ui/RestorePassword/RestorePassword.tsx","n1-main/m1-ui/NewPassword/NewPassword.tsx","n1-main/m1-ui/common/SuperCheckbox/SuperCheckbox.tsx","n1-main/m1-ui/TestComponents/TestComponents.tsx","n1-main/m1-ui/Profile/PersonalInfo/PersonalInfo.tsx","n1-main/m1-ui/Registration/Register.tsx","n1-main/m1-ui/HeaderMain/HeaderMain.tsx","n1-main/m1-ui/PacksList/TablePacks/TableHeader/TableHeader.tsx","n1-main/m1-ui/PacksList/TablePacks/TableData/TableData.tsx","n1-main/m1-ui/PacksList/TablePacks/TablePacks.tsx","n1-main/m1-ui/common/Search/Search.tsx","n1-main/m1-ui/common/Paginator/Paginator.tsx","n1-main/m1-ui/PacksList/PacksList.tsx","n1-main/App.tsx","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","create","baseURL","withCredentials","authAPI","data","post","delete","axiosInstance","profileApi","name","avatar","put","initialState","informationAboutUser","_id","email","publicCardPacksCount","created","Date","updated","isAdmin","verified","rememberMe","error","isFetching","setInformationAboutUserAC","type","setPersonalInfoLoading","RegisterAPI","password","REGISTER_LOADING","REGISTER_ERROR","REGISTER_SUCCESS","registerInitialState","isRegistered","setRegisterError","setRegisterLoading","isLoggedIn","setIsLoggedInAC","value","setLoginError","setLoginLoading","isLoggedInApp","dispatch","res","catch","e","response","messages","console","log","finally","authApi","message","resetPasswordToken","setShowEmailCheck","showEmailCheck","payload","setRestorePasswordError","setRestorePasswordLoading","isNewPasswordCreated","packsApi","packName","min","max","sortPacks","page","pageCount","get","params","cardPacks","request","cardPacksTotalCount","maxCardsCount","minCardsCount","setDataPacks","dataPacks","rootReducer","combineReducers","auth","state","action","profile","updatedUser","restorePassword","register","packs","store","createStore","applyMiddleware","thunk","window","Header","className","cls","header","to","replace","SuperInputText","onChange","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","errorInput","superInput","currentTarget","key","map","err","SuperButton","red","finalClassName","default","Preloader","loader","Login","useDispatch","useSelector","useState","setType","formik","useFormik","initialValues","validate","values","errors","test","length","onSubmit","PATH","PROFILE","loginContainer","card","title","subtitle","handleSubmit","titleEmail","inputContainer","getFieldProps","inputEmailPassword","onClick","touched","style","color","match","titlePassword","eye","src","closedEye","alt","checkbox","buttonContainer","button","newAccount","signUp","UserInfo","infoUser","userPhoto","defaultAvatar","userName","editProfileWrapper","UserInfoCards","infoUserCards","userCards","Profile","isFetchingAUTH","isFetchingPROFILE","info","useEffect","profileContainer","PageNotFound","pageNotFoundContainer","CheckPassword","checkPasswordContainer","imgContainer","letter","firstNote","secondNote","LOGIN","RestorePassword","restorePasswordContainer","inputEmail","placeholder","reLogin","NewPassword","token","useParams","newPasswordContainer","inputPassword","margin","note","SuperCheckbox","onChangeChecked","children","checked","TestComponents","testComponentsContainer","componentsContainer","PersonalInfo","history","useHistory","id","ava","setAva","nickname","setNickname","infoContainer","imgWrapper","inputNicknameAvatar","cancelButton","push","registerButton","editUserProfileTC","Register","confirmPassword","a","changeTypeHandler","registrationContainer","HeaderMain","location","useLocation","headerContainer","wrapper","logo","linksContainer","linkContainer","PACKS_LIST","pathname","active","tabIndex","logoutBtn","TableHeader","tableHeader","TableData","cardsCount","user_id","tableData","TablePacks","packsData","tableContainer","pack","Search","setRequest","Paginator","pages","i","onPageChanges","setCurrentPage","p","styles","selectedPage","PacksList","packlistContainer","ownerTitle","buttonsContainer","myButton","allButton","numberTitle","range","packslist","packslistTitle","search_AddButtonContainer","search","addButtonContainer","addPackButton","USER_INFO","REGISTRATION","TEST_COMPONENTS","PAGE_NOT_FOUND","RESTORE_PASSWORD","NEW_PASSWORD","App","exact","path","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.feccf49c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"packlistContainer\":\"PacksList_packlistContainer__203H9\",\"card\":\"PacksList_card__4iZ9t\",\"info\":\"PacksList_info__1gH48\",\"ownerTitle\":\"PacksList_ownerTitle__G6PSA\",\"buttonsContainer\":\"PacksList_buttonsContainer__cNOXd\",\"numberTitle\":\"PacksList_numberTitle__1p9tV\",\"packslist\":\"PacksList_packslist__3okA6\",\"packslistTitle\":\"PacksList_packslistTitle__1aQ_O\",\"search_AddButtonContainer\":\"PacksList_search_AddButtonContainer__P3a5F\",\"search\":\"PacksList_search__uEFwQ\",\"addButtonContainer\":\"PacksList_addButtonContainer__2L2UU\",\"addPackButton\":\"PacksList_addPackButton__37DlD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoContainer\":\"PersonalInfo_infoContainer__2OKjr\",\"card\":\"PersonalInfo_card__3lzkm\",\"title\":\"PersonalInfo_title__1HxQO\",\"imgWrapper\":\"PersonalInfo_imgWrapper__1_NOT\",\"inputContainer\":\"PersonalInfo_inputContainer__20Xds\",\"inputNicknameAvatar\":\"PersonalInfo_inputNicknameAvatar__3kz6z\",\"buttonContainer\":\"PersonalInfo_buttonContainer__2JFke\",\"cancelButton\":\"PersonalInfo_cancelButton__1Goa2\",\"registerButton\":\"PersonalInfo_registerButton__2k6O8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"restorePasswordContainer\":\"RestorePassword_restorePasswordContainer__3wwbJ\",\"card\":\"RestorePassword_card__13eXp\",\"title\":\"RestorePassword_title__7T_Sc\",\"subtitle\":\"RestorePassword_subtitle__6udjQ\",\"inputContainer\":\"RestorePassword_inputContainer__25m67\",\"inputEmail\":\"RestorePassword_inputEmail__2h3fP\",\"firstNote\":\"RestorePassword_firstNote__dHJA8\",\"buttonContainer\":\"RestorePassword_buttonContainer__6b9Rc\",\"button\":\"RestorePassword_button__3OtoL\",\"secondNote\":\"RestorePassword_secondNote__u33ED\",\"reLogin\":\"RestorePassword_reLogin__115Di\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPasswordContainer\":\"NewPassword_newPasswordContainer__2W262\",\"card\":\"NewPassword_card__2STyj\",\"title\":\"NewPassword_title__3MrsO\",\"subtitle\":\"NewPassword_subtitle__xymY6\",\"inputContainer\":\"NewPassword_inputContainer__aG24R\",\"eye\":\"NewPassword_eye__3Nt59\",\"inputPassword\":\"NewPassword_inputPassword__1jwIk\",\"note\":\"NewPassword_note__3Are5\",\"buttonContainer\":\"NewPassword_buttonContainer__3DPdQ\",\"button\":\"NewPassword_button__3-ZIq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"HeaderMain_headerContainer__1t0Yy\",\"wrapper\":\"HeaderMain_wrapper__x0UjY\",\"logo\":\"HeaderMain_logo__2dm-D\",\"linksContainer\":\"HeaderMain_linksContainer__2Nnya\",\"linkContainer\":\"HeaderMain_linkContainer__25SoB\",\"active\":\"HeaderMain_active__3RSCn\",\"buttonContainer\":\"HeaderMain_buttonContainer__2FGST\",\"logoutBtn\":\"HeaderMain_logoutBtn__3iDpb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkPasswordContainer\":\"CheckPassword_checkPasswordContainer__1ni7O\",\"card\":\"CheckPassword_card__rQtwW\",\"title\":\"CheckPassword_title__3hHul\",\"imgContainer\":\"CheckPassword_imgContainer__tY4ua\",\"subtitle\":\"CheckPassword_subtitle__1yJNt\",\"firstNote\":\"CheckPassword_firstNote__2Ezf9\",\"secondNote\":\"CheckPassword_secondNote__1FTG7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoUser\":\"UserInfo_infoUser__2-Ur5\",\"userName\":\"UserInfo_userName__20AlV\",\"editProfileWrapper\":\"UserInfo_editProfileWrapper__Sm275\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorInput\":\"SuperInputText_errorInput__1s9vg\",\"error\":\"SuperInputText_error__1BK8m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileContainer\":\"Profile_profileContainer__17JgP\",\"card\":\"Profile_card__1gvrl\",\"info\":\"Profile_info__2n02S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2WNQ6\",\"red\":\"SuperButton_red__1si2j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoUserCards\":\"UserInfoCards_infoUserCards__1JTR6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"testComponentsContainer\":\"TestComponents_testComponentsContainer__2JwAI\",\"componentsContainer\":\"TestComponents_componentsContainer__1m_9P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2drz_\",\"spanClassName\":\"SuperCheckbox_spanClassName__3LAnk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableContainer\":\"TablePacks_tableContainer__TurzH\",\"tableHeader\":\"TablePacks_tableHeader__1CXws\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__LWinR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Preloader_loader__6QB1q\",\"load7\":\"Preloader_load7__2zpZX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableHeader\":\"TableHeader_tableHeader__1vH1Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableData\":\"TableData_tableData__3vXs_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__1_Qpu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginContainer\":\"Login_loginContainer__1SVOg\",\"card\":\"Login_card__2mLHC\",\"title\":\"Login_title__2UUgW\",\"subtitle\":\"Login_subtitle__DbChu\",\"titleEmail\":\"Login_titleEmail__1iUd3\",\"titlePassword\":\"Login_titlePassword__3ZnqY\",\"inputContainer\":\"Login_inputContainer__JcY_7\",\"eye\":\"Login_eye__1spUq\",\"inputEmailPassword\":\"Login_inputEmailPassword__20Vs6\",\"checkbox\":\"Login_checkbox__2J4mn\",\"rememberMe\":\"Login_rememberMe__3YBcc\",\"restorePassword\":\"Login_restorePassword__PgDBI\",\"buttonContainer\":\"Login_buttonContainer__1lcN7\",\"button\":\"Login_button__2_yDM\",\"newAccount\":\"Login_newAccount__3CJO5\",\"signUp\":\"Login_signUp__2tk-n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registrationContainer\":\"Register_registrationContainer__UmmAC\",\"card\":\"Register_card___EsZn\",\"title\":\"Register_title__27VHU\",\"subtitle\":\"Register_subtitle__3mACY\",\"titleEmail\":\"Register_titleEmail__2SneJ\",\"titlePassword\":\"Register_titlePassword__eIshG\",\"inputContainer\":\"Register_inputContainer__1dcrn\",\"eye\":\"Register_eye__JXYXU\",\"inputEmailPassword\":\"Register_inputEmailPassword__1lV5L\",\"buttonContainer\":\"Register_buttonContainer__37yYJ\",\"cancelButton\":\"Register_cancelButton__Kmh2o\",\"registerButton\":\"Register_registerButton__EbWTP\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from 'axios'\r\nimport {DefaultResponseType} from \"./apiRestore\";\r\n\r\nconst instance = axios.create({\r\n    // baseURL: \"http://localhost:7542/2.0/\",\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0\",\r\n    withCredentials: true,\r\n});\r\n\r\nexport const authAPI = {\r\n    login(data: LoginParamsType) {\r\n        return instance.post<LoginResponseType>(\"auth/login\", data)\r\n    },\r\n    logout() {\r\n        return instance.delete<DefaultResponseType>(\"auth/me\")\r\n    },\r\n    isAuthorized () {\r\n        return instance.post<LoginResponseType>(\"auth/me\",{})\r\n    }\r\n}\r\n\r\n\r\nexport type LoginParamsType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\nexport type LoginResponseType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar: string\r\n    publicCardPacksCount: number\r\n    created: DateConstructor\r\n    updated: DateConstructor\r\n    isAdmin: boolean\r\n    verified: boolean\r\n    rememberMe: boolean\r\n    error?: string\r\n}\r\n","import axios from 'axios'\r\nimport {LoginResponseType} from \"./API\";\r\n\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    // baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true\r\n})\r\n\r\n//api types\r\n\r\nexport const profileApi = {\r\n    editUserNameAvatar(name: string, avatar: string) {\r\n        return axiosInstance.put<{updatedUser: LoginResponseType}>('/auth/me', {\r\n            name,\r\n            avatar\r\n        })\r\n    }\r\n\r\n}","import {LoginResponseType} from \"../m3-dal/API\";\r\nimport {AppThunkType} from \"./store\";\r\nimport {profileApi} from \"../m3-dal/apiProfile\";\r\n\r\ntype InitialStateType = {\r\n    informationAboutUser: LoginResponseType\r\n    isFetching: boolean\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    informationAboutUser: {\r\n        _id: \"\",\r\n        email: \"\",\r\n        name: \"\",\r\n        publicCardPacksCount: 0,\r\n        created: Date,\r\n        updated: Date,\r\n        isAdmin: false,\r\n        verified: false,\r\n        rememberMe: false,\r\n        avatar: \"\",\r\n        error: \"\"\r\n    },\r\n    isFetching: false\r\n}\r\n\r\n/*export type LoginResponseType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar?: string\r\n    publicCardPacksCount: number\r\n    created: Date\r\n    updated: Date\r\n    isAdmin: boolean\r\n    verified: boolean\r\n    rememberMe: boolean\r\n    error?: string\r\n}*/\r\n\r\nexport const profileReducer = (state: InitialStateType = initialState, action: ProfileActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'profile/SET-INFORMATION-ABOUT-USER':\r\n            return {...state, informationAboutUser: action.data}\r\n        case \"profile/SET-UPDATED-USER\":\r\n            return {...state, informationAboutUser: action.updatedUser}\r\n        case \"profile/SET-PERSONAL-INFO-LOADING\":\r\n            return {...state, isFetching: action.isFetching}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setInformationAboutUserAC = (data: LoginResponseType) =>\r\n    ({type: 'profile/SET-INFORMATION-ABOUT-USER', data} as const)\r\n\r\nexport const setUpdatedUserAC = (updatedUser: LoginResponseType) =>\r\n    ({type: 'profile/SET-UPDATED-USER', updatedUser} as const)\r\n\r\nexport const setPersonalInfoLoading = (isFetching: boolean) => {\r\n    return {\r\n        type: 'profile/SET-PERSONAL-INFO-LOADING',\r\n        isFetching\r\n    } as const\r\n}\r\n\r\n\r\nexport const editUserProfileTC = (name: string, avatar: string): AppThunkType => (dispatch) => {\r\n    dispatch(setPersonalInfoLoading(true))\r\n    profileApi.editUserNameAvatar(name, avatar)\r\n        .then(res => {\r\n            dispatch(setUpdatedUserAC(res.data.updatedUser))\r\n        })\r\n        .catch(err => {\r\n            const error = err.response\r\n                ?\r\n                err.response.data.error\r\n                :\r\n                (err.message + ', more details in the console')\r\n            console.log(`error: ${error}`)\r\n        })\r\n        .finally(()=>{\r\n            dispatch(setPersonalInfoLoading(false))\r\n        })\r\n}\r\n\r\nexport type ProfileActionsType = ReturnType<typeof setInformationAboutUserAC | typeof setUpdatedUserAC | typeof setPersonalInfoLoading>","import axios from 'axios'\r\n\r\nexport interface IRegisterData {\r\n  addedUser: {},\r\n  error?: string\r\n}\r\n\r\nconst instance = axios.create({\r\n  // baseURL: \"http://localhost:7542/2.0/\",\r\n  baseURL: 'https://neko-back.herokuapp.com/2.0',\r\n  withCredentials: true,\r\n\r\n})\r\n\r\nexport const RegisterAPI = {\r\n  register(email: string, password: string) {\r\n    return instance.post<IRegisterData>(`auth/register`, {email, password})\r\n  },\r\n}\r\n","import { RegisterAPI } from '../m3-dal/registerAPI'\r\nimport { AppThunkType } from './store'\r\n\r\nexport const REGISTER_LOADING = 'REGISTER/LOADING'\r\nexport const REGISTER_ERROR = 'REGISTER/ERROR'\r\nexport const REGISTER_SUCCESS = 'REGISTER/SUCCESS'\r\n\r\ntype InitialStateType = {\r\n  isRegistered: boolean,\r\n  error: string | null,\r\n  isFetching: boolean\r\n}\r\n\r\nexport const registerInitialState: InitialStateType = {\r\n  isRegistered: false,\r\n  error: null,\r\n  isFetching: false,\r\n}\r\n\r\n\r\nexport type RegisterActions = ReturnType<typeof setRegisterSuccess\r\n  | typeof setRegisterError\r\n  | typeof setRegisterLoading>;\r\n\r\nexport const setRegisterSuccess = (isRegistered: boolean) => {\r\n  return {\r\n    type: REGISTER_SUCCESS,\r\n    isRegistered,\r\n  } as const\r\n}\r\n\r\nexport const setRegisterError = (error: string | null) => {\r\n  return {\r\n    type: REGISTER_ERROR,\r\n    error,\r\n  } as const\r\n}\r\n\r\nexport const setRegisterLoading = (isFetching: boolean) => {\r\n  return {\r\n    type: REGISTER_LOADING,\r\n    isFetching,\r\n  } as const\r\n}\r\n\r\nexport const registerReducer = (state = registerInitialState, action: RegisterActions): InitialStateType => {\r\n  switch (action.type) {\r\n    case REGISTER_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        isRegistered: action.isRegistered,\r\n      }\r\n    }\r\n    case REGISTER_ERROR: {\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n      }\r\n    }\r\n    case REGISTER_LOADING: {\r\n      return {\r\n        ...state,\r\n        isFetching: action.isFetching,\r\n      }\r\n    }\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const register =\r\n  (email: string, password: string): AppThunkType => async (dispatch) => {\r\n    dispatch(setRegisterLoading(true))\r\n    try {\r\n      await RegisterAPI.register(email, password)\r\n      dispatch(setRegisterSuccess(true))\r\n    } catch (e) {\r\n      const error = e.response.data.error\r\n      dispatch(setRegisterError(error))\r\n    }\r\n    finally {\r\n      dispatch(setRegisterLoading(false))\r\n    }\r\n  }","import {authAPI, LoginParamsType} from \"../m3-dal/API\";\r\nimport {setInformationAboutUserAC} from \"./profileReducer\";\r\nimport {AppThunkType} from \"./store\";\r\nimport {REGISTER_ERROR, REGISTER_LOADING} from \"./registerReducer\";\r\n\r\ntype InitialStateType = {\r\n    isFetching: boolean\r\n    isLoggedIn: boolean\r\n    error: string | null\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    isFetching: false,\r\n    isLoggedIn: false,\r\n    error: null\r\n}\r\n\r\n// actions\r\nexport const setIsLoggedInAC = (value: boolean) =>\r\n    ({type: 'login/SET-IS-LOGGED-IN', value} as const)\r\n\r\nexport const setIsLoggedOutAC = (value: boolean) =>\r\n    ({type: 'logout/SET-IS-LOGGED-OUT', value} as const)\r\n\r\nexport const setLoginError = (error: string | null) => {\r\n    return {\r\n        type: REGISTER_ERROR,\r\n        error,\r\n    } as const\r\n}\r\n\r\nexport const setLoginLoading = (isFetching: boolean) => {\r\n    return {\r\n        type: REGISTER_LOADING,\r\n        isFetching,\r\n    } as const\r\n}\r\n\r\n//reducer\r\n\r\nexport const authReducer = (state: InitialStateType = initialState, action: AuthActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'login/SET-IS-LOGGED-IN':\r\n        case 'logout/SET-IS-LOGGED-OUT':\r\n            return {...state, isLoggedIn: action.value}\r\n        case \"REGISTER/ERROR\":\r\n            return {...state, error: action.error}\r\n        case \"REGISTER/LOADING\":\r\n            return {...state, isFetching: action.isFetching}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// thunks\r\nexport const loginTC = (data: LoginParamsType): AppThunkType => (dispatch) => {\r\n    dispatch(setLoginLoading(true))\r\n    authAPI.login(data)\r\n        .then(res => {\r\n            dispatch(setInformationAboutUserAC(res.data))\r\n            dispatch(setIsLoggedInAC(true))\r\n        })\r\n        .catch((e) => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.messages + ', more details in the console')\r\n            dispatch(setLoginError(error))\r\n        })\r\n        .finally(() => {\r\n            dispatch(setLoginLoading(false))\r\n        })\r\n}\r\n\r\nexport const logoutTC = (): AppThunkType => (dispatch) => {\r\n    dispatch(setLoginLoading(true))\r\n    authAPI.logout()\r\n        .then(res => {\r\n            dispatch(setIsLoggedOutAC(false))\r\n        })\r\n        .catch((e) => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.messages + ', more details in the console')\r\n        })\r\n        .finally(() => {\r\n            dispatch(setLoginLoading(false))\r\n        })\r\n}\r\n\r\nexport const isLoggedInApp = (): AppThunkType => (dispatch) => {\r\n    dispatch(setLoginLoading(true))\r\n    authAPI.isAuthorized()\r\n        .then(res => {\r\n            dispatch(setInformationAboutUserAC(res.data))\r\n            dispatch(setIsLoggedInAC(true))\r\n        })\r\n        .catch((e) => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.messages + ', more details in the console')\r\n            console.log('Error: ', {...e})\r\n        })\r\n        .finally(() => {\r\n            dispatch(setLoginLoading(false))\r\n        })\r\n}\r\n\r\nexport type AuthActionsType = ReturnType<typeof setIsLoggedInAC\r\n    | typeof setInformationAboutUserAC\r\n    | typeof setIsLoggedOutAC\r\n    | typeof setLoginError\r\n    | typeof setLoginLoading> // изменили запись в одну строчку !!","import axios from 'axios'\r\n\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    // baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true\r\n})\r\n\r\n//api types\r\n\r\nexport type DefaultResponseType = {\r\n    info: string\r\n    error: string | null\r\n}\r\n\r\nlet backGroundColor = \"linear-gradient(180deg, #E6D4DE 0%, #9890C7 100%)\"\r\n\r\nexport const authApi = {\r\n    restorePassword(email: string) {\r\n        return axiosInstance.post<DefaultResponseType>('/auth/forgot', {\r\n            email,\r\n            message: `<div style='background: ${backGroundColor}; padding: 15px'>\r\n                      <p>To restore your password, follow the link below</p>\r\n                      <a href='https://georgeusynin.github.io/cards-react-redux/#/new_password/$token$'>Restore link</a>\r\n                      </div>`\r\n        })\r\n    },\r\n    setNewPassword(password: string, resetPasswordToken: string) {\r\n        return axiosInstance.post<DefaultResponseType>('/auth/set-new-password', {\r\n            password,\r\n            resetPasswordToken\r\n        })\r\n    }\r\n}","//types\r\n\r\nimport {AppThunkType} from \"./store\";\r\nimport {authApi} from \"../m3-dal/apiRestore\";\r\n\r\ntype InitialStateType = {\r\n    showEmailCheck: boolean\r\n    error: string | null\r\n    isNewPasswordCreated: boolean\r\n    isFetching: boolean\r\n}\r\n\r\nexport type RestorePasswordActionsType =\r\n\r\n    | ReturnType<typeof setShowEmailCheck>\r\n    | ReturnType<typeof setRestorePasswordError>\r\n    | ReturnType<typeof setIsNewPasswordCreated>\r\n    | ReturnType<typeof setRestorePasswordLoading>\r\n\r\n//actions\r\n\r\nexport const setShowEmailCheck = (showEmailCheck: boolean) => {\r\n    return {\r\n        type: 'cards/restorePassword/setShowEmailCheck',\r\n        payload: {\r\n            showEmailCheck\r\n        }\r\n    } as const\r\n}\r\n\r\nexport const setRestorePasswordError = (error: string | null) => {\r\n    return {\r\n        type: 'cards/restorePassword/setError',\r\n        payload: {\r\n            error\r\n        }\r\n    } as const\r\n}\r\nconst setIsNewPasswordCreated = (isNewPasswordCreated: boolean) => {\r\n    return {\r\n        type: 'cards/restorePassword/setIsNewPasswordCreated',\r\n        payload: {\r\n            isNewPasswordCreated\r\n        }\r\n    } as const\r\n}\r\n\r\nexport const setRestorePasswordLoading = (isFetching: boolean) => {\r\n    return {\r\n        type: 'cards/restorePassword/setRestorePasswordLoading',\r\n        payload: {\r\n            isFetching\r\n        }\r\n    } as const\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    showEmailCheck: false,\r\n    error: null,\r\n    isNewPasswordCreated: false,\r\n    isFetching: false\r\n}\r\n\r\nexport const restorePasswordReducer = (state: InitialStateType = initialState, action: RestorePasswordActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"cards/restorePassword/setShowEmailCheck\":\r\n        case \"cards/restorePassword/setError\":\r\n        case \"cards/restorePassword/setIsNewPasswordCreated\":\r\n        case 'cards/restorePassword/setRestorePasswordLoading':\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\n//thunk\r\n\r\nexport const restorePassword = (email: string): AppThunkType => (dispatch) => {\r\n    dispatch(setRestorePasswordLoading(true))\r\n    authApi.restorePassword(email)\r\n        .then(res => {\r\n            dispatch(setShowEmailCheck(true))\r\n        })\r\n        .catch(err => {\r\n            const error = err.response\r\n                ?\r\n                err.response.data.error\r\n                :\r\n                (err.message + ', more details in the console')\r\n            dispatch(setRestorePasswordError(error))\r\n        })\r\n        .finally(()=>{\r\n            dispatch(setRestorePasswordLoading(false))\r\n        })\r\n}\r\n\r\nexport const setNewPassword = (password: string, resetPasswordToken: string): AppThunkType => (dispatch) => {\r\n    dispatch(setRestorePasswordLoading(true))\r\n    authApi.setNewPassword(password, resetPasswordToken)\r\n        .then(res => {\r\n            debugger\r\n            dispatch(setIsNewPasswordCreated(true))\r\n        })\r\n        .catch(err => {\r\n            const error = err.response\r\n                ?\r\n                err.response.data.error\r\n                :\r\n                (err.message + ', more details in the console')\r\n            dispatch(setRestorePasswordError(error))\r\n        })\r\n        .finally(()=>{\r\n            dispatch(setRestorePasswordLoading(false))\r\n        })\r\n}","import axios from 'axios'\r\nimport {CardPackType} from \"../m2-bll/packsReducer\";\r\n\r\n\r\nexport type PacksResponseType = {\r\n    cardPacks: Array<CardPackType>\r\n    cardPacksTotalCount: number\r\n    maxCardsCount: number\r\n    minCardsCount: number\r\n    page: number\r\n    pageCount: number\r\n    token: string\r\n    tokenDeathTime: number\r\n}\r\n\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    // baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true\r\n})\r\n\r\nexport const packsApi = {\r\n    getPacks(packName?: string, min?: number, max?: number, sortPacks?: number, page?: number, pageCount?: number) {\r\n        return axiosInstance.get<PacksResponseType>(\"/cards/pack\", {\r\n            params: {\r\n                packName,\r\n                min,\r\n                max,\r\n                sortPacks,\r\n                page,\r\n                pageCount,\r\n            }\r\n        }).then(res => res.data)\r\n    },\r\n    getPage(page: number) {\r\n        return axiosInstance.get<PacksResponseType>(\"/cards/pack\", {\r\n            params: {\r\n                page\r\n            }\r\n        }).then(res => res.data)\r\n    }\r\n}","import {AppThunkType} from \"./store\";\r\nimport {packsApi, PacksResponseType} from \"../m3-dal/apiPacks\";\r\n\r\nexport type CardPackType = {\r\n    _id: string\r\n    user_id: string\r\n    name: string\r\n    cardsCount: number\r\n    created: string\r\n    updated: string\r\n}\r\n\r\n\r\ntype InitialStateType = {\r\n    cardPacks: Array<CardPackType>\r\n    request: string\r\n    cardPacksTotalCount: number\r\n    maxCardsCount: number\r\n    minCardsCount: number\r\n    page: number\r\n    pageCount: number\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    cardPacks: [],\r\n    request: \"\",\r\n    cardPacksTotalCount: 0,\r\n    maxCardsCount: 9,\r\n    minCardsCount: 4,\r\n    page: 1,\r\n    pageCount: 4\r\n}\r\n\r\nexport const startSearchingAC = (request: string) =>\r\n    ({type: 'packs/START-SEARCHING', request} as const)\r\n\r\nconst setDataPacks = (dataPacks: PacksResponseType) =>\r\n    ({type: 'packs/SET-PACKS', dataPacks} as const)\r\n\r\nexport const packsReducer = (state: InitialStateType = initialState, action: PacksActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"packs/SET-PACKS\":\r\n            return {...state, ...action.dataPacks}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const getDataPacks = (): AppThunkType => async (dispatch) => {\r\n    try {\r\n        const packs = await packsApi.getPacks()\r\n        dispatch(setDataPacks(packs))\r\n    } catch (e) {\r\n\r\n    }\r\n}\r\n\r\nexport const getSearchedPacks = (name: string): AppThunkType => async (dispatch) => {\r\n    try {\r\n        const packs = await packsApi.getPacks(name)\r\n        dispatch(setDataPacks(packs))\r\n    } catch (e) {\r\n\r\n    }\r\n}\r\n\r\nexport const setCurrentPage = (page: number): AppThunkType => async (dispatch) => {\r\n    try {\r\n        const packs = await packsApi.getPage(page)\r\n        dispatch(setDataPacks(packs))\r\n    } catch (e) {\r\n\r\n    }\r\n}\r\n\r\nexport type PacksActionType = ReturnType<typeof startSearchingAC | typeof setDataPacks>","import {applyMiddleware} from \"redux\";\r\nimport {combineReducers, createStore} from \"redux\";\r\nimport thunk, {ThunkAction} from \"redux-thunk\";\r\nimport {AuthActionsType, authReducer} from \"./authReducer\";\r\nimport {ProfileActionsType, profileReducer} from \"./profileReducer\";\r\nimport {RegisterActions, registerReducer} from './registerReducer'\r\nimport {RestorePasswordActionsType, restorePasswordReducer} from \"./restorePasswordReducer\";\r\nimport {PacksActionType, packsReducer} from \"./packsReducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    profile: profileReducer,\r\n    restorePassword: restorePasswordReducer,\r\n    register: registerReducer,\r\n    packs: packsReducer\r\n})\r\n\r\nexport type AppActionsType = RestorePasswordActionsType | RegisterActions | AuthActionsType | ProfileActionsType | PacksActionType\r\n\r\nexport type AppThunkType<ReturnType = void> = ThunkAction<ReturnType, AppRootStateType, unknown, AppActionsType>\r\n\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n\r\n//@ts-ignore\r\nwindow.store = store","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport cls from './Header.module.scss'\r\n\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div className={cls.header}>\r\n            <NavLink to={'/login'}>Login</NavLink>\r\n            <NavLink to={'/registration'}>Registration</NavLink>\r\n            <NavLink replace to={'/profile'}>Profile</NavLink>\r\n            <NavLink to={'/404'}>404</NavLink>\r\n            <NavLink to={'/restore_password'}>Restore password</NavLink>\r\n            <NavLink to={'/new_password'}>New password</NavLink>\r\n            <NavLink to={'/test_components'}>Test components</NavLink>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.scss'\r\nimport {debuglog} from \"util\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: Array<string | null>\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    },\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e)\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={type}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && error.map(err => {\r\n                return <div className={finalSpanClassName}>{err}</div>\r\n            })}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red,\r\n        className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","export default __webpack_public_path__ + \"static/media/eye.109a1739.svg\";","export default __webpack_public_path__ + \"static/media/closedEye.41390b0c.svg\";","import React from \"react\";\r\nimport cls from \"./Preloader.module.scss\"\r\n\r\nexport const Preloader = () => {\r\n    return (\r\n        <div className={cls.loader}></div>\r\n    )\r\n}","import React, {useState} from 'react'\r\nimport cls from './Login.module.scss'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../m2-bll/store\";\r\nimport {NavLink, Redirect} from 'react-router-dom';\r\nimport SuperInputText from \"../common/SuperInput/SuperInputText\";\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport eye from '../../../assets/images/eye.svg'\r\nimport {InputTypeType} from \"../NewPassword/NewPassword\";\r\nimport closedEye from \"../../../assets/images/closedEye.svg\";\r\nimport {PATH} from \"../../App\";\r\nimport {useFormik} from \"formik\";\r\nimport {loginTC, setLoginError} from \"../../m2-bll/authReducer\";\r\nimport {Preloader} from \"../common/preloader/Preloader\";\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    rememberMe?: boolean\r\n}\r\n\r\nexport const Login = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const error = useSelector<AppRootStateType, string | null>(state => state.auth.error)\r\n\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn)\r\n\r\n    const isFetching = useSelector<AppRootStateType, boolean>(state => state.auth.isFetching)\r\n\r\n    const [type, setType] = useState<InputTypeType>(\"password\")\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {}\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            if (!values.password) {\r\n                errors.password = 'Required';\r\n            } else if (values.password.length < 8) {\r\n                errors.password = 'Password must contain from 8 to 15 characters';\r\n            } else if (values.password.length > 15) {\r\n                errors.password = 'Password must contain from 8 to 15 characters';\r\n            }\r\n            return errors\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(loginTC(values))\r\n        }\r\n    })\r\n\r\n    const changeTypeHandler = () => {\r\n        type === 'text' ? setType('password') : setType('text')\r\n    }\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to={PATH.PROFILE}/>\r\n    }\r\n\r\n    return (\r\n        <div className={cls.loginContainer}>\r\n            {\r\n                isFetching\r\n                    ?\r\n                    <Preloader/>\r\n                    :\r\n                    <div className={cls.card}>\r\n                        <h2 className={cls.title}>It-incubator</h2>\r\n                        <h3 className={cls.subtitle}>Sign In</h3>\r\n                        <form onSubmit={formik.handleSubmit}>\r\n                            <label>\r\n                                <p className={cls.titleEmail}>Email</p>\r\n                                <div className={cls.inputContainer}>\r\n                                    <SuperInputText\r\n                                        {...formik.getFieldProps('email')}\r\n                                        className={cls.inputEmailPassword}\r\n                                        type={\"text\"}\r\n                                        onClick={() => dispatch(setLoginError(null))}\r\n                                        // name={'email'}\r\n                                        // onChange={formik.handleChange}\r\n                                        // onBlur={formik.handleBlur}\r\n                                        // value={formik.values.email}\r\n                                    />\r\n                                    {\r\n                                        formik.touched.email &&\r\n                                        formik.errors.email ? <div style={{color: 'red'}}>{formik.errors.email}</div> :\r\n                                            <div style={{color: 'red'}}>{error?.match(/user/) ? error : ''}</div>\r\n                                    }\r\n                                </div>\r\n                            </label>\r\n                            <label>\r\n                                <p className={cls.titlePassword}>Password</p>\r\n                                <div className={cls.inputContainer}>\r\n                                    <div className={cls.eye} onClick={changeTypeHandler}><img\r\n                                        src={type === 'password' ? closedEye : eye} alt=\"eye\"/></div>\r\n                                    <SuperInputText\r\n                                        {...formik.getFieldProps('password')}\r\n                                        className={cls.inputEmailPassword}\r\n                                        onClick={() => dispatch(setLoginError(null))}\r\n                                        type={type}\r\n                                        // name={'password'}\r\n                                        // onBlur={formik.handleBlur}\r\n                                        // onChange={formik.handleChange}\r\n                                        // value={formik.values.password}\r\n                                    />\r\n                                    {formik.touched.password && formik.errors.password ?\r\n                                        <div style={{color: 'red'}}>{formik.errors.password}</div> :\r\n                                        <div style={{color: 'red'}}>{error?.match(/password/) ? error : ''}</div>\r\n                                    }\r\n                                </div>\r\n                            </label>\r\n                            <div className={cls.checkbox}>\r\n                                <label>\r\n                                    <SuperInputText\r\n                                        {...formik.getFieldProps('rememberMe')}\r\n                                        type={'checkbox'}\r\n                                        // name={'rememberMe'}\r\n                                        // onChange={formik.handleChange}\r\n                                        // checked={formik.values.rememberMe}\r\n                                    />\r\n                                    <span className={cls.rememberMe}>Remember me</span>\r\n                                </label>\r\n                            </div>\r\n                            <NavLink to={'/restore_password'} className={cls.restorePassword}>Forgot Password</NavLink>\r\n                            <div className={cls.buttonContainer}>\r\n                                <SuperButton className={cls.button} type={'submit'}><span>Login</span></SuperButton>\r\n                            </div>\r\n                        </form>\r\n                        <p className={cls.newAccount}>Don't have an account</p>\r\n                        <div className={cls.signUp}>\r\n                            <NavLink to={'/registration'}>Sign Up</NavLink>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/avatar.e5117e8e.png\";","import React from \"react\";\r\nimport cls from \"./UserInfo.module.scss\"\r\nimport defaultAvatar from \"../../../../assets/images/avatar.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\ntype UserInfoType = {\r\n    avatar?: string\r\n    name: string\r\n}\r\n\r\nexport const UserInfo: React.FC<UserInfoType> = ({avatar, name}) => {\r\n    return (\r\n        <div className={cls.infoUser}>\r\n            <img className={cls.userPhoto} src={avatar ? avatar : defaultAvatar} alt={\"\"}/>\r\n            <p className={cls.userName}>{name}</p>\r\n            <div className={cls.editProfileWrapper}>\r\n                <NavLink to={'/information_about_user'}>Edit\r\n                    profile</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport cls from \"./UserInfoCards.module.scss\";\r\n\r\ntype UserInfoCardsType = {\r\n    publicCardPacksCount: number\r\n}\r\n\r\nexport const UserInfoCards: React.FC<UserInfoCardsType> = ({publicCardPacksCount}) => {\r\n    return (\r\n        <div className={cls.infoUserCards}>\r\n            <p className={cls.userCards}>Number of cards: {publicCardPacksCount}</p>\r\n        </div>\r\n    )\r\n}","import React, {useEffect} from 'react'\r\nimport cls from './Profile.module.scss'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../m2-bll/store\";\r\nimport {LoginResponseType} from \"../../m3-dal/API\";\r\nimport {NavLink, Redirect} from 'react-router-dom';\r\nimport {isLoggedInApp} from \"../../m2-bll/authReducer\";\r\nimport {UserInfo} from \"./UserInfo/UserInfo\";\r\nimport {UserInfoCards} from \"./UserInfoCards/UserInfoCards\";\r\nimport {Preloader} from \"../common/preloader/Preloader\";\r\n\r\n\r\nexport const Profile = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const isFetchingAUTH = useSelector<AppRootStateType, boolean>(state => state.auth.isFetching) //isFetching from AUTH reducer!!!\r\n    const isFetchingPROFILE = useSelector<AppRootStateType, boolean>(state => state.profile.isFetching)\r\n    const info = useSelector<AppRootStateType, LoginResponseType>(state => state.profile.informationAboutUser)\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn)\r\n\r\n    useEffect(() => {\r\n        if (!info._id) {\r\n            debugger\r\n            dispatch(isLoggedInApp())\r\n        }\r\n    }, [info._id])\r\n\r\n\r\n    if (!isLoggedIn) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    return (\r\n        <div className={cls.profileContainer}>\r\n            {\r\n                isFetchingAUTH || isFetchingPROFILE\r\n                    ?\r\n                    <Preloader/>\r\n                    :\r\n                    <div className={cls.card}>\r\n                        <div className={cls.info}>\r\n                            <UserInfo avatar={info.avatar} name={info.name}/>\r\n                            <UserInfoCards publicCardPacksCount={info.publicCardPacksCount}/>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport cls from './PageNotFound.module.css'\r\n\r\n\r\nexport const PageNotFound = () => {\r\n    return (\r\n        <div className={cls.pageNotFoundContainer}>\r\n            <h1>PageNotFound</h1>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/letter.bc3a4042.svg\";","import React from 'react'\r\nimport cls from './CheckPassword.module.scss'\r\nimport letter from '../../../assets/images/letter.svg'\r\nimport { NavLink } from 'react-router-dom'\r\nimport {PATH} from \"../../App\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setShowEmailCheck} from \"../../m2-bll/restorePasswordReducer\";\r\n\r\ntype CheckPasswordType = {\r\n    email: string\r\n}\r\n\r\nexport const CheckPassword: React.FC<CheckPasswordType> = ({email}) => {\r\n\r\n   const dispatch = useDispatch()\r\n\r\n    return (\r\n        <div className={cls.checkPasswordContainer}>\r\n            <div className={cls.card}>\r\n                <h2 className={cls.title}>It-incubator</h2>\r\n\r\n                <div className={cls.imgContainer}>\r\n                    <img src={letter} alt=\"\"/>\r\n                </div>\r\n\r\n                <h3 className={cls.subtitle}>Check email</h3>\r\n\r\n                <p className={cls.firstNote}>{`We've sent an Email with instructions to `}<span>{email}</span></p>\r\n                <p className={cls.secondNote}><NavLink to={PATH.LOGIN} onClick={()=>dispatch(setShowEmailCheck(false))}>Try logging in</NavLink> again when you change your password</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport cls from './RestorePassword.module.scss'\r\nimport SuperInputText from \"../common/SuperInput/SuperInputText\";\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../m2-bll/store\";\r\nimport {CheckPassword} from \"../CheckPassword/CheckPassword\";\r\nimport {restorePassword, setRestorePasswordError} from \"../../m2-bll/restorePasswordReducer\";\r\nimport {useFormik} from \"formik\";\r\nimport {Preloader} from \"../common/preloader/Preloader\";\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n}\r\n\r\nexport const RestorePassword = () => {\r\n\r\n    const showEmailCheck = useSelector<AppRootStateType, boolean>(state => state.restorePassword.showEmailCheck)\r\n\r\n    const error = useSelector<AppRootStateType, null | string>(state => state.restorePassword.error)\r\n\r\n    const isFetching = useSelector<AppRootStateType, boolean>(state => state.restorePassword.isFetching)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: ''\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {}\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            return errors\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(restorePassword(values.email))\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className={cls.restorePasswordContainer}>\r\n            {\r\n                isFetching\r\n                    ?\r\n                    <Preloader/>\r\n                    :\r\n                    showEmailCheck\r\n                        ?\r\n                        <CheckPassword email={formik.values.email}/>\r\n                        :\r\n                        <div className={cls.card}>\r\n                            <h2 className={cls.title}>It-incubator</h2>\r\n                            <h3 className={cls.subtitle}>Forgot your password?</h3>\r\n                            <form onSubmit={formik.handleSubmit}>\r\n                                <div className={cls.inputContainer}>\r\n                                    <SuperInputText\r\n                                        {...formik.getFieldProps('email')}\r\n                                        className={cls.inputEmail}\r\n                                        type={\"text\"}\r\n                                        placeholder={'Email'}\r\n                                        onClick={() => dispatch(setRestorePasswordError(null))}\r\n                                        // name={'email'}\r\n                                        // onChange={formik.handleChange}\r\n                                        // onBlur={formik.handleBlur}\r\n                                        // value={formik.values.email}\r\n                                    />\r\n                                    {\r\n                                        formik.touched.email &&\r\n                                        formik.errors.email ? <div style={{color: 'red'}}>{formik.errors.email}</div> :\r\n                                            <div style={{color: 'red'}}>{error}</div>\r\n                                    }\r\n                                </div>\r\n                                <p className={cls.firstNote}>Enter your email address and we will send\r\n                                    you further\r\n                                    instructions</p>\r\n                                <div className={cls.buttonContainer}>\r\n                                    <SuperButton className={cls.button}\r\n                                                 type={'submit'}><span>Send Instructions</span></SuperButton>\r\n                                </div>\r\n                            </form>\r\n                            <p className={cls.secondNote}>Did you remember your password?</p>\r\n                            <div className={cls.reLogin}>\r\n                                <NavLink to={'/login'}>Try logging in</NavLink>\r\n                            </div>\r\n                        </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport {Redirect, useParams} from 'react-router-dom'\r\nimport cls from './NewPassword.module.scss'\r\nimport SuperInputText from \"../common/SuperInput/SuperInputText\";\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../m2-bll/store\";\r\nimport {restorePassword, setNewPassword, setRestorePasswordError} from \"../../m2-bll/restorePasswordReducer\";\r\nimport eye from \"../../../assets/images/eye.svg\";\r\nimport closedEye from \"../../../assets/images/closedEye.svg\";\r\nimport {PATH} from \"../../App\";\r\nimport {useFormik} from \"formik\";\r\nimport {setLoginError} from \"../../m2-bll/authReducer\";\r\nimport {Preloader} from \"../common/preloader/Preloader\";\r\n\r\nexport type InputTypeType = \"password\" | \"text\" | \"checkbox\"\r\n\r\n\r\ntype FormikErrorType = {\r\n    password?: string\r\n}\r\n\r\nexport const NewPassword = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [type, setType] = useState<InputTypeType>(\"password\")\r\n\r\n    const isNewPasswordCreated = useSelector<AppRootStateType, boolean>(state => state.restorePassword.isNewPasswordCreated)\r\n\r\n    const isFetching = useSelector<AppRootStateType, boolean>(state => state.restorePassword.isFetching)\r\n\r\n    const error = useSelector<AppRootStateType,string | null>(state=>state.restorePassword.error)\r\n\r\n    const {token} = useParams<{ token: string }>();\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            password: ''\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {}\r\n            if (!values.password) {\r\n                errors.password = 'Required';\r\n            } else if (values.password.length < 8) {\r\n                errors.password = 'Password must contain from 8 to 15 characters';\r\n            } else if (values.password.length > 15) {\r\n                errors.password = 'Password must contain from 8 to 15 characters';\r\n            }\r\n            return errors\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(setNewPassword(values.password, token))\r\n        }\r\n    })\r\n\r\n    const changeTypeHandler = () => {\r\n        type === 'text' ? setType('password') : setType('text')\r\n    }\r\n\r\n    if (isNewPasswordCreated) {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n\r\n    return (\r\n        <div className={cls.newPasswordContainer}>\r\n            {\r\n                isFetching\r\n                    ?\r\n                    <Preloader/>\r\n                    :\r\n                    <div className={cls.card}>\r\n                        <h2 className={cls.title}>It-incubator</h2>\r\n                        <h3 className={cls.subtitle}>Create new Password</h3>\r\n                        <form onSubmit={formik.handleSubmit}>\r\n                            <div className={cls.inputContainer}>\r\n                                <div className={cls.eye} onClick={changeTypeHandler}><img\r\n                                    src={type === 'password' ? closedEye : eye} alt=\"eye\"/></div>\r\n                                <SuperInputText\r\n                                    {...formik.getFieldProps('password')}\r\n                                    className={cls.inputPassword}\r\n                                    onClick={() => dispatch(setRestorePasswordError(null))}\r\n                                    type={type}\r\n                                    placeholder={'Password'}\r\n                                    // name={'password'}\r\n                                    // onBlur={formik.handleBlur}\r\n                                    // onChange={formik.handleChange}\r\n                                    // value={formik.values.password}\r\n                                />\r\n                                {formik.touched.password && formik.errors.password ?\r\n                                    <div style={{color: 'red'}}>{formik.errors.password}</div> : <div style={{color: 'red', margin:'0px 30px'}}>{error}</div>\r\n                                }\r\n                            </div>\r\n                            <p className={cls.note}>Create new password and press the button below</p>\r\n\r\n                            <div className={cls.buttonContainer}>\r\n                                <SuperButton\r\n                                    className={cls.button}\r\n                                    type={'submit'}\r\n                                >\r\n                                    <span>Create</span>\r\n                                </SuperButton>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React from \"react\";\r\nimport cls from './TestComponents.module.css'\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport SuperInputText from \"../common/SuperInput/SuperInputText\";\r\nimport SuperCheckbox from \"../common/SuperCheckbox/SuperCheckbox\";\r\n\r\nexport const TestComponents = () => {\r\n    return (\r\n        <div className={cls.testComponentsContainer}>\r\n            <h1>Common components</h1>\r\n            <div className={cls.componentsContainer}>\r\n                <div>\r\n                    <h2>Button</h2>\r\n                    <SuperButton>\r\n                        Button\r\n                    </SuperButton>\r\n                </div>\r\n                <div>\r\n                    <h2>Input Text</h2>\r\n                    <SuperInputText/>\r\n                </div>\r\n                <div>\r\n                    <h2>CheckBox</h2>\r\n                    <SuperCheckbox/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useEffect, useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport cls from './PersonalInfo.module.scss'\r\nimport {editUserProfileTC} from \"../../../m2-bll/profileReducer\";\r\nimport {PATH} from \"../../../App\";\r\nimport {AppRootStateType} from \"../../../m2-bll/store\";\r\nimport defaultAvatar from '../../../../assets/images/avatar.png'\r\nimport SuperInputText from \"../../common/SuperInput/SuperInputText\";\r\nimport {isLoggedInApp} from \"../../../m2-bll/authReducer\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport {Preloader} from \"../../common/preloader/Preloader\";\r\n\r\nexport const PersonalInfo: React.FC = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    let history = useHistory()\r\n\r\n    const id = useSelector<AppRootStateType, string>(state => state.profile.informationAboutUser._id)\r\n    const name = useSelector<AppRootStateType, string>(state => state.profile.informationAboutUser.name)\r\n    const avatar = useSelector<AppRootStateType, string>(state => state.profile.informationAboutUser.avatar)\r\n\r\n\r\n    useEffect(() => {\r\n        if (!id) {\r\n            dispatch(isLoggedInApp())\r\n        }\r\n    }, [])\r\n\r\n    let [ava, setAva] = useState<string>('')\r\n    let [nickname, setNickname] = useState<string>(name)\r\n\r\n    const cancelHandler = () => {\r\n        history.push(PATH.PROFILE)\r\n    }\r\n    const saveHandler = () => {\r\n        dispatch(editUserProfileTC(nickname, ava))\r\n        history.push(PATH.PROFILE)\r\n    }\r\n\r\n    return (\r\n            <div className={cls.infoContainer}>\r\n                <div className={cls.card}>\r\n                    <h2 className={cls.title}>Personal Inforamtion</h2>\r\n                    <div className={cls.imgWrapper}>\r\n                        <img src={avatar ? avatar : defaultAvatar} alt='profile_photo'/>\r\n                    </div>\r\n                    <label>\r\n                        <p className={cls.titleEmail}>Nickname</p>\r\n                        <div className={cls.inputContainer}>\r\n                            <SuperInputText\r\n                                className={cls.inputNicknameAvatar}\r\n                                value={nickname}\r\n                                type={\"text\"}\r\n                                onChangeText={setNickname}\r\n                                // error={errorEmail}\r\n                            />\r\n                        </div>\r\n                    </label>\r\n                    <label>\r\n                        <p className={cls.titleEmail}>Avatar</p>\r\n                        <div className={cls.inputContainer}>\r\n                            <SuperInputText\r\n                                className={cls.inputNicknameAvatar}\r\n                                value={ava}\r\n                                type={\"text\"}\r\n                                onChangeText={setAva}\r\n                                // error={errorEmail}\r\n                            />\r\n                        </div>\r\n                    </label>\r\n                    <div className={cls.buttonContainer}>\r\n                        <button\r\n                            className={cls.cancelButton}\r\n                            onClick={cancelHandler}>\r\n                            <span>Cancel</span>\r\n                        </button>\r\n                        <button\r\n                            className={cls.registerButton}\r\n                            onClick={saveHandler}\r\n                        >\r\n                            <span>Save</span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    )\r\n}","import React, {useState} from 'react'\r\nimport cls from './Register.module.scss'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {register, setRegisterError} from '../../m2-bll/registerReducer'\r\nimport {AppRootStateType} from '../../m2-bll/store'\r\nimport SuperInputText from '../common/SuperInput/SuperInputText'\r\nimport {Redirect} from \"react-router\";\r\nimport eye from \"../../../assets/images/eye.svg\";\r\nimport {InputTypeType} from \"../NewPassword/NewPassword\";\r\nimport closedEye from \"../../../assets/images/closedEye.svg\";\r\nimport {PATH} from \"../../App\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {useFormik} from \"formik\";\r\nimport {Preloader} from \"../common/preloader/Preloader\";\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    confirmPassword?: string\r\n}\r\n\r\nexport const Register: React.FC = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: ''\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            if (!values.password) {\r\n                errors.password = 'Required';\r\n            } else if (values.password.length < 8) {\r\n                errors.password = 'Password must contain from 8 to 15 characters';\r\n            } else if (values.password.length > 15) {\r\n                errors.password = 'Password must contain from 8 to 15 characters';\r\n            }\r\n            if (!values.confirmPassword) {\r\n                errors.confirmPassword = 'Required';\r\n            } else if (values.password.length !== values.confirmPassword.length) {\r\n                errors.confirmPassword = \"Passwords don't match\";\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(register(values.email, values.password))\r\n        }\r\n    })\r\n\r\n    const error = useSelector<AppRootStateType, string | null>(state => state.register.error)\r\n    const isFetching = useSelector<AppRootStateType, boolean>(state => state.register.isFetching)\r\n    const isRegistered = useSelector<AppRootStateType, boolean>(state => state.register.isRegistered)\r\n\r\n    const history = useHistory()\r\n\r\n    const [type, setType] = useState<InputTypeType>(\"password\")\r\n\r\n    const cancelHandler = () => {\r\n        history.push(PATH.LOGIN)\r\n    }\r\n\r\n    const changeTypeHandler = () => {\r\n        type === 'text' ? setType('password') : setType('text')\r\n    }\r\n\r\n\r\n    // redirect logic\r\n    if (isRegistered) return <Redirect to={PATH.LOGIN}/>\r\n\r\n    return (\r\n        <div className={cls.registrationContainer}>\r\n            {\r\n                isFetching\r\n                    ?\r\n                    <Preloader/>\r\n                    :\r\n                    <div className={cls.card}>\r\n                        <h2 className={cls.title}>IT-Incubator</h2>\r\n                        <h3 className={cls.subtitle}>Sign Up</h3>\r\n                        <form onSubmit={formik.handleSubmit}>\r\n                            <label>\r\n                                <p className={cls.titleEmail}>Email</p>\r\n                                <div className={cls.inputContainer}>\r\n                                    <SuperInputText\r\n                                        {...formik.getFieldProps('email')}\r\n                                        className={cls.inputEmailPassword}\r\n                                        type={\"text\"}\r\n                                        onClick={() => dispatch(setRegisterError(null))}\r\n                                        // name={'email'}\r\n                                        // onChange={formik.handleChange}\r\n                                        // onBlur={formik.handleBlur}\r\n                                        // value={formik.values.email}\r\n                                    />\r\n                                    {\r\n                                        formik.touched.email &&\r\n                                        formik.errors.email ? <div style={{color: 'red'}}>{formik.errors.email}</div> :\r\n                                            <div style={{color: 'red'}}>{error}</div>\r\n                                    }\r\n                                </div>\r\n                            </label>\r\n                            <label>\r\n                                <p className={cls.titlePassword}>Password</p>\r\n                                <div className={cls.inputContainer}>\r\n                                    <div className={cls.eye} onClick={changeTypeHandler}><img\r\n                                        src={type === 'password' ? closedEye : eye} alt=\"eye\"/></div>\r\n                                    <SuperInputText\r\n                                        {...formik.getFieldProps('password')}\r\n                                        className={cls.inputEmailPassword}\r\n                                        type={type}\r\n                                        // name={'password'}\r\n                                        // onBlur={formik.handleBlur}\r\n                                        // onChange={formik.handleChange}\r\n                                        // value={formik.values.password}\r\n                                    />\r\n                                    {formik.touched.password && formik.errors.password ?\r\n                                        <div style={{color: 'red'}}>{formik.errors.password}</div> : null\r\n                                    }\r\n                                </div>\r\n                            </label>\r\n                            <label>\r\n                                <p className={cls.titlePassword}>Confirm Password</p>\r\n                                <div className={cls.inputContainer}>\r\n                                    <div className={cls.eye} onClick={changeTypeHandler}><img\r\n                                        src={type === 'password' ? closedEye : eye} alt=\"eye\"/></div>\r\n                                    <SuperInputText\r\n                                        {...formik.getFieldProps('confirmPassword')}\r\n                                        className={cls.inputEmailPassword}\r\n                                        type={type}\r\n                                        // name={'confirmPassword'}\r\n                                        // onBlur={formik.handleBlur}\r\n                                        // onChange={formik.handleChange}\r\n                                        // value={formik.values.confirmPassword}\r\n                                    />\r\n                                    {formik.touched.confirmPassword && formik.errors.confirmPassword ?\r\n                                        <div style={{color: 'red'}}>{formik.errors.confirmPassword}</div> : null}\r\n                                </div>\r\n                            </label>\r\n\r\n                            <div className={cls.buttonContainer}>\r\n                                <button\r\n                                    className={cls.cancelButton}\r\n                                    onClick={cancelHandler}>\r\n                                    <span>Cancel</span>\r\n                                </button>\r\n                                <button type={\"submit\"}\r\n                                        className={cls.registerButton}\r\n                                >\r\n                                    <span>Register</span>\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {NavLink, useLocation} from \"react-router-dom\";\r\nimport cls from \"./HeaderMain.module.scss\"\r\nimport {PATH} from \"../../App\";\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport {logoutTC} from \"../../m2-bll/authReducer\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\n\r\nexport const HeaderMain = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    let location = useLocation()\r\n\r\n    const onClickHandler = () => {\r\n        dispatch(logoutTC())\r\n    }\r\n\r\n    return (\r\n        <div className={cls.headerContainer}>\r\n            <div className={cls.wrapper}>\r\n                <h1 className={cls.logo}>It-incubator</h1>\r\n                <div className={cls.linksContainer}>\r\n                    <div className={cls.linkContainer}>\r\n                        <NavLink to={PATH.PACKS_LIST}  className={location.pathname === PATH.PACKS_LIST ? cls.active : \"\"} tabIndex={1}>Packs list</NavLink>\r\n                    </div>\r\n                    <div className={cls.linkContainer}>\r\n                        <NavLink to={PATH.PROFILE} tabIndex={2} className={location.pathname === PATH.PROFILE ? cls.active : \"\"}>Profile</NavLink>\r\n                    </div>\r\n                </div>\r\n                <div className={cls.buttonContainer}>\r\n                    <SuperButton onClick={onClickHandler} className={cls.logoutBtn}><span>Logout</span></SuperButton>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport cls from \"./TableHeader.module.scss\"\r\n\r\ntype TableHeaderType = {\r\n    className: string\r\n}\r\n\r\nexport const TableHeader: React.FC<TableHeaderType> = ({className}) => {\r\n\r\n    return (\r\n        <div className={`${className} ${cls.tableHeader}`}>\r\n            <div>Name</div>\r\n            <div>Cards</div>\r\n            <div>Last Updated</div>\r\n            <div>Created by</div>\r\n            <div>Actions</div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport cls from \"./TableData.module.scss\"\r\nimport {CardPackType} from \"../../../../m2-bll/packsReducer\";\r\n\r\n\r\nexport const TableData: React.FC<CardPackType> = ({\r\n    name, _id,cardsCount,created,updated,user_id,children\r\n                                                  }) => {\r\n\r\n    return (\r\n        <div className={cls.tableData}>\r\n            <div>{name}</div>\r\n            <div>{cardsCount}</div>\r\n            <div>{updated}</div>\r\n            <div>{created}</div>\r\n            <div>Actions</div>\r\n        </div>\r\n    )\r\n}","import React, {useEffect} from \"react\";\r\nimport cls from \"./TablePacks.module.scss\"\r\nimport {TableHeader} from \"./TableHeader/TableHeader\";\r\nimport {TableData} from \"./TableData/TableData\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../m2-bll/store\";\r\nimport {CardPackType} from \"../../../m2-bll/packsReducer\";\r\n\r\nexport const TablePacks = () => {\r\n\r\n\r\n    const packsData = useSelector<AppRootStateType, Array<CardPackType>>(state => state.packs.cardPacks)\r\n\r\n    return (\r\n        <div className={cls.tableContainer}>\r\n            <TableHeader className={cls.tableHeader}/>\r\n            {\r\n                packsData.map(pack => {\r\n                    return (\r\n                        <TableData\r\n                            name={pack.name}\r\n                            _id={pack._id}\r\n                            cardsCount={pack.cardsCount}\r\n                            created={pack.created}\r\n                            updated={pack.updated}\r\n                            user_id={pack.user_id}\r\n                            key={pack._id}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react'\r\nimport SuperInputText from \"../SuperInput/SuperInputText\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {getSearchedPacks, startSearchingAC} from \"../../../m2-bll/packsReducer\";\r\n\r\ntype SearchPropsType = {\r\n    className: string\r\n}\r\n\r\nconst Search: React.FC<SearchPropsType> = ({className}) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const [request, setRequest] = useState<string>(\"\")\r\n\r\n\r\n    const handlePress = () => {\r\n        dispatch(getSearchedPacks(request))\r\n        setRequest('')\r\n    }\r\n\r\n    return (\r\n        <SuperInputText\r\n            value={request}\r\n            type={\"text\"}\r\n            onChangeText={setRequest}\r\n            onEnter={handlePress}\r\n            placeholder={\"Search...\"}\r\n            className={className}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../m2-bll/store\";\r\nimport {setCurrentPage} from \"../../../m2-bll/packsReducer\";\r\nimport styles from \"./Paginator.module.scss\"\r\n\r\n\r\nconst Paginator = () => {\r\n\r\n    const cardPacksTotalCount = useSelector<AppRootStateType, number>(state => state.packs.cardPacksTotalCount)\r\n    const page = useSelector<AppRootStateType, number>(state => state.packs.page)\r\n    const pageCount = useSelector<AppRootStateType, number>(state => state.packs.pageCount)\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= 30/pageCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    const onPageChanges = (page: number) => {\r\n        dispatch(setCurrentPage(page))\r\n        // dispatch(getPageCountAC(page, pageCount))\r\n    }\r\n\r\n    return <div>\r\n        <div>\r\n            {(pages || []).map((p) => {\r\n                return <span\r\n                    className={page === p ? styles.selectedPage : \"\"}\r\n                    key={p}\r\n                    onClick={() => {\r\n                        onPageChanges(p)\r\n                    }}>{p}</span>\r\n            })}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Paginator;","import React, {useEffect} from \"react\";\r\nimport cls from \"./PacksList.module.scss\"\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport SuperInputText from \"../common/SuperInput/SuperInputText\";\r\nimport {TablePacks} from \"./TablePacks/TablePacks\";\r\nimport Search from \"../common/Search/Search\";\r\n\r\nimport {useDispatch} from \"react-redux\";\r\nimport {getDataPacks} from \"../../m2-bll/packsReducer\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\n\r\n\r\nexport const PacksList = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(getDataPacks())\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className={cls.packlistContainer}>\r\n            <div className={cls.card}>\r\n                <div className={cls.info}>\r\n                    <p className={cls.ownerTitle}>Show packs cards</p>\r\n                    <div className={cls.buttonsContainer}>\r\n                        <SuperButton className={cls.myButton}>My</SuperButton>\r\n                        <SuperButton className={cls.allButton}>All</SuperButton>\r\n                    </div>\r\n                    <p className={cls.numberTitle}>Number of cards</p>\r\n                    <SuperInputText type={'range'} className={cls.range}/>\r\n                </div>\r\n                <div className={cls.packslist}>\r\n                    <h2 className={cls.packslistTitle}>Packs list</h2>\r\n                    <div className={cls.search_AddButtonContainer}>\r\n                        <Search className={cls.search}/>\r\n                        <div className={cls.addButtonContainer}>\r\n                            <SuperButton className={cls.addPackButton}><span>Add new pack</span></SuperButton>\r\n                        </div>\r\n                    </div>\r\n                    <TablePacks/>\r\n                    <Paginator/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {Route} from 'react-router-dom';\r\nimport './App.scss';\r\nimport {Header} from './m1-ui/Header/Header';\r\nimport {Login} from \"./m1-ui/Login/Login\";\r\nimport {Profile} from \"./m1-ui/Profile/Profile\";\r\nimport {PageNotFound} from \"./m1-ui/PageNotFound/PageNotFound\";\r\nimport {RestorePassword} from \"./m1-ui/RestorePassword/RestorePassword\";\r\nimport {NewPassword} from \"./m1-ui/NewPassword/NewPassword\";\r\nimport {TestComponents} from \"./m1-ui/TestComponents/TestComponents\";\r\nimport {PersonalInfo} from \"./m1-ui/Profile/PersonalInfo/PersonalInfo\";\r\nimport {Register} from \"./m1-ui/Registration/Register\";\r\nimport {HeaderMain} from \"./m1-ui/HeaderMain/HeaderMain\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"./m2-bll/store\";\r\nimport {PacksList} from \"./m1-ui/PacksList/PacksList\";\r\n\r\nexport const PATH = {\r\n    PROFILE: '/profile',\r\n    PACKS_LIST: '/packslist',\r\n    USER_INFO: '/information_about_user',\r\n    LOGIN: '/login',\r\n    REGISTRATION: '/registration',\r\n    TEST_COMPONENTS: '/test_components',\r\n    PAGE_NOT_FOUND: '/404',\r\n    RESTORE_PASSWORD: '/restore_password',\r\n    NEW_PASSWORD: \"/new_password/:token?\"\r\n}\r\n\r\nconst App = () => {\r\n\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn)\r\n\r\n    return (\r\n        <div className='app-wrapper'>\r\n            <Header/>\r\n            {isLoggedIn && <HeaderMain/>}\r\n            <div className='app-wrapper-content'>\r\n                <Route exact path={PATH.LOGIN} render={() => <Login/>}/>\r\n                <Route path={PATH.PROFILE} render={() => <Profile/>}/>\r\n                <Route path={PATH.PACKS_LIST} render={() => <PacksList/>}/>\r\n                <Route path={PATH.USER_INFO} render={() => <PersonalInfo/>}/>\r\n                <Route path={PATH.REGISTRATION} render={() => <Register/>}/>\r\n                <Route path={PATH.TEST_COMPONENTS} render={() => <TestComponents/>}/>\r\n                <Route path={PATH.PAGE_NOT_FOUND} render={() => <PageNotFound/>}/>\r\n                <Route path={PATH.RESTORE_PASSWORD} render={() => <RestorePassword/>}/>\r\n                <Route path={PATH.NEW_PASSWORD}\r\n                       render={() => <NewPassword/>}/> {/* для отображения <NewPassword/> после token стоит \"?\" */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport reportWebVitals from './reportWebVitals'\r\nimport { HashRouter } from 'react-router-dom'\r\nimport { Provider } from 'react-redux'\r\nimport {store} from \"./n1-main/m2-bll/store\";\r\nimport App from \"./n1-main/App\";\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <Provider store={store}>\r\n        <App/>\r\n      </Provider>\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}